%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Background_2.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: User
%%CreationDate: 10/13/2016
%%BoundingBox: 0 0 650 1024
%%HiResBoundingBox: 0 0 650 1024
%%CropBox: 0 0 650 1024
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 84 128 8%%BeginData: 24114 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C453A183A183A183AA6C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9A6823A18183A183A183A82C9C8C9A6C98218183AA8113A17
%1811185EC8C8C9A6C8A6C9A6C8A6C9C8C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9C8
%821118171811181718113A1782767C76A1341811AE3A173A183A173A185E
%A0C9C8C9C8C9C8C9825EC8C9A0C9C8C9C8C9C8C9C8C9C8C9A6C9C8C9A6C9
%C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9A0A7823A173A1818
%113A183A173A5276517676A1341883171811181718111834C8A6C9A6C8A0
%C9A63A11A6C2C8C2C9A6C8A0C9A6C8A0C9A6C8A0C8A6C8A0C9A6C8A0C9A6
%C8A0C8A0C8A0C9A6C8A0C9A6C8A0C9A0C811181118111811111112111851
%764B765176767C118A3A11181118113A3AA7C8C9C8C9C8C9C882181882C9
%8283A6C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9A683183A183A11181118111834765176527C767C
%A05883FD051118171817A6C8C9C8C8A6A75E18113A18181182C8C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C958
%825E3A7C18171811121111111211344B524B76767652A1528A1811183358
%583A1782C8C9A6C9C882173A183A1718183AC8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8825E3A173A1818183A
%11121118111211347C765176517C767C767D8311112D7676A07658118282
%3A7C5E11181118171811183A827CC9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8581817181118111811121111111211
%587676767C76524B76767C76A8183476517676A1A05E183A185E1818183A
%1818183A183A173AA6C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9A6C9C85E183A113A1818113A111811181134767C767676A1
%765252A1A1A1A811764B52517652A17C1817181118171817181118111817
%3A82C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8C8
%5E3A5E171811111112111111121111111251764B76527676A1517676A176
%A8584B7651FD0476A13318113A173A181811181112113A185EA6C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C982181818111811
%12111811121118111811764B52517C76767C7C517C7C7C83514B4B525176
%5276767C111211181118FD051118111811A6C2C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A63A1118FD0D11334B524B525176517C
%767676A151A87C767C517676A176A17C3A183A183A111211181118113A18
%5EC8C982C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C85E18
%3A113A113A113A113A113A113A113A337651765176527676A1527C767CA8
%7676767C4B5276A176A13418171811121111111211111118173A341882A6
%A6C9C8C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A67C4B524B525176527C7676767C51CA7676767C7C4B
%767CA1A07C343A11181118111211181118173A1818183A3AA7A6C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8CE7C524B5251764B767CA14B7C7676A8517651767676517C76A17676
%767C1111111211111112111211121118113A113AA0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A6C87C7C
%5176757675A0767C7CA07CCA7C767676A1767676A17676767CA17D111811
%181118111811181118113A18183A83A6C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CEC8C9C8C9A6C9A6
%C9C8CEC8C9CF4B765276767C4B7C76765276517CA0341112111111121111
%111211111118171811A6C8C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A07C767DA0C8A6C9A6CF
%76517676A1767676A1527C767651A1581111121112111211121112111211
%1818183AA7C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8A0767676A1A0C9C8C9CF4B764B76767C
%4B7C767651764B51767D575E5782585E5782585E5782585E57825E5E7CC9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A07C767C5276A0C8A0CF76517676A1767676A1527C51
%524B7CA0C9C8CEC8C9C8CEC8C9C8CEC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9A6C9C8C9C8C9C8C9CF7CA075A0A0A07CC9FD04A07CA0A0C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9C8C8A6
%C9A6C8A6FFCEC8CEC8C9A6C9C8C9C8C9C8CEC8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0
%C9A0A0767D7CC8A6C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6
%C8A0C9A6C8A0C9A6C8A0C9A0C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C8A6C8A0C9A6C8A0C9A6C8A0C8A0CFC9C8A1767C767D
%A0C9C8C9C8C9C8C9A6C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%A0C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6A076A0767676C9C8C8A6
%C9A0C8A6C9A6C8A6C9A6C8A6C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A0C9A6
%C8A6C9A6C8A6C9A6C8A6C9A0C8A6C9A6C8A6C9A6C8A6C9A6C8A0C9A6C8A6
%C9A6C8A6C9A6C8A0C9A6CFC9C8C9A6C9A6C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9CFA6C8A0C9C8C8A6C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0CFC9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FFC9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6CFC9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9CFA6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FFC9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A6C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9A0A1A0C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9CFA6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9C8A6527C7676A0C9C8C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8A076A0
%767C76C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9FD07A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8CEC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A6C9A6C8A6C9A6C8A0C9A6C8A6C9A6
%C8A6C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A0C9A0C8A6C9A6C8A6C9A6C8A6
%C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A0C9A0
%C8A6C9A6C8A6FFC9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9C8C9A0C9
%C8C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9
%C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9C8C9A6C9C8C9C8C9C8C9
%CFA0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6CFC9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FFC9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%CFA6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6CFC9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9CFA6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%FFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6
%C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0
%C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9CFA6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6
%C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6
%C9A6C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9C8C9
%CFA0C8A0C9A0C8A6C9A6C8A0C9A6C8A0C8A0C8A0C9A6C8A0C9A6C8A0C8A0
%C8A0C9A6C8A0C9A6C8A0C9A0C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6C8A0
%C9A6C8A0C9A6C8A0C8A0C8A0C9A6C8A0C9A6C8A0C8A0C8A0CFC9C8C9A0A1
%7CC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFC8C8FD04767CC9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6FFC9C8A0767C767C76C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9CFA0C9A6A0A0C8A0A0A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6CF
%C9C8C9C8CEC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CF
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FFC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9CFA6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6CF
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9C8C8A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8CEC8C9A0C9C8C9C8C9CFA6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A07D767C
%A0C9C8C8A6FFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8A0767C76A1A0C9C8C9CF
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A67C76A076767CC8A6CFC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A6C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9A0C9C8C9A6C9C8C9CFA6C9A6C8A6C9A6C8A0C9A6C8
%A6C9A6C8A6C9A6C8A0C8A0C8A6C9A6C8A6C9A6C8A6C9A0C8A6C9A6C8A6C9
%A6C8A6C9A6C8A0C9A6C8A6C9A6C8A6C9A6C8A0C8A6C8A6C9A6C8A6C9A6C8
%A6C9A0C8A6C9C8C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0CF
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FFC9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CF
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6CFC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9CFA6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6FF
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A6C9A6C8A0C9A6C8
%A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6CFC9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A0A7A0C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9CFA6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C97C76767CA0C9A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6CFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8A1767676A17CC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CF
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0A07CA0
%767CA0C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9
%A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0CFC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CEC8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CFA6C8A0C9C8C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9C8C8A6C9C8C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8
%A0C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8C8C9A6C8A0FFC9C8C9C8A7A6C9C8C9C8C9C8C9C8C9A0C9C8
%C9C8C9A0A1A0C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9A6C9C8C9A6C9C8C9C8
%C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C8
%A7A6C9C8C9CAA0C8C8A61182C8C8A0C9A6C8A0C8A0C8A6C9C8A05176527C
%76C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C8A6C8A0C9A6C8A0C9C8C8A0C8
%A0C8A6C9A6C8A0C9A6C8A0C9A0C8A0C9A6C8A0C9A6C8A0C8115EA0C8A6CF
%C9C8C93A183AC9C8C9C8C9C8C9C8C9C8C9C8C952FD0476A1A0C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C93A83C8C9A6C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C95E183AC9C8C9CFA6C9A618113A82
%5E115EA6C8A6C9A6C8A6C976524BFD0476A1A0C8A6C9A6C8A6C9A6C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C95E185882175EC8C9A6C8A6C9A6C8A6C9A6C8
%A6C9A6C8A6C9A6C9C83A173A825E39AEC95E5E1818171818183AC9C8C9C8
%C9C8C9A0764B52517C767676A1C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9A63A183A173A82A682C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9825E183A18181718AE821811181118111811A6C2C9A6C8A0C9C8A04B52
%4B52527C527676C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C95E3A
%11181118113A115EA0C9A6C8A0C9A6C8A0C9A6C8A0C9C8A67C3A11181118
%111811AE18183A183A183A183A3A5E82C9C8CEC8A1767D76764B7676A176
%A1A0C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C83A183A183A183A18
%3AA6C9C8C9C8C9C8C9C8C9C8C9C8C9C8C98218183A183A183A183AAE1718
%11181118173A17181182C8C8A6A05276517C7C764B7676A176A1C8C8A6C9
%A6C8A6C9A6C8A6C9A6C8A6C9A6C8A6C93A18111811181118173A823A3AC8
%A6C9A6C8A6C9A6C8A6C9A682111817181118181811AE3A183A1112111811
%3A185EC8C9C8C952765276527C7C764BA17C587CC9A0C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9A63A5E5E183A11181118183A1818175EC8C9C8C9C8C9C8
%C9C8C9C83A183A173A1812113A1118A811181111111211111118113AA0C9
%76514B76527651A17676513A177C523A58A1A0C9A6C8A0C9A6C8A0C9A6C8
%C2A611181118FD0511181118113AA0C9C8C8A0C9A6C8A0C9A6C858181118
%1112FD0511AE3A181811181118113A183A82CEC8764B76527C767C7C7D51
%5E183A343A185E343A3AA7C8C9C8C9C8C9C8C9C8C9A63A183A1818111811
%12113A181818A7A6A7C8C9C8C9C88382823AA7183A111811181118111884
%11181111111211111118175EA65E2D6F4B765176757C183411181718113A
%17181182C8C8A6C9A6C8A6C9A6C9A65E1818111811111112111111121118
%113A17C8C8C9825E331817181118111211121111111211AE181118111211
%181118113A183A173A34584B76527C763A183A183A183A183A183A5EA7C8
%C9C8C9C8C9C8A75EA6FD04181118111211181112113A1818175EC8C9C882
%1818173A1818173A11121118111211188411111112111111121118111811
%18111833345134173A11181118111811181118113A7CC9C8C8A0C9A6C97C
%18111811181111111211111112111111121118113A34A658181118111811
%111112111111121111118A121118111811181118113A1118113A183A185E
%523A183A183A11181118113A183A183A5EA75EC9C8C9825E1818183A1118
%111811181118111811181118183A183A3A3A181811181118111811181118
%1118111884111111121111111211111112111111181718113A1718111811
%11111211111118171811181718113AA65E11181718111211111112111111
%121111111211111118171811181111111211111112111111121111118A18
%1112111811121118111211181112113A183A173A18181118111211181112
%1118113A171811183A833A18113A11121118111211181112111811121118
%1112113A1112111811121118111211181112111811118311121111111211
%1111121111111211111118171811181111111211111112FD0911181118FD
%0711121111111211111112FD0511181112111111121111111211111112FD
%051184
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Background_2</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-10-13T16:07:34+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-10-13T16:07:34+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-10-13T16:07:34+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>164</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACkAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Ap51M4R2rK9W33J+eaWny&#xA;I2bJTTQtUh0y9F28BndQRGOXALyFCejdtsqy4zMVdO07H7Rho83iyhxkct6q+Z5Ho9K0+7e7tY7g&#xA;xNCsq8gj/aHzH6s1c48Jp9f0eo8bFHJwmPELo80TkHISuHzBaTazNpaAl4lJ9SuxdftIB7ZccJEO&#xA;J0+HtrFk1ktMOcRz8xzHw/WmCSlz8KkAfa5VH3ZURTuSFTAh2KqZmJcoqnkO5BC/fhpNKmBDsVWP&#xA;KEYLxYk9wKjCAkBcvKnxAA+2+BW8ULZJAi8iCfYCpwgJAYT5u8weswt7WSSCSB3jmTdeQIpvTYj5&#xA;5n6fDW5fPPantkSIx4pSjKEpRkOV/LmPewy7uRboGpUk0A/XmaA8NGNq1rfLHcLJA6maIh12DUI7&#xA;0IIwSjYotmLJLFITj9UTY6/emV1+Yeuxj6qJUeYmpk4qGpTptQfxwY9Fj5kPrHYufVTwCecgyluN&#xA;hy6XW26yXVLnWog1w5a5t1PEbbqTXbvlv5eMfp2cX2g7H/OQ4on97Abdx8v1Mg/SA/5VBy/3X+l/&#xA;Srv09PlX78sr93/nfoeP3/k3h6+JX6XmyG4uJ+XMK4G7k8QB0yAjbg6Ds7LqZcGMe/uHvTiwt7iG&#xA;ISJIJCrcjLGxJU9utCOmCcC5us9ntXp4+KKIjv6SbHnyH2PTdN1qzh0e3mvL9J2c8DKAQS/8vGnL&#xA;bxI98008RMiAKe60HauLHpITy5hMna/Purnt3keZUdc83W2nyCKALcTI/G4iJZSopXY0pksWmMtz&#xA;s4/a/tNj0suGFTmJVIbivsYJa6jdWt6L2JqXALEORXdwQTQ/PNjKAIo8nzbT67LhzeNE/vN9/ff6&#xA;2ReU9TvrnVGmvr9vQjU/BLLxVnbYAKSB79MxdRACNAPVezevzZdSZ5sp4IjlKVAk8trpnOa99Hdi&#xA;rsVdirsVdirsVQup3wsLCa7KGQQgEoDQmpA6/Tk8cOI04faGs/LYJZa4uHowy/8APN9I9ytr8EMo&#xA;QQMwHOPYc+nWprmdDSDa3z/We1+aRmMW0ZVw98dvV8/sY/rWrNeTm7kjUScFVwvVioALH3zIx4+E&#xA;U89r9bLVZfEkAJUAfMgVZ97GJJHkYs5qT1Py2y9pApE6eJQ5ZWVE6Mzb/QAKnCI27Xs3sfJqzY+g&#xA;Hcn8c0PdadexSfXGAkgDgtLGeQUV7jqPpGZD6kBQ2T7SlVvTvLd+aqeMyUoQG2r7jAWQZv8AVIv+&#xA;Vc+jT4P076lPf6v6n68a9P8AnfodD+Qj43DXp8Xj/wBjf+6eSXU7ROIVoQtC+1QT174wGzf2Loxg&#xA;00R/FIcR95/VyT7TJmtpYpKEQSfCSa0IPufDEu3Vb6eSzvmQqRECrxuNgobufpGY04PlXbmh/Lao&#xA;iG0T6o/H9RDc0+7SyvUsalmNST8zkAHSSlKRsmyUrbUSLlpFq0fHiq9P898nTPg2TKwnjl4STqfT&#xA;J+NEIDcfYkH9WQkO5EBATHHZj1rY/pevaW0LadbmCNoYfTURxyCjBQKCvXNNkviNvtnZ8oHBAwiY&#xA;w4RQPMBE5BzHYq7FXYq7FVskkccbSSMERASzMaAAdycIFsZzjCJlI0B1eY6/5svmSWyluRNbmRik&#xA;qLxLqtaA047Gvhm1xYIjet3ybtLtvU5xLCZiePi+oCrHwrb4MQe9nMgcMRxJKA70rmTTpRAKUksj&#xA;uXY/Eep+imFkBS3FVgv2B9IACPoW7/PMiIoPrfZ2lGDBHH3Df39U/wBMlC3QjajRy/u5EO4IYdCM&#xA;S5wXaBGbTUrqz34K7qoP8uzL+GJUM5+uR/8AKuPXofS/TnHl7fVePL5VyX8Px/Q4fF++5df968/t&#xA;1tLzjFeQqRLQeqFCyKx6fFQE/TkXMX6N6tvf3Gl3R9RAeO/Qgiqn7sSoTbUoVYRAlSwFKMygmlKd&#xA;T45VOJLzPtH2Rl1fAcVcUbvpsaSDVzMjCKRWj3+yQKEdmBGV8NPB6jQZdNLhyx4Sl2FoRulTrFKa&#xA;kI3VX3BqN+vbIyDGViiOjLIPO+ouLVWuC8VvIpkoeLS8SDxZu+23665jHTR325u7j7S6seGJSJjA&#xA;gnoZAHlI/Z99st0bzdZ3oijuCI7uZyscKBmoOgq1KZh5dMY8uT2fZXtNi1AjHJ6cs5UIgE+6yyDM&#xA;Z6d2KuxV2KqV3aW93A1vcJ6kL05JUitDUdKZKMiDYaNTpseeBhkFxPRJ5fI/laVy8liCx7+pKP1N&#xA;lo1OTvdV/ob0P+p/7KX61n+AfKX/AFbx/wAjJf8AmvD+ayd6/wChvQ/6n/spf8U7/APlL/q3j/kZ&#xA;L/zXj+ayd6/6G9D/AKn/ALKX/FLZfIXlYROYtOUyBTwBkloWptX48I1U73K/6G9D/qf+yl/xTxq7&#xA;0HW7Qn6zYXEVP2micDw2NKHN7HLCXIh2RiUz0u3vP0nQwyAAxMSUagpSpOEyHetJzBpmoS69dSwW&#xA;00iEAh0RitfSA6gU65CWWIG5CaLLv0Vff8qg+r/VJfrX6T5+jwbn04140r0yzxI8F3tf6HH4P3nn&#xA;Ty+1uGJiU9TGGB9waYW5OLxePmKCRdvVSIt8+ZX9WDolBatcuZppi2ysff4QaADEKVWykbV9IlhC&#xA;F7m3IMKj4mP+SKDeuRmNnUdt6IajTSAFzjvHvsdPjyQ3+HPMP/Vru/8AkRL/AM05i+NDvHzfPP5L&#xA;1X+pZP8ASS/U7/DnmH/q13f/ACIl/wCacfGh3j5r/Jeq/wBSyf6SX6m18veY1II0y7BG4PoS/wDN&#xA;OPiw7x81/kvVf6lk/wBJL9ScaVY+ZYSHWxvIZ4/syejKDuKfaIyEpwPUMcfZ+txTE8ePLGQ6iMv1&#xA;PTNCu5rjT0E8M8M0QCOLkEMxA+1UheVc1eWIEtq+D6j2PqZ5cA445ITjseMbnzuhaY5U7V2KuxV2&#xA;KuxV2KuxV2KuxVg2t695ih1K4gCcFiJMaRSL/dgFgxp8Rqo5UIzcafDiMAatplI2nvl3zNbamq25&#xA;Ja8SMNKwB4MRsSPD5HMPU6U49x9LOM7Zr/0y/wDz2/jmR/yE/wA5x/8ALfB5fP8Alt5WslW5nvLq&#xA;NIl4gs8dKf8AIv3yMNdlkaAH4+LecYV7Ty/5VvtRWSOad7iNB6aMwUFVatQAor1yebPngLICBGJR&#xA;F7+XPl26Dg+vEH3IjkG29duQbMePaGQdzLwwq6N5E8v6OzSwiWRjQlpnrTiajZQgwT1uSWyRjAZG&#xA;CCKjcHocw2TsVdirSsrCqkEeIxS3ih2Ktcl5FajkNyO+KW8UOxVosoIBIBPQeOKW8UOxVpmVRVjQ&#xA;DucUt4oaKIWDFQWX7LU3Hyw2reBU39SP/C3LkOPrUrXbrm1r/BP85xa/f/Bi2r6HbajYtbOSG5B4&#xA;3Jb4WFRXYr2JGYOHOYStypCwkdt5FubeRZ7a/wDq09CGIQyGtTurlkYfCRUZly14OxjYa/DZTaxz&#xA;RW8cc8vryqKPLxC8j48RWma+ZBNgUGwLvRT1Oe9fmafdgtNr8CHYqskiSSnKu3gSMINJBXgUwIdi&#xA;rToHXia0PgaYQUhyIEUKOg8d8SVbwIdiqyOJI68a7+JJwk2klfgQ7FVghT1Oe9fmafdhtNr8CHYq&#xA;skhRyC1dvAkYQUgp5/0y/wDz2/jmz/5Cf5zh/wCW+CTZq3LdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdiqc/wDTL/8APb+ObT/kJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYqnP/TL/APPb+ObT/kJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqnP8A0y//AD2/jm0/5Cf5zif5b4JNmrct2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KpX5li1OTSpBp0nCcEFhRiWTeqrxqa1pmRpZRE/VyYzutmLaUfM+nXK3JtJZ0kQ1ijRgte&#xA;RFH5gMG+GozZZpYsgokCmsWGcWk0k1tHLJE0EjirQvTkp8DTNPOIBoG24KuRV2KuxV2KuxVOf+mX&#xA;/wCe38c2n/IT/OcT/LfBJs1blrXLhfgALeBNMISHIJPtOaE/sjoMSpXYEONabde2Kqaesxq/wU7A&#xA;1r89sJpOypgQ7FVM+uXK0Cp2YGp+4jDsnZUwIdiqxzMGARQV7kmmEUkLlBAoTyPif7MCt4oWyGQL&#xA;8ABbwJphCQ5A/Vzuf2dqD8MSq7AhxrQ03PYYpU09Ymr/AA0/ZG4OE0pVMCE5/wCmX/57fxzaf8hP&#xA;85xP8t8EmzVuW7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU5/6Zf8A57fxzaf8&#xA;hP8AOcT/AC3wSbNW5bsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVTn/AKZf/nt/&#xA;HNp/yE/znE/y3wSbNW5bsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVTn/pl/wDn&#xA;t/HNp/yE/wA5xP8ALfBJs1bluxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVOf8A&#xA;pl/+e38c2n/IT/OcT/LfBIxMjGiHn48aGmaynMpeCCKg1HiMFIdiqxpowStQX/lFK4aTS8Gor09s&#xA;CHYqteSNKcmC16VwgJptW5CtCPn/AGYFbxQ0zKoqxAHicUtLIGPw7r2bahwkLS7Ah2KrBMjGiHn4&#xA;kU2+eGk0vwIdiqwzRglQeTj9kUrhpNL8CHYqteWNCAzAE9AThATSc8z/AIV5cG/vvs7V6/PNp/yE&#xA;/wA5xK/f/BhHm601WWziOnHZWPrwqrEvWnE/DvQUOY+iyRjL1N+SyEo0aTzPpcrB7CW6WcI3BBxj&#xA;AIr+1Qq29DyGZWc4so+qiGMbDNlJKgkcSRuPD7s1BbXcVryoK+PfFLeKHYq0VU9QDTpXFLeKHYq4&#xA;gEUIqPA4pcAAKAUHhirsUOxVoKq9ABXwxS3ih2KtcVryoK+PfFLeKHYq0VU9QDTpXFKdf9Mv/wA9&#xA;v45tP+Qn+c4f+W+CTZq3LdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqc/9Mv8A&#xA;89v45tP+Qn+c4n+W+CTZq3LdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqc/wDT&#xA;L/8APb+ObT/kJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqnP&#xA;/TL/APPb+ObT/kJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwfXta&#xA;8xw6pPAqcY0q0KxSKD6YqQzAfFUqK0zb6bFi4Aav3tUibTry55mh1ER2knJrxUq8gUhGp1Pt9OYu&#xA;q0vB6h9LKE7Zv/0y/wDz2/jl/wDyE/znH/y3wSbNW5a11ZlorcT40rhCQ6OPjuTyc9W6VxJUldgQ&#xA;49NtvfFVNIiDV25kfZJFKfdhJSSqYEOxVTMTFyWfkh/YoP14bTapgQ7FVjpIzArIVA6igNcIKQVy&#xA;qqiiig8MCt4oWyKzLRW4HxpXCEhyIF3O7H7TeOJK2uwIcQSCAaHscUqaQ0IaQ+o6/ZYgClcJKkqm&#xA;BCc/9Mv/AM9v45tP+Qn+c4n+W+CTZq3LdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vdiqc/8ATL/89v45tP8AkJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYqnP/TL/wDPb+ObT/kJ/nOJ/lvgk2aty3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqnP/AEy//Pb+ObT/AJCf5zif5b4JNmrct2KuxV2KuxV2KsY85XWt2zQtaMBaMCH4sVbm&#xA;Kk8jT7NKU3zY6GOM3Y9TXktDaDr2qWshstQtbiV2k4rwjduHbZtwy961yeowQmOKJARGRGxZhmrb&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqnP8A0y//AD2/jm0/5Cf5zif5b4JAbj4WcgxogJdpBQcR1Oa3&#xA;hcuchEEk7BT03UrTUbb6zasWj5FTUUIK+I/HDOBiaLh6DX4tVj8TGbjZHyRWQcxTaVufBUavZiPh&#xA;+/DSaWXl7bWVq9zdOI4oxV2P3UHzyUIGRoIJpIbXz9o1zP6cYfiejbV+7+3Mw9nzrmGHiBP1uo3j&#xA;SSIGWOQVVkFRmEYEGjs2DdVXlT4qV9siVbxQ07cV5ULey7nCAkLUZ2+Ijip6A7N9OJUr8CGiwFKn&#xA;rsB4nripICxJHc7IVA68xT7sJCaVMCHYqpmVuRRUavZiPh+/DSaVMCHYqgbLWbO+EjWvKURuY2IH&#xA;cd/ke2WSxGPNwtD2hh1QkcRvhlR/HcejJf3v+Ff2eXre9KVzY/8AIT/OZ/5f4POvNfme2Nvc6ZBy&#xA;MrBB6ylSjKwDGhB8DTMfT4DYkXkPaT2gxnHPTQviPD6hXCQaJ3vu2+bHtK8x32l2ktvahayuH5sK&#xA;8dqGg6b5k5MAmbLy3Z3bubR4pY8deo3Z6fBm/la81K90z6zfMGaRz6VFC/AKCu1P2q5gaiMYyoPo&#xA;vs7qtRqNP4mY2ZSNbVt/bacZQ715j+bOtzC6ttMiYqiL6slP5m2H3D9ebjs7F6TJpynoxTSvWeBZ&#xA;YwS8ZqSvUUOxoM2JanqPkrUzPCYCfhZfVQdgQaOPvzU9oYuUm/GWUZrGx2KuxV2Kqdzcw21vJcTN&#xA;wiiUs7daAfLDGJJoNWozwwwM5moxFlg2u+ZCfMEM8JEtrZ0aFQaKxZalj99M2GLB6KPMvnHbHbxO&#xA;ujOB4seKjHuJI5/bXwROj+cj600+q3BCmiwW8abDuT/Dc5HLptgIhy+y/ar1ynqZ7coxjHl3n+0l&#xA;mUUgkjSQAgOoYBhQioruMwSKe/xz4oiQ6i12Bk7FXYqxnzJ5ps4beaygJklnh/dzxlWT4yVO4PhX&#xA;MvBpySCXkO3vaLFDHLDD1SnDaUaMd9ud+9iej6/d6SlwLZVLThRV6kLxrvT6czMuETq3iey+2cui&#xA;E/DAudc+lX+tnn+INY/5Vd+keY+sfXeHPgtOFadKU65f4UfB4enE9J/LOq/JfmL/AHl1dDldcuTy&#xA;2aVIkLMaeHuaVpgeEAtBQamOFJAWkLGgXwPTCYthxst8qXMS6rEbm8khUELHGC3Fz0VWPQDMXURP&#xA;DsHf+zeeI1MfEySgOQG9S7gfJkHn/wAxnR9LjSKT07m7YqjjqFWhcj7wMo0OATlZ5B9WySoPNYNQ&#xA;klq7n14ifsy/GrD5NXN3TQ6aH9G6lbT2hK2lyOaR1rxYCrLirLNJ1exsL9Jq0jRizAbD4hQ06b71&#xA;zGzR8SJiObrdL2zp8ueWKBsxF3086PkzPTPMWmajIY4HKydkcAE/KhIzUZdNKAs7h2Om1+HOSMch&#xA;Lh50meY7luxV2KsO8zeZYZYtQ0l4mjkUhY5QahirK24oKVpTvmdgwEESeD7f7fhOObSmJjIbCV3d&#xA;EH4X8WCXV2sHAdSzUPsO/wCvM8B4GMbX2l8ruHjbg6tVKkctt60wEJBlAgjmGbaN5i8w6rfwQR8E&#xA;hj4m6kCg1UfaJJ6Fu1MwcuGEIkvddldua/W54QjQhGuM10633E9KZnmC9+7FUr8w6rJptkJ1h9dC&#xA;4SZeXEhWB3rQ99suw4+I1bpu3O0ZaTDxiPGLqW9UDe/6HlsjogLMaL4nNs+OV3JfFqgHMygmpqgH&#xA;YZLhbDjemeq//Km+Xxf73/Z7060+/Lf8n/nfoeis/wAl/wCf+l5VeTGWcmoIGy08Oo/XlYdBEUFA&#xA;Eg1BoR0OFkyTQNWewaK8jCO0ezCWjfifs/RlOXHxCm7Ra2elzDJEAkd4/Fe8O84Xc/mG8juPhiSI&#xA;FYxUmiVrv4k5LTRGMU9Ti9rzLLIzj6P4Yj9J/HuSCwjukjVOBXlJsGHGq8amlflmWZB6nJ2rp4Ql&#xA;MzBEavh9VWa6eadPGJbe3STrCSy+x5H9YymU99nkO2e35eKDgneM4yK8ze9d42I/tWPc26uUZwCo&#xA;qfbK6eQjxDl1VY5xuI5OtCQD922LZHUZIw4BIiJ6D8bvSvKDQHSE9KORBWrySkEuxG7ChO21Bmq1&#xA;N8T6r7NGH5YcEZgd8q9R7+Z2/G6d5jvQJTq/mK1027jtp1ZfWQsswoVU1IFRl2PCZCw6TtPtzFpM&#xA;sccwfXG+LoPe801fUprmWW9lC+u4HKmwJVQK0+QzaQgIig+UavVT1OU5J/VKrr3Ux2aQyytIRTlv&#xA;TLggCnQzyQvzTrSm+JCCLT7R9WuLWZJbaf8A0lFqzAbEN2I6HKpwEhRZ6bVZdNkGTGeGQZ95Y8xQ&#xA;vZ8dSvVa7llPpq/UKQABsKDeua/PhN+kbPoHs/25CWKtRlByymavu2r7bSvzR5lvku7rT0kRYo3R&#xA;o5YzR14gMRUHs2W4MAoSdR7Q9u5xlngiRwiUaMeYqjVjzY9ca9dyLcyy3B4XpX127NxrxHyGZIxA&#xA;Vtyeby9pajIZ3I/va4vOuQ9zHr6f1ZRQgoB8JHgfHLgHGgKQ2Fk9H9f/AJAhXk/L9K8a8968a/d7&#xA;Zb/k/wDO/Q73/nW1/tjzjKnROxV1TSnbwxVWgu5Yn5VJGwIPgOwwEMTEFNwIp1jkPxUPJSD0ORsh&#xA;OLU5McZQiajPmO9CXt80b+nHSo+0diPlhAa4QtLSSTU7nJNqItLw25O3JT1HTf54CGMo2mll5hks&#xA;z9Yt5GhnG3Fe4O3yyEsYlsW3TZ82CfFjkYlPvLvnW5SaOKa4YWUPItGEVnfqep33Y9a5j5dMCNhu&#xA;7zsv2hz4JRjkmfBjdgRBJ5nmd9z1tKNY8wLc3jyNJJLGWcxI7lyik1C77fdl2PHwh0+u1U9TlMiZ&#xA;GNnhEjdA9EiublppC1OINPhrXplwDjxjSjil2KuBKkEGhG4OKptY3FxGhupZOIBDRnwIPUUyBA5N&#xA;d8MgY8wgry+kuWBI49ST1JJ675ICmYG9nmhuTUpU08MKXYq7FWff+US/7fP/ADJy3/J/536Hd/8A&#xA;Ov8A+Sn6H//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:20A7D47A2491E6119661AC468F849D09</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:20A7D47A2491E6119661AC468F849D09</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:cda13101-9633-4af1-8353-aabe94fd15ed</stRef:instanceID>
            <stRef:documentID>xmp.did:9329C107A590E4118D32FEAE069D6AF0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4AEFAA9F0B12E4119EFDE49FA0D51026</stEvt:instanceID>
                  <stEvt:when>2014-07-23T08:49:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:20A7D47A2491E6119661AC468F849D09</stEvt:instanceID>
                  <stEvt:when>2016-10-13T16:07:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>650.000000</stDim:w>
            <stDim:h>1024.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>235</xmpG:green>
                           <xmpG:blue>15</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>111</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>220</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>56</xmpG:red>
                           <xmpG:green>83</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>184</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>158</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>192</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>235</xmpG:red>
                           <xmpG:green>32</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>58</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>197</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>71</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>105</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>225</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>8</xmpG:red>
                           <xmpG:green>114</xmpG:green>
                           <xmpG:blue>185</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>53</xmpG:green>
                           <xmpG:blue>142</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>97</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>103</xmpG:red>
                           <xmpG:green>47</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>146</xmpG:red>
                           <xmpG:green>41</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>157</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>84</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>154</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>125</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>22</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>64</xmpG:red>
                           <xmpG:green>34</xmpG:green>
                           <xmpG:blue>17</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>25</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>25</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>78</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>103</xmpG:red>
                           <xmpG:green>103</xmpG:green>
                           <xmpG:blue>103</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>203</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>84</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>218</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>122</xmpG:green>
                           <xmpG:blue>169</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>211</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1024 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1024 li
650 1024 li
650 0 li
cp
clp
gsave
650 1024 mo
0 1024 li
0 0 li
650 0 li
650 1024 li
cp
clp
-59 1024 mo
-59 0 li
709 0 li
709 1024 li
-59 1024 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0456855 .198856 .613336 0 cmyk
f
72.0386 25.1816 mo
72.0386 27.1377 67.9155 28.7236 62.8301 28.7236 cv
57.7441 28.7236 53.6211 27.1377 53.6211 25.1816 cv
53.6211 23.2256 57.7441 21.6396 62.8301 21.6396 cv
67.9155 21.6396 72.0386 23.2256 72.0386 25.1816 cv
cp
.0910353 .323217 .622339 0 cmyk
f
82.7061 17.5391 mo
82.7061 18.96 80.1938 20.1118 77.0942 20.1118 cv
73.9951 20.1118 71.4829 18.96 71.4829 17.5391 cv
71.4829 16.1182 73.9951 14.9663 77.0942 14.9663 cv
80.1938 14.9663 82.7061 16.1182 82.7061 17.5391 cv
cp
f
175.65 25.1816 mo
175.65 27.1377 171.527 28.7236 166.441 28.7236 cv
161.355 28.7236 157.232 27.1377 157.232 25.1816 cv
157.232 23.2256 161.355 21.6396 166.441 21.6396 cv
171.527 21.6396 175.65 23.2256 175.65 25.1816 cv
cp
f
186.317 17.5391 mo
186.317 18.96 183.805 20.1118 180.706 20.1118 cv
177.606 20.1118 175.094 18.96 175.094 17.5391 cv
175.094 16.1182 177.606 14.9663 180.706 14.9663 cv
183.805 14.9663 186.317 16.1182 186.317 17.5391 cv
cp
f
279.261 25.1816 mo
279.261 27.1377 275.138 28.7236 270.053 28.7236 cv
264.967 28.7236 260.844 27.1377 260.844 25.1816 cv
260.844 23.2256 264.967 21.6396 270.053 21.6396 cv
275.138 21.6396 279.261 23.2256 279.261 25.1816 cv
cp
f
289.929 17.5391 mo
289.929 18.96 287.417 20.1118 284.317 20.1118 cv
281.218 20.1118 278.706 18.96 278.706 17.5391 cv
278.706 16.1182 281.218 14.9663 284.317 14.9663 cv
287.417 14.9663 289.929 16.1182 289.929 17.5391 cv
cp
f
382.873 25.1816 mo
382.873 27.1377 378.75 28.7236 373.664 28.7236 cv
368.578 28.7236 364.455 27.1377 364.455 25.1816 cv
364.455 23.2256 368.578 21.6396 373.664 21.6396 cv
378.75 21.6396 382.873 23.2256 382.873 25.1816 cv
cp
f
393.541 17.5391 mo
393.541 18.96 391.027 20.1118 387.928 20.1118 cv
384.83 20.1118 382.316 18.96 382.316 17.5391 cv
382.316 16.1182 384.83 14.9663 387.928 14.9663 cv
391.027 14.9663 393.541 16.1182 393.541 17.5391 cv
cp
f
486.484 25.1816 mo
486.484 27.1377 482.361 28.7236 477.275 28.7236 cv
472.189 28.7236 468.066 27.1377 468.066 25.1816 cv
468.066 23.2256 472.189 21.6396 477.275 21.6396 cv
482.361 21.6396 486.484 23.2256 486.484 25.1816 cv
cp
f
497.152 17.5391 mo
497.152 18.96 494.639 20.1118 491.539 20.1118 cv
488.441 20.1118 485.928 18.96 485.928 17.5391 cv
485.928 16.1182 488.441 14.9663 491.539 14.9663 cv
494.639 14.9663 497.152 16.1182 497.152 17.5391 cv
cp
f
590.096 25.1816 mo
590.096 27.1377 585.973 28.7236 580.887 28.7236 cv
575.801 28.7236 571.678 27.1377 571.678 25.1816 cv
571.678 23.2256 575.801 21.6396 580.887 21.6396 cv
585.973 21.6396 590.096 23.2256 590.096 25.1816 cv
cp
f
600.764 17.5391 mo
600.764 18.96 598.25 20.1118 595.15 20.1118 cv
592.053 20.1118 589.539 18.96 589.539 17.5391 cv
589.539 16.1182 592.053 14.9663 595.15 14.9663 cv
598.25 14.9663 600.764 16.1182 600.764 17.5391 cv
cp
f
18.041 197.673 mo
18.041 199.629 13.918 201.215 8.83252 201.215 cv
3.74658 201.215 -.376465 199.629 -.376465 197.673 cv
-.376465 195.717 3.74658 194.131 8.83252 194.131 cv
13.918 194.131 18.041 195.717 18.041 197.673 cv
cp
f
28.7085 190.03 mo
28.7085 191.451 26.1963 192.604 23.0967 192.604 cv
19.9976 192.604 17.4854 191.451 17.4854 190.03 cv
17.4854 188.609 19.9976 187.457 23.0967 187.457 cv
26.1963 187.457 28.7085 188.609 28.7085 190.03 cv
cp
f
121.652 197.673 mo
121.652 199.629 117.529 201.215 112.444 201.215 cv
107.358 201.215 103.235 199.629 103.235 197.673 cv
103.235 195.717 107.358 194.131 112.444 194.131 cv
117.529 194.131 121.652 195.717 121.652 197.673 cv
cp
f
132.32 190.03 mo
132.32 191.451 129.808 192.604 126.708 192.604 cv
123.609 192.604 121.097 191.451 121.097 190.03 cv
121.097 188.609 123.609 187.457 126.708 187.457 cv
129.808 187.457 132.32 188.609 132.32 190.03 cv
cp
f
225.264 197.673 mo
225.264 199.629 221.141 201.215 216.055 201.215 cv
210.969 201.215 206.846 199.629 206.846 197.673 cv
206.846 195.717 210.969 194.131 216.055 194.131 cv
221.141 194.131 225.264 195.717 225.264 197.673 cv
cp
f
235.931 190.03 mo
235.931 191.451 233.419 192.604 230.319 192.604 cv
227.22 192.604 224.708 191.451 224.708 190.03 cv
224.708 188.609 227.22 187.457 230.319 187.457 cv
233.419 187.457 235.931 188.609 235.931 190.03 cv
cp
f
328.875 197.673 mo
328.875 199.629 324.752 201.215 319.667 201.215 cv
314.581 201.215 310.458 199.629 310.458 197.673 cv
310.458 195.717 314.581 194.131 319.667 194.131 cv
324.752 194.131 328.875 195.717 328.875 197.673 cv
cp
f
339.543 190.03 mo
339.543 191.451 337.03 192.604 333.931 192.604 cv
330.832 192.604 328.319 191.451 328.319 190.03 cv
328.319 188.609 330.832 187.457 333.931 187.457 cv
337.03 187.457 339.543 188.609 339.543 190.03 cv
cp
f
432.486 197.673 mo
432.486 199.629 428.363 201.215 423.277 201.215 cv
418.191 201.215 414.068 199.629 414.068 197.673 cv
414.068 195.717 418.191 194.131 423.277 194.131 cv
428.363 194.131 432.486 195.717 432.486 197.673 cv
cp
f
443.154 190.03 mo
443.154 191.451 440.642 192.604 437.542 192.604 cv
434.443 192.604 431.931 191.451 431.931 190.03 cv
431.931 188.609 434.443 187.457 437.542 187.457 cv
440.642 187.457 443.154 188.609 443.154 190.03 cv
cp
f
536.098 197.673 mo
536.098 199.629 531.975 201.215 526.889 201.215 cv
521.803 201.215 517.68 199.629 517.68 197.673 cv
517.68 195.717 521.803 194.131 526.889 194.131 cv
531.975 194.131 536.098 195.717 536.098 197.673 cv
cp
f
546.766 190.03 mo
546.766 191.451 544.253 192.604 541.153 192.604 cv
538.055 192.604 535.542 191.451 535.542 190.03 cv
535.542 188.609 538.055 187.457 541.153 187.457 cv
544.253 187.457 546.766 188.609 546.766 190.03 cv
cp
f
639.709 197.673 mo
639.709 199.629 635.586 201.215 630.5 201.215 cv
625.414 201.215 621.291 199.629 621.291 197.673 cv
621.291 195.717 625.414 194.131 630.5 194.131 cv
635.586 194.131 639.709 195.717 639.709 197.673 cv
cp
f
650.377 190.03 mo
650.377 191.451 647.864 192.604 644.765 192.604 cv
641.666 192.604 639.153 191.451 639.153 190.03 cv
639.153 188.609 641.666 187.457 644.765 187.457 cv
647.864 187.457 650.377 188.609 650.377 190.03 cv
cp
f
72.0386 370.164 mo
72.0386 372.12 67.9155 373.706 62.8301 373.706 cv
57.7441 373.706 53.6211 372.12 53.6211 370.164 cv
53.6211 368.208 57.7441 366.622 62.8301 366.622 cv
67.9155 366.622 72.0386 368.208 72.0386 370.164 cv
cp
f
82.7061 362.521 mo
82.7061 363.942 80.1938 365.095 77.0942 365.095 cv
73.9951 365.095 71.4829 363.942 71.4829 362.521 cv
71.4829 361.101 73.9951 359.948 77.0942 359.948 cv
80.1938 359.948 82.7061 361.101 82.7061 362.521 cv
cp
f
175.65 370.164 mo
175.65 372.12 171.527 373.706 166.441 373.706 cv
161.355 373.706 157.232 372.12 157.232 370.164 cv
157.232 368.208 161.355 366.622 166.441 366.622 cv
171.527 366.622 175.65 368.208 175.65 370.164 cv
cp
f
186.317 362.521 mo
186.317 363.942 183.805 365.095 180.706 365.095 cv
177.606 365.095 175.094 363.942 175.094 362.521 cv
175.094 361.101 177.606 359.948 180.706 359.948 cv
183.805 359.948 186.317 361.101 186.317 362.521 cv
cp
f
279.261 370.164 mo
279.261 372.12 275.138 373.706 270.053 373.706 cv
264.967 373.706 260.844 372.12 260.844 370.164 cv
260.844 368.208 264.967 366.622 270.053 366.622 cv
275.138 366.622 279.261 368.208 279.261 370.164 cv
cp
f
289.929 362.521 mo
289.929 363.942 287.417 365.095 284.317 365.095 cv
281.218 365.095 278.706 363.942 278.706 362.521 cv
278.706 361.101 281.218 359.948 284.317 359.948 cv
287.417 359.948 289.929 361.101 289.929 362.521 cv
cp
f
382.873 370.164 mo
382.873 372.12 378.75 373.706 373.664 373.706 cv
368.578 373.706 364.455 372.12 364.455 370.164 cv
364.455 368.208 368.578 366.622 373.664 366.622 cv
378.75 366.622 382.873 368.208 382.873 370.164 cv
cp
f
393.541 362.521 mo
393.541 363.942 391.027 365.095 387.928 365.095 cv
384.83 365.095 382.316 363.942 382.316 362.521 cv
382.316 361.101 384.83 359.948 387.928 359.948 cv
391.027 359.948 393.541 361.101 393.541 362.521 cv
cp
f
486.484 370.164 mo
486.484 372.12 482.361 373.706 477.275 373.706 cv
472.189 373.706 468.066 372.12 468.066 370.164 cv
468.066 368.208 472.189 366.622 477.275 366.622 cv
482.361 366.622 486.484 368.208 486.484 370.164 cv
cp
f
497.152 362.521 mo
497.152 363.942 494.639 365.095 491.539 365.095 cv
488.441 365.095 485.928 363.942 485.928 362.521 cv
485.928 361.101 488.441 359.948 491.539 359.948 cv
494.639 359.948 497.152 361.101 497.152 362.521 cv
cp
f
590.096 370.164 mo
590.096 372.12 585.973 373.706 580.887 373.706 cv
575.801 373.706 571.678 372.12 571.678 370.164 cv
571.678 368.208 575.801 366.622 580.887 366.622 cv
585.973 366.622 590.096 368.208 590.096 370.164 cv
cp
f
600.764 362.521 mo
600.764 363.942 598.25 365.095 595.15 365.095 cv
592.053 365.095 589.539 363.942 589.539 362.521 cv
589.539 361.101 592.053 359.948 595.15 359.948 cv
598.25 359.948 600.764 361.101 600.764 362.521 cv
cp
f
18.041 542.655 mo
18.041 544.611 13.918 546.197 8.83252 546.197 cv
3.74658 546.197 -.376465 544.611 -.376465 542.655 cv
-.376465 540.699 3.74658 539.113 8.83252 539.113 cv
13.918 539.113 18.041 540.699 18.041 542.655 cv
cp
f
28.7085 535.013 mo
28.7085 536.434 26.1963 537.586 23.0967 537.586 cv
19.9976 537.586 17.4854 536.434 17.4854 535.013 cv
17.4854 533.592 19.9976 532.439 23.0967 532.439 cv
26.1963 532.439 28.7085 533.592 28.7085 535.013 cv
cp
f
121.652 542.655 mo
121.652 544.611 117.529 546.197 112.444 546.197 cv
107.358 546.197 103.235 544.611 103.235 542.655 cv
103.235 540.699 107.358 539.113 112.444 539.113 cv
117.529 539.113 121.652 540.699 121.652 542.655 cv
cp
f
132.32 535.013 mo
132.32 536.434 129.808 537.586 126.708 537.586 cv
123.609 537.586 121.097 536.434 121.097 535.013 cv
121.097 533.592 123.609 532.439 126.708 532.439 cv
129.808 532.439 132.32 533.592 132.32 535.013 cv
cp
f
225.264 542.655 mo
225.264 544.611 221.141 546.197 216.055 546.197 cv
210.969 546.197 206.846 544.611 206.846 542.655 cv
206.846 540.699 210.969 539.113 216.055 539.113 cv
221.141 539.113 225.264 540.699 225.264 542.655 cv
cp
f
235.931 535.013 mo
235.931 536.434 233.419 537.586 230.319 537.586 cv
227.22 537.586 224.708 536.434 224.708 535.013 cv
224.708 533.592 227.22 532.439 230.319 532.439 cv
233.419 532.439 235.931 533.592 235.931 535.013 cv
cp
f
328.875 542.655 mo
328.875 544.611 324.752 546.197 319.667 546.197 cv
314.581 546.197 310.458 544.611 310.458 542.655 cv
310.458 540.699 314.581 539.113 319.667 539.113 cv
324.752 539.113 328.875 540.699 328.875 542.655 cv
cp
f
339.543 535.013 mo
339.543 536.434 337.03 537.586 333.931 537.586 cv
330.832 537.586 328.319 536.434 328.319 535.013 cv
328.319 533.592 330.832 532.439 333.931 532.439 cv
337.03 532.439 339.543 533.592 339.543 535.013 cv
cp
f
432.486 542.655 mo
432.486 544.611 428.363 546.197 423.277 546.197 cv
418.191 546.197 414.068 544.611 414.068 542.655 cv
414.068 540.699 418.191 539.113 423.277 539.113 cv
428.363 539.113 432.486 540.699 432.486 542.655 cv
cp
f
443.154 535.013 mo
443.154 536.434 440.642 537.586 437.542 537.586 cv
434.443 537.586 431.931 536.434 431.931 535.013 cv
431.931 533.592 434.443 532.439 437.542 532.439 cv
440.642 532.439 443.154 533.592 443.154 535.013 cv
cp
f
536.098 542.655 mo
536.098 544.611 531.975 546.197 526.889 546.197 cv
521.803 546.197 517.68 544.611 517.68 542.655 cv
517.68 540.699 521.803 539.113 526.889 539.113 cv
531.975 539.113 536.098 540.699 536.098 542.655 cv
cp
f
546.766 535.013 mo
546.766 536.434 544.253 537.586 541.153 537.586 cv
538.055 537.586 535.542 536.434 535.542 535.013 cv
535.542 533.592 538.055 532.439 541.153 532.439 cv
544.253 532.439 546.766 533.592 546.766 535.013 cv
cp
f
639.709 542.655 mo
639.709 544.611 635.586 546.197 630.5 546.197 cv
625.414 546.197 621.291 544.611 621.291 542.655 cv
621.291 540.699 625.414 539.113 630.5 539.113 cv
635.586 539.113 639.709 540.699 639.709 542.655 cv
cp
f
650.377 535.013 mo
650.377 536.434 647.864 537.586 644.765 537.586 cv
641.666 537.586 639.153 536.434 639.153 535.013 cv
639.153 533.592 641.666 532.439 644.765 532.439 cv
647.864 532.439 650.377 533.592 650.377 535.013 cv
cp
f
72.0386 715.146 mo
72.0386 717.103 67.9155 718.688 62.8301 718.688 cv
57.7441 718.688 53.6211 717.103 53.6211 715.146 cv
53.6211 713.19 57.7441 711.604 62.8301 711.604 cv
67.9155 711.604 72.0386 713.19 72.0386 715.146 cv
cp
f
82.7061 707.504 mo
82.7061 708.925 80.1938 710.077 77.0942 710.077 cv
73.9951 710.077 71.4829 708.925 71.4829 707.504 cv
71.4829 706.083 73.9951 704.931 77.0942 704.931 cv
80.1938 704.931 82.7061 706.083 82.7061 707.504 cv
cp
f
175.65 715.146 mo
175.65 717.103 171.527 718.688 166.441 718.688 cv
161.355 718.688 157.232 717.103 157.232 715.146 cv
157.232 713.19 161.355 711.604 166.441 711.604 cv
171.527 711.604 175.65 713.19 175.65 715.146 cv
cp
f
186.317 707.504 mo
186.317 708.925 183.805 710.077 180.706 710.077 cv
177.606 710.077 175.094 708.925 175.094 707.504 cv
175.094 706.083 177.606 704.931 180.706 704.931 cv
183.805 704.931 186.317 706.083 186.317 707.504 cv
cp
f
279.261 715.146 mo
279.261 717.103 275.138 718.688 270.053 718.688 cv
264.967 718.688 260.844 717.103 260.844 715.146 cv
260.844 713.19 264.967 711.604 270.053 711.604 cv
275.138 711.604 279.261 713.19 279.261 715.146 cv
cp
f
289.929 707.504 mo
289.929 708.925 287.417 710.077 284.317 710.077 cv
281.218 710.077 278.706 708.925 278.706 707.504 cv
278.706 706.083 281.218 704.931 284.317 704.931 cv
287.417 704.931 289.929 706.083 289.929 707.504 cv
cp
f
382.873 715.146 mo
382.873 717.103 378.75 718.688 373.664 718.688 cv
368.578 718.688 364.455 717.103 364.455 715.146 cv
364.455 713.19 368.578 711.604 373.664 711.604 cv
378.75 711.604 382.873 713.19 382.873 715.146 cv
cp
f
393.541 707.504 mo
393.541 708.925 391.027 710.077 387.928 710.077 cv
384.83 710.077 382.316 708.925 382.316 707.504 cv
382.316 706.083 384.83 704.931 387.928 704.931 cv
391.027 704.931 393.541 706.083 393.541 707.504 cv
cp
f
486.484 715.146 mo
486.484 717.103 482.361 718.688 477.275 718.688 cv
472.189 718.688 468.066 717.103 468.066 715.146 cv
468.066 713.19 472.189 711.604 477.275 711.604 cv
482.361 711.604 486.484 713.19 486.484 715.146 cv
cp
f
497.152 707.504 mo
497.152 708.925 494.639 710.077 491.539 710.077 cv
488.441 710.077 485.928 708.925 485.928 707.504 cv
485.928 706.083 488.441 704.931 491.539 704.931 cv
494.639 704.931 497.152 706.083 497.152 707.504 cv
cp
f
590.096 715.146 mo
590.096 717.103 585.973 718.688 580.887 718.688 cv
575.801 718.688 571.678 717.103 571.678 715.146 cv
571.678 713.19 575.801 711.604 580.887 711.604 cv
585.973 711.604 590.096 713.19 590.096 715.146 cv
cp
f
600.764 707.504 mo
600.764 708.925 598.25 710.077 595.15 710.077 cv
592.053 710.077 589.539 708.925 589.539 707.504 cv
589.539 706.083 592.053 704.931 595.15 704.931 cv
598.25 704.931 600.764 706.083 600.764 707.504 cv
cp
f
18.041 887.638 mo
18.041 889.594 13.918 891.18 8.83252 891.18 cv
3.74658 891.18 -.376465 889.594 -.376465 887.638 cv
-.376465 885.682 3.74658 884.096 8.83252 884.096 cv
13.918 884.096 18.041 885.682 18.041 887.638 cv
cp
f
28.7085 879.995 mo
28.7085 881.416 26.1963 882.568 23.0967 882.568 cv
19.9976 882.568 17.4854 881.416 17.4854 879.995 cv
17.4854 878.574 19.9976 877.422 23.0967 877.422 cv
26.1963 877.422 28.7085 878.574 28.7085 879.995 cv
cp
f
121.652 887.638 mo
121.652 889.594 117.529 891.18 112.444 891.18 cv
107.358 891.18 103.235 889.594 103.235 887.638 cv
103.235 885.682 107.358 884.096 112.444 884.096 cv
117.529 884.096 121.652 885.682 121.652 887.638 cv
cp
f
132.32 879.995 mo
132.32 881.416 129.808 882.568 126.708 882.568 cv
123.609 882.568 121.097 881.416 121.097 879.995 cv
121.097 878.574 123.609 877.422 126.708 877.422 cv
129.808 877.422 132.32 878.574 132.32 879.995 cv
cp
f
225.264 887.638 mo
225.264 889.594 221.141 891.18 216.055 891.18 cv
210.969 891.18 206.846 889.594 206.846 887.638 cv
206.846 885.682 210.969 884.096 216.055 884.096 cv
221.141 884.096 225.264 885.682 225.264 887.638 cv
cp
f
235.931 879.995 mo
235.931 881.416 233.419 882.568 230.319 882.568 cv
227.22 882.568 224.708 881.416 224.708 879.995 cv
224.708 878.574 227.22 877.422 230.319 877.422 cv
233.419 877.422 235.931 878.574 235.931 879.995 cv
cp
f
328.875 887.638 mo
328.875 889.594 324.752 891.18 319.667 891.18 cv
314.581 891.18 310.458 889.594 310.458 887.638 cv
310.458 885.682 314.581 884.096 319.667 884.096 cv
324.752 884.096 328.875 885.682 328.875 887.638 cv
cp
f
339.543 879.995 mo
339.543 881.416 337.03 882.568 333.931 882.568 cv
330.832 882.568 328.319 881.416 328.319 879.995 cv
328.319 878.574 330.832 877.422 333.931 877.422 cv
337.03 877.422 339.543 878.574 339.543 879.995 cv
cp
f
432.486 887.638 mo
432.486 889.594 428.363 891.18 423.277 891.18 cv
418.191 891.18 414.068 889.594 414.068 887.638 cv
414.068 885.682 418.191 884.096 423.277 884.096 cv
428.363 884.096 432.486 885.682 432.486 887.638 cv
cp
f
443.154 879.995 mo
443.154 881.416 440.642 882.568 437.542 882.568 cv
434.443 882.568 431.931 881.416 431.931 879.995 cv
431.931 878.574 434.443 877.422 437.542 877.422 cv
440.642 877.422 443.154 878.574 443.154 879.995 cv
cp
f
536.098 887.638 mo
536.098 889.594 531.975 891.18 526.889 891.18 cv
521.803 891.18 517.68 889.594 517.68 887.638 cv
517.68 885.682 521.803 884.096 526.889 884.096 cv
531.975 884.096 536.098 885.682 536.098 887.638 cv
cp
f
546.766 879.995 mo
546.766 881.416 544.253 882.568 541.153 882.568 cv
538.055 882.568 535.542 881.416 535.542 879.995 cv
535.542 878.574 538.055 877.422 541.153 877.422 cv
544.253 877.422 546.766 878.574 546.766 879.995 cv
cp
f
639.709 887.638 mo
639.709 889.594 635.586 891.18 630.5 891.18 cv
625.414 891.18 621.291 889.594 621.291 887.638 cv
621.291 885.682 625.414 884.096 630.5 884.096 cv
635.586 884.096 639.709 885.682 639.709 887.638 cv
cp
f
650.377 879.995 mo
650.377 881.416 647.864 882.568 644.765 882.568 cv
641.666 882.568 639.153 881.416 639.153 879.995 cv
639.153 878.574 641.666 877.422 644.765 877.422 cv
647.864 877.422 650.377 878.574 650.377 879.995 cv
cp
f
-52.4014 60.4609 mo
-50.9365 55.8145 -46.5674 49.0391 -41.0674 46.2949 cv
-38.2344 49.5391 -36.9014 55.627 -36.5156 59.6348 cv
-34.6055 56.3438 -30.8262 52.123 -26.666 50.4531 cv
-31.6855 45.0547 -35.4463 36.6035 -35.416 29.8945 cv
-29.1563 29.4434 -24.1367 31.7344 -19.5957 35.7637 cv
-22.3301 29.1484 -24.9561 18.1836 -22.0059 11.7949 cv
-17.6631 11.8145 -12.3164 13.6641 -10.0957 16.7734 cv
-10.9961 12.4805 -11.6631 6.81445 -10.416 1.9043 cv
-4.99609 1.81445 -.956055 3.52344 2.92383 5.27344 cv
2.73438 -.925781 3.95605 -6.66797 6.50391 -12.2969 cv
9.16992 -18.1855 13.3369 -25.6855 17.124 -28.2051 cv
24.5039 -22.6855 26.624 -4.66602 27.1035 .773438 cv
35.2041 -7.4668 45.0645 -8.29688 56.4238 -7.60547 cv
57.1035 1.75391 53.0332 10.7246 46.2041 17.3633 cv
49.3369 16.6484 54.9316 16.2109 58.6445 16.6738 cv
63.4033 17.2676 68.4316 18.9609 71.1816 21.7109 cv
69.8184 28.0273 59.7139 34.0938 56.1641 35.3047 cv
60.8369 35.9824 71.5039 40.1484 73.4639 43.8047 cv
68.4316 50.2109 62.4746 53.2949 59.6641 54.3047 cv
68.4316 55.627 74.7822 59.5664 78.4316 68.127 cv
80.4893 62.0117 85.4639 57.7148 93.4238 55.834 cv
94.8838 61.6162 94.3916 66.2109 91.6025 72.2832 cv
95.7051 68.0156 101.12 65.3906 108.341 65.0625 cv
108.751 71.291 107.027 75.5645 104.402 80.1348 cv
109.381 75.4238 118.861 74.6484 124.781 74.8633 cv
125.371 81.1543 122.281 85.0039 118.912 89.7148 cv
125.195 88.6484 131.361 88.1484 136.313 90.3945 cv
134.982 94.4531 131.332 96.7637 128.541 99.834 cv
137.195 100.48 142.195 104.814 144.432 110.895 cv
-112.734 110.895 li
-111.734 103.461 -102.234 96.2949 -95.5674 97.2949 cv
-100.234 92.4609 -102.234 87.7949 -102.734 81.4609 cv
-96.7344 80.127 -89.5684 83.627 -85.2344 86.627 cv
-85.9004 79.9609 -80.7344 75.4609 -76.2344 74.2949 cv
-79.0674 68.4609 -79.9014 64.4609 -78.5674 57.4609 cv
-71.5664 58.4609 -67.5674 60.7949 -64.5674 65.127 cv
-65.0674 59.127 -64.0684 51.627 -61.7344 48.627 cv
-57.7344 50.627 -53.9014 54.4609 -52.4014 60.4609 cv
cp
.732418 0 .886595 0 cmyk
f
-95.5664 110.895 mo
116.766 110.895 li
115.324 106.979 112.104 104.186 106.528 103.77 cv
108.326 101.791 110.678 100.305 111.535 97.6875 cv
108.346 96.2422 104.372 96.5645 100.325 97.252 cv
102.496 94.2168 104.486 91.7363 104.106 87.6855 cv
100.293 87.5449 94.1855 88.0449 90.9785 91.0801 cv
93.6514 88.0527 93.7422 84.6309 93.4785 80.6172 cv
88.0938 80.25 80.2148 83.9746 77.0703 88.207 cv
78.6055 83.8945 79.0234 79.8848 78.0186 75.4258 cv
71.7656 75.9609 64.9316 78.9609 60.9316 84.1279 cv
58.5811 78.6143 55.9326 74.9609 48.7656 72.4609 cv
50.5762 71.8105 53.7178 68.7119 54.7656 66.1279 cv
51.5986 64.127 47.0986 62.4609 43.3486 62.2012 cv
45.6348 61.4219 52.0488 56.5176 52.9258 52.4492 cv
50.2656 50.9609 46.9326 50.2949 44.9463 50.2012 cv
42.4395 50.084 38.9502 50.1836 36.9326 50.6445 cv
41.332 46.3672 43.9531 40.5898 43.5156 34.5605 cv
36.1982 34.1152 29.8467 34.6504 24.6289 39.959 cv
24.3203 36.4531 22.9541 24.8457 18.1992 21.291 cv
15.7607 22.9141 13.0762 27.7461 11.3584 31.5391 cv
9.7168 35.1641 8.93066 38.8633 9.05273 42.8574 cv
6.55273 41.7305 3.95117 40.6289 .459961 40.6855 cv
-.34375 43.8496 .0859375 47.5 .666016 50.2656 cv
-.764648 48.2617 -4.20801 47.0703 -7.00586 47.0566 cv
-8.90723 51.1738 -7.21582 58.2363 -5.45313 62.498 cv
-8.37891 59.9004 -11.6123 58.4258 -15.6445 58.7168 cv
-15.6641 63.0391 -13.2422 68.4824 -10.0078 71.9609 cv
-12.6875 73.0352 -15.1221 75.7539 -16.3535 77.875 cv
-16.3857 75.9941 -17.0928 70.4746 -18.917 68.3848 cv
-21.8779 69.8633 -24.6592 73.9512 -26.3447 76.2207 cv
-27.5615 73.9102 -29.083 72.0156 -30.9951 70.8145 cv
-34.0371 74.5645 -35.3291 80.1484 -34.3291 83.8145 cv
-39.4004 79.7949 -45.5674 79.9609 -49.9004 82.627 cv
-48.5674 79.2949 -48.2344 74.293 -48.5674 72.9609 cv
-54.2334 73.2949 -59.0674 79.9609 -59.9004 84.627 cv
-62.8047 79.2754 -67.9004 77.4609 -69.9004 77.7949 cv
-71.2334 81.7949 -69.4004 86.7949 -66.5664 89.4609 cv
-72.5664 88.7949 -77.2334 93.7939 -76.2334 98.127 cv
-80.4004 94.4609 -85.2344 93.6279 -87.9004 93.9609 cv
-87.9004 96.627 -87.2334 100.127 -85.2334 102.461 cv
-89.7334 102.795 -95.2334 106.461 -95.5664 110.895 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
57.915 135.314 mo
59.0439 132.016 59.3145 127.395 58.2549 124.055 cv
53.3848 126.445 50.4023 129.762 47.835 134.814 cv
43.1846 123.674 30.3545 122.164 19.9053 122.385 cv
24.3145 118.955 30.4648 117.686 34.0752 113.346 cv
29.2344 109.395 20.4248 110.705 14.9053 111.904 cv
18.4648 109.145 30.5576 99.8652 32.2246 92.8652 cv
28.3945 91.2754 20.0186 92.5059 16.0576 93.3652 cv
7.63379 95.1934 1.98535 98.1787 -4.73535 102.186 cv
-1.44141 98.0332 2.55859 92.8652 3.64453 85.9453 cv
-8.40527 85.1738 -16.4414 91.3652 -23.1953 99.2148 cv
-22.7754 92.8652 -23.2051 84.4355 -28.666 79.5547 cv
-34.6084 81.8652 -39.2197 85.416 -42.8477 90.5117 cv
-46.7646 96.0117 -48.3477 103.512 -49.7754 111.186 cv
-51.2754 104.699 -54.3457 97.2148 -59.6758 95.9453 cv
-66.1855 102.295 -64.2559 114.596 -60.2148 121.664 cv
-63.6953 119.285 -74.2754 114.031 -84.2148 114.965 cv
-84.9414 123.365 -79.1094 130.699 -76.3555 134.814 cv
-82.6855 130.105 -93.1055 128.734 -100.586 130.955 cv
-99.8848 136.805 -96.2754 141.055 -91.9756 144.865 cv
-96.4414 145.199 -100.215 146.846 -104.166 149.244 cv
-106.865 150.885 -108.926 153.096 -110.756 155.445 cv
87.9023 155.445 li
87.9023 155.445 83.9023 145.762 71.6523 144.512 cv
74.6523 142.512 78.1523 137.762 78.4023 134.012 cv
71.4023 130.762 62.6777 132.117 57.915 135.314 cv
cp
.732418 0 .886595 0 cmyk
f
72.9023 155.445 mo
-72.8984 155.445 li
-71.8789 154.133 -70.7285 152.9 -69.2227 151.986 cv
-67.0186 150.646 -64.9131 149.729 -62.4209 149.543 cv
-64.8203 147.416 -66.834 145.045 -67.2246 141.781 cv
-63.0518 140.543 -57.2383 141.307 -53.707 143.936 cv
-55.2422 141.639 -58.4971 137.547 -58.0918 132.859 cv
-52.5459 132.34 -46.6426 135.27 -44.7012 136.598 cv
-46.9551 132.654 -48.0322 125.791 -44.4004 122.248 cv
-41.4258 122.957 -39.7139 127.133 -38.877 130.752 cv
-38.1816 126.679 -37.6123 123.498 -35.1816 119.679 cv
-32.8477 116.012 -30.415 114.393 -27.0996 113.104 cv
-24.0527 115.826 -23.8125 120.531 -24.0469 124.072 cv
-20.2793 119.693 -15.7949 116.24 -9.07227 116.67 cv
-9.67871 120.531 -11.9102 123.412 -13.748 125.73 cv
-9.51855 123.738 -6.84668 121.83 -2.14648 120.809 cv
.0625 120.33 4.73633 119.643 6.87305 120.529 cv
5.94336 124.436 -.803711 129.613 -2.79004 131.152 cv
.289063 130.482 5.2041 129.752 7.90527 131.957 cv
5.8916 134.379 3.09961 135.74 0 137 cv
5.72461 136.365 10.5049 137.273 13.0996 143.49 cv
14.3662 140.545 18.3496 138.74 21.3955 137.932 cv
21.9873 139.795 21.8369 142.373 21.2061 144.215 cv
23.2246 142.365 25.4746 141.115 28.46 140.564 cv
29.9746 143.115 30.0996 145.365 30.2246 147.697 cv
32.8916 145.697 40.5576 146.365 43.2246 149.031 cv
43.2246 146.699 44.8916 142.365 47.2246 140.031 cv
49.9746 142.115 52.0996 144.865 52.8916 148.365 cv
54.2236 145.031 60.0996 141.99 64.2246 141.365 cv
64.0996 144.24 63.5996 146.24 61.8916 148.697 cv
65.9023 148.762 70.9023 151.012 72.9023 155.445 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
73.2646 105.012 mo
74.7295 100.365 79.0986 93.5898 84.5986 90.8457 cv
87.4316 94.0898 88.7646 100.178 89.1504 104.186 cv
91.0605 100.895 94.8398 96.6738 99 95.0039 cv
93.9805 89.6055 90.2197 81.1543 90.25 74.4453 cv
96.5098 73.9941 101.529 76.2852 106.07 80.3145 cv
103.336 73.6992 100.71 62.7344 103.66 56.3457 cv
108.003 56.3652 113.35 58.2148 115.57 61.3242 cv
114.67 57.0313 114.003 51.3652 115.25 46.4551 cv
120.67 46.3652 124.71 48.0742 128.59 49.8242 cv
128.4 43.625 129.622 37.8828 132.17 32.2539 cv
134.836 26.3652 139.003 18.8652 142.79 16.3457 cv
150.17 21.8652 152.29 39.8848 152.77 45.3242 cv
160.87 37.084 170.73 36.2539 182.09 36.9453 cv
182.77 46.3047 178.699 55.2754 171.87 61.9141 cv
175.003 61.1992 180.598 60.7617 184.311 61.2246 cv
189.069 61.8184 194.098 63.5117 196.848 66.2617 cv
195.484 72.5781 185.38 78.6445 181.83 79.8555 cv
186.503 80.5332 197.17 84.6992 199.13 88.3555 cv
194.098 94.7617 188.141 97.8457 185.33 98.8555 cv
194.098 100.178 200.448 104.117 204.098 112.678 cv
206.155 106.563 211.13 102.266 219.09 100.385 cv
220.55 106.167 220.058 110.762 217.269 116.834 cv
221.371 112.566 226.786 109.941 234.007 109.613 cv
234.417 115.842 232.693 120.115 230.068 124.686 cv
235.047 119.975 244.527 119.199 250.447 119.414 cv
251.037 125.705 247.947 129.555 244.578 134.266 cv
250.861 133.199 257.027 132.699 261.979 134.945 cv
260.648 139.004 256.998 141.314 254.207 144.385 cv
262.861 145.031 267.861 149.365 270.098 155.445 cv
12.9316 155.445 li
13.9316 148.012 23.4316 140.846 30.0986 141.846 cv
25.4316 137.012 23.4316 132.346 22.9316 126.012 cv
28.9316 124.678 36.0977 128.178 40.4316 131.178 cv
39.7656 124.512 44.9316 120.012 49.4316 118.846 cv
46.5986 113.012 45.7646 109.012 47.0986 102.012 cv
54.0996 103.012 58.0986 105.346 61.0986 109.678 cv
60.5986 103.678 61.5977 96.1777 63.9316 93.1777 cv
67.9316 95.1777 71.7646 99.0117 73.2646 105.012 cv
cp
.732418 0 .886595 0 cmyk
f
30.0996 155.445 mo
242.432 155.445 li
240.99 151.529 237.77 148.736 232.194 148.32 cv
233.992 146.342 236.344 144.855 237.201 142.238 cv
234.012 140.793 230.038 141.115 225.991 141.803 cv
228.162 138.768 230.152 136.287 229.772 132.236 cv
225.959 132.096 219.852 132.596 216.645 135.631 cv
219.317 132.604 219.408 129.182 219.145 125.168 cv
213.76 124.801 205.881 128.525 202.736 132.758 cv
204.271 128.445 204.689 124.436 203.685 119.977 cv
197.432 120.512 190.598 123.512 186.598 128.679 cv
184.247 123.165 181.599 119.512 174.432 117.012 cv
176.242 116.361 179.384 113.263 180.432 110.679 cv
177.265 108.678 172.765 107.012 169.015 106.752 cv
171.301 105.973 177.715 101.068 178.592 97 cv
175.932 95.5117 172.599 94.8457 170.612 94.752 cv
168.105 94.6348 164.616 94.7344 162.599 95.1953 cv
166.998 90.918 169.619 85.1406 169.182 79.1113 cv
161.864 78.666 155.513 79.2012 150.295 84.5098 cv
149.986 81.0039 148.62 69.3965 143.865 65.8418 cv
141.427 67.4648 138.742 72.2969 137.024 76.0898 cv
135.383 79.7148 134.597 83.4141 134.719 87.4082 cv
132.219 86.2813 129.617 85.1797 126.126 85.2363 cv
125.322 88.4004 125.752 92.0508 126.332 94.8164 cv
124.901 92.8125 121.458 91.6211 118.66 91.6074 cv
116.759 95.7246 118.45 102.787 120.213 107.049 cv
117.287 104.451 114.054 102.977 110.021 103.268 cv
110.002 107.59 112.424 113.033 115.658 116.512 cv
112.979 117.586 110.544 120.305 109.313 122.426 cv
109.28 120.545 108.573 115.025 106.749 112.936 cv
103.788 114.414 101.007 118.502 99.3213 120.771 cv
98.1045 118.461 96.583 116.566 94.6709 115.365 cv
91.6289 119.115 90.3369 124.699 91.3369 128.365 cv
86.2656 124.346 80.0986 124.512 75.7656 127.178 cv
77.0986 123.846 77.4316 118.844 77.0986 117.512 cv
71.4326 117.846 66.5986 124.512 65.7656 129.178 cv
62.8613 123.826 57.7656 122.012 55.7656 122.346 cv
54.4326 126.346 56.2656 131.346 59.0996 134.012 cv
53.0996 133.346 48.4326 138.345 49.4326 142.678 cv
45.2656 139.012 40.4316 138.179 37.7656 138.512 cv
37.7656 141.178 38.4326 144.678 40.4326 147.012 cv
35.9326 147.346 30.4326 151.012 30.0996 155.445 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
774.56 90 mo
554.477 90 li
558.469 82.3164 567.269 75.9004 573.136 74.5664 cv
570.202 71.8164 568.654 67.4834 568.002 63.8164 cv
573.38 61.8164 576.802 61.3164 582.079 63.3301 cv
579.735 56.5664 579.002 49.8164 580.713 43.8164 cv
589.425 45.0605 596.911 51.959 599.894 56.8789 cv
598.788 54.4004 597.37 49.3457 597.048 46.5859 cv
596.627 42.9766 596.113 38.3164 597.048 34.8887 cv
600.47 34.2539 606.396 38 608.714 40.2793 cv
607.151 35.7539 605.849 31.7539 604.978 25.7695 cv
604.39 21.7227 603.433 13.5586 605.389 9.91016 cv
608.456 9.58789 613.71 11.4688 615.038 12.2793 cv
619.165 14.8086 622.308 16.9199 626.304 21.2598 cv
621.943 9.40039 620.964 -2.66992 626.958 -14.5 cv
631.434 -12.9141 635.23 -8.32031 637.157 -5.25 cv
635.876 -18.8398 643.2 -32.1113 653.28 -39.9004 cv
656.966 -32.2598 656.329 -23.7666 654.346 -16.2305 cv
660.408 -25.7012 670.577 -29.1699 680.57 -31.3906 cv
680.286 -24.3008 675.922 -16.4121 670.46 -10.6602 cv
679.183 -16.0801 687.21 -15.6504 697.202 -15 cv
696.411 -10.2109 692.219 -4.24609 687.161 -1.16016 cv
693.321 -.767578 698.737 5.08789 699.813 10.8789 cv
702.812 7.75391 706.442 5.2832 711.966 4.04883 cv
715.301 3.29883 718.733 3.26953 722.126 3.5 cv
722.615 12.25 714.544 20.9199 707.694 25.4297 cv
714.343 26.0391 719.885 32.0664 720.864 37.8789 cv
725.263 33.7334 732.271 31.8164 736.67 32.5664 cv
737.892 36.3164 737.974 45.5664 733.247 54.0664 cv
741.804 51.3164 747.996 51.4824 754.597 53.2324 cv
756.063 56.7324 754.271 64.9004 750.358 70.4004 cv
760.626 71.2334 772.687 78.7334 774.56 90 cv
cp
.732418 0 .886595 0 cmyk
f
566.477 90 mo
761.81 90 li
758.56 82.5664 749.144 77.5664 738.476 80.2334 cv
742.81 76.9004 742.976 70.7324 743.31 65.0664 cv
737.31 63.7334 730.81 64.8164 725.81 70.0664 cv
726.06 63.3164 720.06 57.3164 714.015 58.252 cv
713.015 54.252 710.349 49.5859 708.683 47.9199 cv
703.683 50.9199 702.423 53.1719 700.886 56.5449 cv
699.157 53.1309 696.603 48.9453 692.239 48.5547 cv
696.735 45.6602 702.034 40.0938 701.714 34.4766 cv
699.485 34.3301 697.233 34.3496 695.044 34.8301 cv
691.417 35.6211 689.034 37.209 687.065 39.2148 cv
686.358 35.4961 683.054 31.0879 678.759 31.4863 cv
682.079 29.5039 684.831 25.6777 685.351 22.6035 cv
678.792 22.1855 673.522 21.9102 667.796 25.3887 cv
671.382 21.6953 674.247 16.6328 674.433 12.082 cv
667.874 13.5059 661.198 15.7344 657.218 21.8125 cv
658.476 16.9004 658.938 11.5234 656.519 6.61914 cv
649.901 11.6191 645.093 20.1387 645.935 28.8613 cv
644.669 26.8906 642.177 23.9414 639.239 22.9238 cv
635.304 30.5156 635.976 38.4004 638.81 45.877 cv
636.187 43.0918 634.124 41.7363 631.415 40.1133 cv
630.542 39.5938 627.093 38.3848 625.079 38.5918 cv
623.796 40.9355 624.423 46.1738 624.81 48.7715 cv
625.382 52.6133 626.237 55.1797 627.263 58.0859 cv
625.741 56.623 621.851 54.2188 619.604 54.625 cv
618.698 56.8652 619.329 59.8164 619.604 62.1328 cv
619.815 63.9043 620.747 67.1484 621.472 68.7402 cv
619.515 65.582 615.433 59.6738 609.714 58.875 cv
607.634 62.8867 609.274 73.8613 609.274 73.8613 cv
607.247 73.6152 598.003 73.0156 592.683 81.5859 cv
590.015 77.252 584.349 76.5859 582.349 75.9199 cv
581.016 77.5859 581.349 81.2539 582.349 83.5859 cv
576.683 82.252 569.81 85.5664 566.477 90 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
467.955 52.0566 mo
469.42 47.4102 473.789 40.6348 479.289 37.8906 cv
482.122 41.1348 483.455 47.2227 483.841 51.2305 cv
485.751 47.9395 489.53 43.7188 493.69 42.0488 cv
488.671 36.6504 484.91 28.1992 484.94 21.4902 cv
491.2 21.0391 496.22 23.3301 500.761 27.3594 cv
498.026 20.7441 495.4 9.7793 498.351 3.39063 cv
502.693 3.41016 508.04 5.25977 510.261 8.36914 cv
509.36 4.07617 508.693 -1.58984 509.94 -6.5 cv
515.36 -6.58984 519.4 -4.88086 523.28 -3.13086 cv
523.091 -9.33008 524.313 -15.0723 526.86 -20.7012 cv
529.526 -26.5898 533.693 -34.0898 537.48 -36.6094 cv
544.86 -31.0898 546.98 -13.0703 547.46 -7.63086 cv
555.561 -15.8711 565.421 -16.7012 576.78 -16.0098 cv
577.46 -6.65039 573.39 2.32031 566.561 8.95898 cv
569.693 8.24414 575.288 7.80664 579.001 8.26953 cv
583.76 8.86328 588.788 10.5566 591.538 13.3066 cv
590.175 19.623 580.07 25.6895 576.521 26.9004 cv
581.193 27.5781 591.86 31.7441 593.82 35.4004 cv
588.788 41.8066 582.831 44.8906 580.021 45.9004 cv
588.788 47.2227 595.139 51.1621 598.788 59.7227 cv
600.846 53.6074 605.82 49.3105 613.78 47.4297 cv
615.24 53.2119 614.748 57.8066 611.959 63.8789 cv
616.062 59.6113 621.477 56.9863 628.697 56.6582 cv
629.107 62.8867 627.384 67.1602 624.759 71.7305 cv
629.737 67.0195 639.218 66.2441 645.138 66.459 cv
645.728 72.75 642.638 76.5996 639.269 81.3105 cv
645.552 80.2441 651.718 79.7441 656.669 81.9902 cv
655.339 86.0488 651.688 88.3594 648.897 91.4297 cv
657.552 92.0762 662.552 96.4102 664.788 102.49 cv
407.622 102.49 li
408.622 95.0566 418.122 87.8906 424.789 88.8906 cv
420.122 84.0566 418.122 79.3906 417.622 73.0566 cv
423.622 71.7227 430.788 75.2227 435.122 78.2227 cv
434.456 71.5566 439.622 67.0566 444.122 65.8906 cv
441.289 60.0566 440.455 56.0566 441.789 49.0566 cv
448.79 50.0566 452.789 52.3906 455.789 56.7227 cv
455.289 50.7227 456.288 43.2227 458.622 40.2227 cv
462.622 42.2227 466.455 46.0566 467.955 52.0566 cv
cp
.732418 0 .886595 0 cmyk
f
424.79 102.49 mo
637.122 102.49 li
635.681 98.5742 632.46 95.7813 626.885 95.3652 cv
628.683 93.3867 631.034 91.9004 631.892 89.2832 cv
628.702 87.8379 624.729 88.1602 620.682 88.8477 cv
622.853 85.8125 624.843 83.332 624.463 79.2813 cv
620.649 79.1406 614.542 79.6406 611.335 82.6758 cv
614.008 79.6484 614.099 76.2266 613.835 72.2129 cv
608.45 71.8457 600.571 75.5703 597.427 79.8027 cv
598.962 75.4902 599.38 71.4805 598.375 67.0215 cv
592.122 67.5566 585.288 70.5566 581.288 75.7236 cv
578.938 70.21 576.289 66.5566 569.122 64.0566 cv
570.933 63.4063 574.074 60.3076 575.122 57.7236 cv
571.955 55.7227 567.455 54.0566 563.705 53.7969 cv
565.991 53.0176 572.405 48.1133 573.282 44.0449 cv
570.622 42.5566 567.289 41.8906 565.303 41.7969 cv
562.796 41.6797 559.307 41.7793 557.289 42.2402 cv
561.688 37.9629 564.31 32.1855 563.872 26.1563 cv
556.555 25.7109 550.203 26.2461 544.985 31.5547 cv
544.677 28.0488 543.311 16.4414 538.556 12.8867 cv
536.117 14.5098 533.433 19.3418 531.715 23.1348 cv
530.073 26.7598 529.287 30.459 529.409 34.4531 cv
526.909 33.3262 524.308 32.2246 520.816 32.2813 cv
520.013 35.4453 520.442 39.0957 521.022 41.8613 cv
519.592 39.8574 516.148 38.666 513.351 38.6523 cv
511.449 42.7695 513.141 49.832 514.903 54.0938 cv
511.978 51.4961 508.744 50.0215 504.712 50.3125 cv
504.692 54.6348 507.114 60.0781 510.349 63.5566 cv
507.669 64.6309 505.234 67.3496 504.003 69.4707 cv
503.971 67.5898 503.264 62.0703 501.439 59.9805 cv
498.479 61.459 495.697 65.5469 494.012 67.8164 cv
492.795 65.5059 491.273 63.6113 489.361 62.4102 cv
486.319 66.1602 485.027 71.7441 486.027 75.4102 cv
480.956 71.3906 474.789 71.5566 470.456 74.2227 cv
471.789 70.8906 472.122 65.8887 471.789 64.5566 cv
466.123 64.8906 461.289 71.5566 460.456 76.2227 cv
457.552 70.8711 452.456 69.0566 450.456 69.3906 cv
449.123 73.3906 450.956 78.3906 453.79 81.0566 cv
447.79 80.3906 443.123 85.3896 444.123 89.7227 cv
439.956 86.0566 435.122 85.2236 432.456 85.5566 cv
432.456 88.2227 433.123 91.7227 435.123 94.0566 cv
430.623 94.3906 425.123 98.0566 424.79 102.49 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
108.5 994.894 mo
107.441 977.505 111.75 929.842 137.75 928.633 cv
140.25 909.528 152.008 883.923 172 883.169 cv
191.25 882.443 207 895.261 218 950.881 cv
226.75 947.495 254 945.802 261 993.926 cv
257.75 999.729 217 1004.08 202 997.312 cv
185.25 1003.36 115 1003.12 108.5 994.894 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
129.33 952.34 mo
142.02 956.77 142.33 988.06 141.469 1001.14 cv
125.049 1000.37 111.209 998.33 108.5 994.89 cv
108.059 987.62 108.549 975.06 111.18 962.81 cv
114.26 954.95 120.129 949.12 129.33 952.34 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
158.66 1001.49 mo
155.17 1001.51 151.66 1001.48 148.219 1001.38 cv
149.01 995.04 150.48 977.99 148.67 968.34 cv
154.549 970.62 158.51 993.05 158.66 1001.49 cv
cp
f
142.4 928.28 mo
154.719 928.07 172.58 933.52 178.33 961 cv
181.189 974.68 181.93 986.52 181.709 1000.6 cv
177.68 1000.92 173.33 1001.16 168.84 1001.31 cv
169.689 992.08 171.51 958.87 161 944.34 cv
148.76 927.42 130.77 928.8 123.15 935.8 cv
127.01 931.6 131.82 928.91 137.75 928.63 cv
139.17 928.439 140.74 928.3 142.4 928.28 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
184 953 mo
186.059 970.97 185.779 992.32 185.459 1000.27 cv
184.25 1000.39 182.99 1000.5 181.709 1000.6 cv
181.93 986.52 181.189 974.68 178.33 961 cv
172.58 933.52 154.719 928.07 142.4 928.28 cv
143.879 920.91 149.85 900.02 159.67 901.34 cv
169.67 902.67 169.33 921.67 169.33 931.67 cv
172.67 930 181.67 932.67 184 953 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
236.67 974.34 mo
244.209 976.75 246.57 991.729 246.939 999 cv
240.449 1000.1 232.529 1000.78 224.9 1000.75 cv
224.029 980.17 229.889 972.17 236.67 974.34 cv
cp
f
261 993.93 mo
260.119 995.51 256.469 996.979 251.32 998.14 cv
251.16 983.64 246.75 966.16 234 957.34 cv
221.84 948.92 210.549 954.79 205.869 964.86 cv
208.359 958.57 212.23 953.46 218 950.88 cv
226.75 947.5 254 945.8 261 993.93 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
205.869 964.86 mo
202.01 974.55 201.389 987.02 202 997.31 cv
200.289 997.93 198.029 998.479 195.33 998.96 cv
196.07 992.64 197.549 975.439 195.33 961 cv
190.969 932.64 181.67 925 175.67 923 cv
192.67 921.34 203.67 942.34 205.33 948.67 cv
202.33 928.67 197 910.34 187 896 cv
178.9 884.39 165.34 883.72 156.039 889.9 cv
160.57 885.939 165.9 883.4 172 883.17 cv
191.25 882.439 207 895.26 218 950.88 cv
212.23 953.46 208.359 958.57 205.869 964.86 cv
cp
f
140.691 953.724 mo
139.648 954.891 137.525 954.693 135.945 953.282 cv
134.367 951.872 133.934 949.782 134.975 948.616 cv
136.018 947.449 138.143 947.646 139.721 949.058 cv
141.301 950.468 141.734 952.558 140.691 953.724 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
139.184 945.313 mo
138.514 946.063 137.166 945.951 136.174 945.063 cv
135.182 944.177 134.92 942.851 135.59 942.103 cv
136.258 941.353 137.605 941.464 138.598 942.352 cv
139.59 943.238 139.852 944.563 139.184 945.313 cv
cp
f
166.488 898.084 mo
165.705 899.44 163.586 899.682 161.752 898.624 cv
159.918 897.567 159.064 895.61 159.846 894.256 cv
160.627 892.899 162.748 892.658 164.582 893.716 cv
166.416 894.772 167.268 896.729 166.488 898.084 cv
cp
f
170.721 895.17 mo
170.244 895.705 169.344 895.685 168.715 895.122 cv
168.084 894.559 167.963 893.668 168.441 893.133 cv
168.922 892.596 169.82 892.617 170.449 893.18 cv
171.08 893.743 171.201 894.633 170.721 895.17 cv
cp
f
172.656 901.175 mo
171.986 901.925 170.758 901.919 169.912 901.161 cv
169.063 900.404 168.92 899.184 169.59 898.436 cv
170.258 897.686 171.486 897.691 172.334 898.449 cv
173.182 899.206 173.326 900.426 172.656 901.175 cv
cp
f
226 967.844 mo
227.352 968.635 227.58 970.756 226.51 972.584 cv
225.441 974.411 223.479 975.251 222.129 974.461 cv
220.777 973.67 220.551 971.549 221.619 969.722 cv
222.689 967.894 224.65 967.055 226 967.844 cv
cp
f
233.391 965.825 mo
234.258 966.333 234.416 967.675 233.742 968.823 cv
233.07 969.973 231.822 970.491 230.957 969.984 cv
230.09 969.478 229.932 968.135 230.604 966.985 cv
231.275 965.837 232.523 965.317 233.391 965.825 cv
cp
f
-27.5 164.894 mo
-28.5586 147.505 -24.25 99.8418 1.75 98.6328 cv
4.25 79.5283 16.0078 53.9229 36 53.1689 cv
55.25 52.4434 71 65.2607 82 120.881 cv
90.75 117.495 118 115.802 125 163.926 cv
121.75 169.729 81 174.083 66 167.312 cv
49.25 173.357 -21 173.115 -27.5 164.894 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
-6.66992 122.34 mo
6.01953 126.77 6.33008 158.06 5.46875 171.14 cv
-10.9512 170.37 -24.791 168.33 -27.5 164.89 cv
-27.9414 157.62 -27.4512 145.06 -24.8203 132.81 cv
-21.7402 124.95 -15.8711 119.12 -6.66992 122.34 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
22.6602 171.49 mo
19.1699 171.51 15.6602 171.479 12.2188 171.38 cv
13.0098 165.04 14.4805 147.99 12.6699 138.34 cv
18.5488 140.62 22.5098 163.05 22.6602 171.49 cv
cp
f
6.40039 98.2803 mo
18.7188 98.0703 36.5801 103.52 42.3301 131 cv
45.1895 144.68 45.9297 156.52 45.709 170.6 cv
41.6797 170.92 37.3301 171.16 32.8398 171.31 cv
33.6895 162.08 35.5098 128.87 25 114.34 cv
12.7598 97.4199 -5.23047 98.7998 -12.8496 105.8 cv
-8.99023 101.6 -4.17969 98.9102 1.75 98.6299 cv
3.16992 98.4395 4.74023 98.2998 6.40039 98.2803 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
48 123 mo
50.0586 140.97 49.7793 162.32 49.459 170.27 cv
48.25 170.39 46.9902 170.5 45.709 170.6 cv
45.9297 156.52 45.1895 144.68 42.3301 131 cv
36.5801 103.52 18.7188 98.0703 6.40039 98.2803 cv
7.87891 90.9102 13.8496 70.0195 23.6699 71.3398 cv
33.6699 72.6699 33.3301 91.6699 33.3301 101.67 cv
36.6699 100 45.6699 102.67 48 123 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
100.67 144.34 mo
108.209 146.75 110.57 161.729 110.939 169 cv
104.449 170.1 96.5293 170.78 88.9004 170.75 cv
88.0293 150.17 93.8887 142.17 100.67 144.34 cv
cp
f
125 163.93 mo
124.119 165.51 120.469 166.979 115.32 168.14 cv
115.16 153.64 110.75 136.16 98 127.34 cv
85.8398 118.92 74.5488 124.79 69.8691 134.86 cv
72.3594 128.57 76.2305 123.46 82 120.88 cv
90.75 117.5 118 115.8 125 163.93 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
69.8691 134.86 mo
66.0098 144.55 65.3887 157.02 66 167.31 cv
64.2891 167.93 62.0293 168.479 59.3301 168.96 cv
60.0703 162.64 61.5488 145.439 59.3301 131 cv
54.9688 102.64 45.6699 95 39.6699 93 cv
56.6699 91.3398 67.6699 112.34 69.3301 118.67 cv
66.3301 98.6699 61 80.3398 51 66 cv
42.9004 54.3896 29.3398 53.7197 20.0391 59.9004 cv
24.5703 55.9395 29.9004 53.4004 36 53.1699 cv
55.25 52.4395 71 65.2598 82 120.88 cv
76.2305 123.46 72.3594 128.57 69.8691 134.86 cv
cp
f
4.69141 123.724 mo
3.64844 124.891 1.52539 124.693 -.0546875 123.282 cv
-1.63281 121.872 -2.06641 119.782 -1.02539 118.616 cv
.0175781 117.449 2.14258 117.646 3.7207 119.058 cv
5.30078 120.468 5.73438 122.558 4.69141 123.724 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
3.18359 115.313 mo
2.51367 116.063 1.16602 115.951 .173828 115.063 cv
-.818359 114.177 -1.08008 112.851 -.410156 112.103 cv
.257813 111.353 1.60547 111.464 2.59766 112.352 cv
3.58984 113.238 3.85156 114.563 3.18359 115.313 cv
cp
f
30.4883 68.084 mo
29.7051 69.4404 27.5859 69.6816 25.752 68.624 cv
23.918 67.5674 23.0645 65.6104 23.8457 64.2559 cv
24.627 62.8994 26.748 62.6582 28.582 63.7158 cv
30.416 64.7725 31.2676 66.7295 30.4883 68.084 cv
cp
f
34.7207 65.1699 mo
34.2441 65.7051 33.3438 65.6846 32.7148 65.1221 cv
32.084 64.5586 31.9629 63.668 32.4414 63.1328 cv
32.9219 62.5957 33.8203 62.6172 34.4492 63.1797 cv
35.0801 63.7432 35.2012 64.6328 34.7207 65.1699 cv
cp
f
36.6563 71.1748 mo
35.9863 71.9248 34.7578 71.9189 33.9121 71.1611 cv
33.0625 70.4043 32.9199 69.1836 33.5898 68.4355 cv
34.2578 67.6855 35.4863 67.6914 36.334 68.4492 cv
37.1816 69.2061 37.3262 70.4258 36.6563 71.1748 cv
cp
f
90 137.844 mo
91.3516 138.635 91.5801 140.756 90.5098 142.584 cv
89.4414 144.411 87.4785 145.251 86.1289 144.461 cv
84.7773 143.67 84.5508 141.549 85.6191 139.722 cv
86.6895 137.894 88.6504 137.055 90 137.844 cv
cp
f
97.3906 135.825 mo
98.2578 136.333 98.416 137.675 97.7422 138.823 cv
97.0703 139.973 95.8223 140.491 94.957 139.984 cv
94.0898 139.478 93.9316 138.135 94.6035 136.985 cv
95.2754 135.837 96.5234 135.317 97.3906 135.825 cv
cp
f
544.025 119.283 mo
542.967 101.895 547.275 54.2314 573.275 53.0225 cv
575.775 33.918 587.533 8.3125 607.525 7.55859 cv
626.775 6.83301 642.525 19.6504 653.525 75.2705 cv
662.275 71.8848 689.525 70.1914 696.525 118.315 cv
693.275 124.119 652.525 128.473 637.525 121.701 cv
620.775 127.747 550.525 127.505 544.025 119.283 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
564.855 76.7295 mo
577.545 81.1592 577.855 112.449 576.994 125.529 cv
560.574 124.76 546.734 122.72 544.025 119.279 cv
543.584 112.01 544.074 99.4492 546.705 87.1992 cv
549.785 79.3398 555.654 73.5098 564.855 76.7295 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
594.186 125.88 mo
590.695 125.899 587.186 125.869 583.744 125.77 cv
584.535 119.43 586.006 102.38 584.195 92.7295 cv
590.074 95.0098 594.035 117.439 594.186 125.88 cv
cp
f
577.926 52.6699 mo
590.244 52.46 608.105 57.9092 613.855 85.3896 cv
616.715 99.0693 617.455 110.909 617.234 124.989 cv
613.205 125.31 608.855 125.55 604.365 125.699 cv
605.215 116.47 607.035 83.2598 596.525 68.7295 cv
584.285 51.8096 566.295 53.1895 558.676 60.1895 cv
562.535 55.9893 567.346 53.2998 573.275 53.0195 cv
574.695 52.8291 576.266 52.6895 577.926 52.6699 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
619.525 77.3896 mo
621.584 95.3594 621.305 116.71 620.984 124.659 cv
619.775 124.779 618.516 124.89 617.234 124.989 cv
617.455 110.909 616.715 99.0693 613.855 85.3896 cv
608.105 57.9092 590.244 52.46 577.926 52.6699 cv
579.404 45.2998 585.375 24.4092 595.195 25.7295 cv
605.195 27.0596 604.855 46.0596 604.855 56.0596 cv
608.195 54.3896 617.195 57.0596 619.525 77.3896 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
696.525 118.319 mo
695.645 119.899 691.994 121.369 686.846 122.529 cv
686.686 108.029 682.275 90.5498 669.525 81.7295 cv
657.365 73.3096 646.074 79.1797 641.395 89.25 cv
643.885 82.96 647.756 77.8496 653.525 75.2695 cv
662.275 71.8896 689.525 70.1895 696.525 118.319 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
641.395 89.25 mo
637.535 98.9395 636.914 111.409 637.525 121.699 cv
635.814 122.319 633.555 122.869 630.855 123.35 cv
631.596 117.029 633.074 99.8291 630.855 85.3896 cv
626.494 57.0293 617.195 49.3896 611.195 47.3896 cv
628.195 45.7295 639.195 66.7295 640.855 73.0596 cv
637.855 53.0596 632.525 34.7295 622.525 20.3896 cv
614.426 8.7793 600.865 8.10938 591.564 14.29 cv
596.096 10.3291 601.426 7.79004 607.525 7.55957 cv
626.775 6.8291 642.525 19.6494 653.525 75.2695 cv
647.756 77.8496 643.885 82.96 641.395 89.25 cv
cp
f
576.217 78.1133 mo
575.174 79.2803 573.051 79.083 571.471 77.6719 cv
569.893 76.2617 569.459 74.1719 570.5 73.0059 cv
571.543 71.8389 573.668 72.0361 575.246 73.4473 cv
576.826 74.8574 577.26 76.9473 576.217 78.1133 cv
cp
.452949 .614435 .639734 .301122 cmyk
f
574.709 69.7021 mo
574.039 70.4521 572.691 70.3408 571.699 69.4531 cv
570.707 68.5664 570.445 67.2402 571.115 66.4922 cv
571.783 65.7422 573.131 65.8535 574.123 66.7412 cv
575.115 67.6279 575.377 68.9531 574.709 69.7021 cv
cp
f
602.014 22.4736 mo
601.23 23.8301 599.111 24.0713 597.277 23.0137 cv
595.443 21.957 594.59 20 595.371 18.6455 cv
596.152 17.2891 598.273 17.0479 600.107 18.1055 cv
601.941 19.1621 602.793 21.1191 602.014 22.4736 cv
cp
f
606.246 19.5596 mo
605.77 20.0947 604.869 20.0742 604.24 19.5117 cv
603.609 18.9482 603.488 18.0576 603.967 17.5225 cv
604.447 16.9854 605.346 17.0068 605.975 17.5693 cv
606.605 18.1328 606.727 19.0225 606.246 19.5596 cv
cp
f
608.182 25.5645 mo
607.512 26.3145 606.283 26.3086 605.438 25.5508 cv
604.588 24.7939 604.445 23.5732 605.115 22.8252 cv
605.783 22.0752 607.012 22.0811 607.859 22.8389 cv
608.707 23.5957 608.852 24.8154 608.182 25.5645 cv
cp
f
422.246 342.577 mo
418.654 340.612 409.645 341.665 409.617 345.676 cv
409.594 349.132 418.844 348.768 421.701 348.041 cv
423.68 347.537 426.463 344.882 422.246 342.577 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
423.446 343.78 mo
423.446 344.946 420.679 345.897 417.265 345.897 cv
413.854 345.897 411.086 344.946 411.086 343.78 cv
411.086 342.609 413.854 341.664 417.265 341.664 cv
420.679 341.664 423.446 342.609 423.446 343.78 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
415.758 344.337 mo
415.758 344.694 415.27 344.986 414.668 344.986 cv
414.066 344.986 413.58 344.694 413.58 344.337 cv
413.58 343.98 414.066 343.688 414.668 343.688 cv
415.27 343.688 415.758 343.98 415.758 344.337 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
432.076 321.506 mo
427.683 319.063 414.764 320.041 408.305 326.631 cv
401.852 333.222 403.314 338.349 415.055 339.446 cv
426.795 340.546 438.241 339.446 437.947 334.32 cv
437.652 329.193 434.719 322.969 432.076 321.506 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
414.266 332.49 mo
423.266 332.49 434.803 330.623 435.46 325.642 cv
436.776 328.182 437.796 331.418 437.953 334.308 cv
438.234 339.438 426.797 340.532 415.063 339.438 cv
405.583 338.566 402.809 335.055 405.444 330.275 cv
406.142 331.566 408.616 332.49 414.266 332.49 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
414.515 329.221 mo
414.515 329.994 413.454 330.623 412.145 330.623 cv
410.834 330.623 409.773 329.994 409.773 329.221 cv
409.773 328.448 410.834 327.822 412.145 327.822 cv
413.454 327.822 414.515 328.448 414.515 329.221 cv
cp
f
417.26 326.576 mo
417.26 327.094 416.7 327.509 416.01 327.509 cv
415.323 327.509 414.764 327.094 414.764 326.576 cv
414.764 326.063 415.323 325.642 416.01 325.642 cv
416.7 325.642 417.26 326.063 417.26 326.576 cv
cp
f
432.559 334.382 mo
435.884 332.836 445.655 333.455 450.538 337.628 cv
455.423 341.8 454.314 345.046 445.436 345.74 cv
436.555 346.438 427.897 345.74 428.119 342.494 cv
428.341 339.25 430.562 335.311 432.559 334.382 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
446.031 341.337 mo
439.227 341.337 430.5 340.153 430 337 cv
429.004 338.607 428.232 340.659 428.115 342.486 cv
427.902 345.736 436.553 346.428 445.43 345.736 cv
452.599 345.183 454.697 342.96 452.705 339.934 cv
452.176 340.753 450.307 341.337 446.031 341.337 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
445.844 339.269 mo
445.844 339.756 446.646 340.153 447.637 340.153 cv
448.627 340.153 449.43 339.756 449.43 339.269 cv
449.43 338.779 448.627 338.38 447.637 338.38 cv
446.646 338.38 445.844 338.779 445.844 339.269 cv
cp
f
443.768 337.594 mo
443.768 337.919 444.189 338.184 444.713 338.184 cv
445.232 338.184 445.655 337.919 445.655 337.594 cv
445.655 337.266 445.232 337 444.713 337 cv
444.189 337 443.768 337.266 443.768 337.594 cv
cp
f
38.2461 204.577 mo
34.6543 202.612 25.6445 203.665 25.6172 207.676 cv
25.5938 211.132 34.8438 210.768 37.7012 210.041 cv
39.6797 209.537 42.4629 206.882 38.2461 204.577 cv
cp
f
39.4463 205.78 mo
39.4463 206.946 36.6787 207.897 33.2646 207.897 cv
29.8535 207.897 27.0859 206.946 27.0859 205.78 cv
27.0859 204.609 29.8535 203.664 33.2646 203.664 cv
36.6787 203.664 39.4463 204.609 39.4463 205.78 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
31.7578 206.337 mo
31.7578 206.694 31.2695 206.986 30.668 206.986 cv
30.0664 206.986 29.5801 206.694 29.5801 206.337 cv
29.5801 205.98 30.0664 205.688 30.668 205.688 cv
31.2695 205.688 31.7578 205.98 31.7578 206.337 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
48.0762 183.506 mo
43.6826 181.063 30.7637 182.041 24.3047 188.631 cv
17.8516 195.222 19.3145 200.349 31.0547 201.446 cv
42.7949 202.546 54.2412 201.446 53.9473 196.32 cv
53.6523 191.193 50.7188 184.969 48.0762 183.506 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
30.2656 194.49 mo
39.2656 194.49 50.8027 192.623 51.46 187.642 cv
52.7764 190.182 53.7959 193.418 53.9531 196.308 cv
54.2344 201.438 42.7969 202.532 31.0635 201.438 cv
21.583 200.566 18.8086 197.055 21.4443 192.275 cv
22.1416 193.566 24.6162 194.49 30.2656 194.49 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
30.5146 191.221 mo
30.5146 191.994 29.4541 192.623 28.1445 192.623 cv
26.834 192.623 25.7734 191.994 25.7734 191.221 cv
25.7734 190.448 26.834 189.822 28.1445 189.822 cv
29.4541 189.822 30.5146 190.448 30.5146 191.221 cv
cp
f
33.2598 188.576 mo
33.2598 189.094 32.7002 189.509 32.0098 189.509 cv
31.3232 189.509 30.7637 189.094 30.7637 188.576 cv
30.7637 188.063 31.3232 187.642 32.0098 187.642 cv
32.7002 187.642 33.2598 188.063 33.2598 188.576 cv
cp
f
48.5586 196.382 mo
51.8838 194.836 61.6553 195.455 66.5381 199.628 cv
71.4229 203.8 70.3145 207.046 61.4355 207.74 cv
52.5547 208.438 43.8975 207.74 44.1191 204.494 cv
44.3408 201.25 46.5615 197.311 48.5586 196.382 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
62.0313 203.337 mo
55.2266 203.337 46.5 202.153 46 199 cv
45.0039 200.607 44.2324 202.659 44.1152 204.486 cv
43.9023 207.736 52.5527 208.428 61.4297 207.736 cv
68.5986 207.183 70.6973 204.96 68.7051 201.934 cv
68.1758 202.753 66.3066 203.337 62.0313 203.337 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
61.8438 201.269 mo
61.8438 201.756 62.6465 202.153 63.6367 202.153 cv
64.627 202.153 65.4297 201.756 65.4297 201.269 cv
65.4297 200.779 64.627 200.38 63.6367 200.38 cv
62.6465 200.38 61.8438 200.779 61.8438 201.269 cv
cp
f
59.7676 199.594 mo
59.7676 199.919 60.1895 200.184 60.7129 200.184 cv
61.2324 200.184 61.6553 199.919 61.6553 199.594 cv
61.6553 199.266 61.2324 199 60.7129 199 cv
60.1895 199 59.7676 199.266 59.7676 199.594 cv
cp
f
597.546 155.76 mo
593.954 153.795 584.944 154.848 584.917 158.859 cv
584.894 162.314 594.144 161.95 597.001 161.223 cv
598.979 160.72 601.763 158.065 597.546 155.76 cv
cp
f
598.746 156.962 mo
598.746 158.129 595.979 159.08 592.564 159.08 cv
589.153 159.08 586.386 158.129 586.386 156.962 cv
586.386 155.792 589.153 154.847 592.564 154.847 cv
595.979 154.847 598.746 155.792 598.746 156.962 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
591.058 157.52 mo
591.058 157.877 590.569 158.168 589.968 158.168 cv
589.366 158.168 588.88 157.877 588.88 157.52 cv
588.88 157.163 589.366 156.871 589.968 156.871 cv
590.569 156.871 591.058 157.163 591.058 157.52 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
607.376 134.688 mo
602.982 132.245 590.063 133.224 583.604 139.814 cv
577.151 146.404 578.614 151.532 590.354 152.629 cv
602.095 153.729 613.541 152.629 613.247 147.502 cv
612.952 142.376 610.019 136.151 607.376 134.688 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
589.565 145.673 mo
598.565 145.673 610.103 143.806 610.76 138.824 cv
612.076 141.364 613.096 144.601 613.253 147.491 cv
613.534 152.62 602.097 153.715 590.363 152.62 cv
580.883 151.749 578.108 148.237 580.744 143.458 cv
581.441 144.749 583.916 145.673 589.565 145.673 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
589.814 142.404 mo
589.814 143.177 588.754 143.806 587.444 143.806 cv
586.134 143.806 585.073 143.177 585.073 142.404 cv
585.073 141.631 586.134 141.004 587.444 141.004 cv
588.754 141.004 589.814 141.631 589.814 142.404 cv
cp
f
592.56 139.759 mo
592.56 140.276 592 140.692 591.31 140.692 cv
590.623 140.692 590.063 140.276 590.063 139.759 cv
590.063 139.245 590.623 138.824 591.31 138.824 cv
592 138.824 592.56 139.245 592.56 139.759 cv
cp
f
607.858 147.564 mo
611.184 146.019 620.955 146.637 625.838 150.811 cv
630.723 154.982 629.614 158.229 620.735 158.922 cv
611.854 159.621 603.197 158.922 603.419 155.676 cv
603.641 152.432 605.861 148.494 607.858 147.564 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
621.331 154.52 mo
614.526 154.52 605.8 153.336 605.3 150.183 cv
604.304 151.79 603.532 153.841 603.415 155.668 cv
603.202 158.919 611.853 159.611 620.729 158.919 cv
627.898 158.366 629.997 156.143 628.005 153.116 cv
627.476 153.936 625.606 154.52 621.331 154.52 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
621.144 152.451 mo
621.144 152.939 621.946 153.336 622.937 153.336 cv
623.927 153.336 624.729 152.939 624.729 152.451 cv
624.729 151.962 623.927 151.563 622.937 151.563 cv
621.946 151.563 621.144 151.962 621.144 152.451 cv
cp
f
619.067 150.776 mo
619.067 151.102 619.489 151.366 620.013 151.366 cv
620.532 151.366 620.955 151.102 620.955 150.776 cv
620.955 150.449 620.532 150.183 620.013 150.183 cv
619.489 150.183 619.067 150.449 619.067 150.776 cv
cp
f
598.293 699.27 mo
594.701 697.305 585.691 698.357 585.664 702.368 cv
585.641 705.824 594.891 705.459 597.748 704.732 cv
599.727 704.229 602.51 701.574 598.293 699.27 cv
cp
f
599.493 700.472 mo
599.493 701.639 596.726 702.589 593.312 702.589 cv
589.9 702.589 587.133 701.639 587.133 700.472 cv
587.133 699.301 589.9 698.355 593.312 698.355 cv
596.726 698.355 599.493 699.301 599.493 700.472 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
591.805 701.029 mo
591.805 701.387 591.316 701.678 590.715 701.678 cv
590.113 701.678 589.627 701.387 589.627 701.029 cv
589.627 700.672 590.113 700.381 590.715 700.381 cv
591.316 700.381 591.805 700.672 591.805 701.029 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
608.123 678.197 mo
603.729 675.754 590.811 676.732 584.352 683.323 cv
577.898 689.914 579.361 695.041 591.102 696.139 cv
602.842 697.238 614.288 696.139 613.994 691.012 cv
613.699 685.885 610.766 679.66 608.123 678.197 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
590.313 689.182 mo
599.313 689.182 610.85 687.314 611.507 682.334 cv
612.823 684.873 613.843 688.11 614 691 cv
614.281 696.129 602.844 697.225 591.11 696.129 cv
581.63 695.258 578.855 691.746 581.491 686.967 cv
582.188 688.258 584.663 689.182 590.313 689.182 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
590.562 685.913 mo
590.562 686.686 589.501 687.314 588.191 687.314 cv
586.881 687.314 585.82 686.686 585.82 685.913 cv
585.82 685.141 586.881 684.514 588.191 684.514 cv
589.501 684.514 590.562 685.141 590.562 685.913 cv
cp
f
593.307 683.268 mo
593.307 683.785 592.747 684.201 592.057 684.201 cv
591.37 684.201 590.811 683.785 590.811 683.268 cv
590.811 682.754 591.37 682.334 592.057 682.334 cv
592.747 682.334 593.307 682.754 593.307 683.268 cv
cp
f
608.605 691.074 mo
611.931 689.527 621.702 690.146 626.585 694.32 cv
631.47 698.492 630.361 701.738 621.482 702.432 cv
612.602 703.13 603.944 702.432 604.166 699.186 cv
604.388 695.941 606.608 692.003 608.605 691.074 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
622.078 698.029 mo
615.273 698.029 606.547 696.846 606.047 693.691 cv
605.051 695.299 604.279 697.351 604.162 699.178 cv
603.949 702.428 612.6 703.12 621.477 702.428 cv
628.646 701.875 630.744 699.652 628.752 696.625 cv
628.223 697.445 626.354 698.029 622.078 698.029 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
621.891 695.961 mo
621.891 696.448 622.693 696.846 623.684 696.846 cv
624.674 696.846 625.477 696.448 625.477 695.961 cv
625.477 695.471 624.674 695.072 623.684 695.072 cv
622.693 695.072 621.891 695.471 621.891 695.961 cv
cp
f
619.814 694.285 mo
619.814 694.611 620.236 694.875 620.76 694.875 cv
621.279 694.875 621.702 694.611 621.702 694.285 cv
621.702 693.958 621.279 693.691 620.76 693.691 cv
620.236 693.691 619.814 693.958 619.814 694.285 cv
cp
f
33.7529 565.912 mo
30.1611 563.947 21.1514 565 21.124 569.011 cv
21.1006 572.467 30.3506 572.102 33.208 571.375 cv
35.1865 570.871 37.9697 568.217 33.7529 565.912 cv
cp
f
34.9531 567.114 mo
34.9531 568.281 32.1855 569.231 28.7715 569.231 cv
25.3604 569.231 22.5928 568.281 22.5928 567.114 cv
22.5928 565.943 25.3604 564.998 28.7715 564.998 cv
32.1855 564.998 34.9531 565.943 34.9531 567.114 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
27.2646 567.672 mo
27.2646 568.029 26.7764 568.32 26.1748 568.32 cv
25.5732 568.32 25.0869 568.029 25.0869 567.672 cv
25.0869 567.314 25.5732 567.023 26.1748 567.023 cv
26.7764 567.023 27.2646 567.314 27.2646 567.672 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
43.583 544.84 mo
39.1895 542.396 26.2705 543.375 19.8115 549.966 cv
13.3584 556.557 14.8213 561.684 26.5615 562.781 cv
38.3018 563.881 49.748 562.781 49.4541 557.654 cv
49.1592 552.527 46.2256 546.303 43.583 544.84 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
25.7725 555.824 mo
34.7725 555.824 46.3096 553.957 46.9668 548.977 cv
48.2832 551.516 49.3027 554.753 49.46 557.643 cv
49.7412 562.771 38.3037 563.867 26.5703 562.771 cv
17.0898 561.9 14.3154 558.389 16.9512 553.609 cv
17.6484 554.9 20.123 555.824 25.7725 555.824 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
26.0215 552.556 mo
26.0215 553.328 24.9609 553.957 23.6514 553.957 cv
22.3408 553.957 21.2803 553.328 21.2803 552.556 cv
21.2803 551.783 22.3408 551.156 23.6514 551.156 cv
24.9609 551.156 26.0215 551.783 26.0215 552.556 cv
cp
f
28.7666 549.91 mo
28.7666 550.428 28.207 550.844 27.5166 550.844 cv
26.8301 550.844 26.2705 550.428 26.2705 549.91 cv
26.2705 549.396 26.8301 548.977 27.5166 548.977 cv
28.207 548.977 28.7666 549.396 28.7666 549.91 cv
cp
f
44.0654 557.717 mo
47.3906 556.17 57.1621 556.789 62.0449 560.963 cv
66.9297 565.135 65.8213 568.381 56.9424 569.074 cv
48.0615 569.772 39.4043 569.074 39.626 565.828 cv
39.8477 562.584 42.0684 558.646 44.0654 557.717 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
57.5381 564.672 mo
50.7334 564.672 42.0068 563.488 41.5068 560.334 cv
40.5107 561.941 39.7393 563.993 39.6221 565.82 cv
39.4092 569.07 48.0596 569.763 56.9365 569.07 cv
64.1055 568.518 66.2041 566.295 64.2119 563.268 cv
63.6826 564.088 61.8135 564.672 57.5381 564.672 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
57.3506 562.604 mo
57.3506 563.091 58.1533 563.488 59.1436 563.488 cv
60.1338 563.488 60.9365 563.091 60.9365 562.604 cv
60.9365 562.113 60.1338 561.715 59.1436 561.715 cv
58.1533 561.715 57.3506 562.113 57.3506 562.604 cv
cp
f
55.2744 560.928 mo
55.2744 561.254 55.6963 561.518 56.2197 561.518 cv
56.7393 561.518 57.1621 561.254 57.1621 560.928 cv
57.1621 560.601 56.7393 560.334 56.2197 560.334 cv
55.6963 560.334 55.2744 560.601 55.2744 560.928 cv
cp
f
222.293 857.27 mo
218.701 855.305 209.691 856.357 209.664 860.368 cv
209.641 863.824 218.891 863.459 221.748 862.732 cv
223.727 862.229 226.51 859.574 222.293 857.27 cv
cp
f
223.493 858.472 mo
223.493 859.639 220.726 860.589 217.312 860.589 cv
213.9 860.589 211.133 859.639 211.133 858.472 cv
211.133 857.301 213.9 856.355 217.312 856.355 cv
220.726 856.355 223.493 857.301 223.493 858.472 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
215.805 859.029 mo
215.805 859.387 215.316 859.678 214.715 859.678 cv
214.113 859.678 213.627 859.387 213.627 859.029 cv
213.627 858.672 214.113 858.381 214.715 858.381 cv
215.316 858.381 215.805 858.672 215.805 859.029 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
232.123 836.197 mo
227.729 833.754 214.811 834.732 208.352 841.323 cv
201.898 847.914 203.361 853.041 215.102 854.139 cv
226.842 855.238 238.288 854.139 237.994 849.012 cv
237.699 843.885 234.766 837.66 232.123 836.197 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
214.313 847.182 mo
223.313 847.182 234.85 845.314 235.507 840.334 cv
236.823 842.873 237.843 846.11 238 849 cv
238.281 854.129 226.844 855.225 215.11 854.129 cv
205.63 853.258 202.855 849.746 205.491 844.967 cv
206.188 846.258 208.663 847.182 214.313 847.182 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
214.562 843.913 mo
214.562 844.686 213.501 845.314 212.191 845.314 cv
210.881 845.314 209.82 844.686 209.82 843.913 cv
209.82 843.141 210.881 842.514 212.191 842.514 cv
213.501 842.514 214.562 843.141 214.562 843.913 cv
cp
f
217.307 841.268 mo
217.307 841.785 216.747 842.201 216.057 842.201 cv
215.37 842.201 214.811 841.785 214.811 841.268 cv
214.811 840.754 215.37 840.334 216.057 840.334 cv
216.747 840.334 217.307 840.754 217.307 841.268 cv
cp
f
232.605 849.074 mo
235.931 847.527 245.702 848.146 250.585 852.32 cv
255.47 856.492 254.361 859.738 245.482 860.432 cv
236.602 861.13 227.944 860.432 228.166 857.186 cv
228.388 853.941 230.608 850.003 232.605 849.074 cv
cp
.302861 .428992 .473091 .0199893 cmyk
f
246.078 856.029 mo
239.273 856.029 230.547 854.846 230.047 851.691 cv
229.051 853.299 228.279 855.351 228.162 857.178 cv
227.949 860.428 236.6 861.12 245.477 860.428 cv
252.646 859.875 254.744 857.652 252.752 854.625 cv
252.223 855.445 250.354 856.029 246.078 856.029 cv
cp
.407446 .542077 .582238 .155154 cmyk
f
245.891 853.961 mo
245.891 854.448 246.693 854.846 247.684 854.846 cv
248.674 854.846 249.477 854.448 249.477 853.961 cv
249.477 853.471 248.674 853.072 247.684 853.072 cv
246.693 853.072 245.891 853.471 245.891 853.961 cv
cp
f
243.814 852.285 mo
243.814 852.611 244.236 852.875 244.76 852.875 cv
245.279 852.875 245.702 852.611 245.702 852.285 cv
245.702 851.958 245.279 851.691 244.76 851.691 cv
244.236 851.691 243.814 851.958 243.814 852.285 cv
cp
f
294.107 1003.87 mo
295.236 1000.57 295.506 995.949 294.447 992.609 cv
289.577 995 286.594 998.316 284.027 1003.37 cv
279.376 992.229 266.546 990.719 256.097 990.939 cv
260.506 987.51 266.657 986.24 270.267 981.9 cv
265.426 977.949 256.617 979.26 251.097 980.459 cv
254.657 977.699 266.75 968.42 268.417 961.42 cv
264.586 959.83 256.21 961.061 252.25 961.92 cv
243.826 963.748 238.177 966.733 231.457 970.74 cv
234.75 966.588 238.75 961.42 239.836 954.5 cv
227.787 953.729 219.75 959.92 212.997 967.77 cv
213.417 961.42 212.987 952.99 207.526 948.109 cv
201.583 950.42 196.972 953.971 193.344 959.066 cv
189.427 964.566 187.844 972.066 186.417 979.74 cv
184.917 973.254 181.846 965.77 176.516 964.5 cv
170.006 970.85 171.936 983.15 175.977 990.219 cv
172.497 987.84 161.917 982.586 151.977 983.52 cv
151.25 991.92 157.083 999.254 159.836 1003.37 cv
153.506 998.66 143.086 997.289 135.606 999.51 cv
136.307 1005.36 139.917 1009.61 144.216 1013.42 cv
139.75 1013.75 135.977 1015.4 132.026 1017.8 cv
129.327 1019.44 127.266 1021.65 125.436 1024 cv
324.095 1024 li
324.095 1024 320.095 1014.32 307.844 1013.07 cv
310.844 1011.07 314.344 1006.32 314.594 1002.57 cv
307.594 999.316 298.87 1000.67 294.107 1003.87 cv
cp
.732418 0 .886595 0 cmyk
f
309.094 1024 mo
163.293 1024 li
164.313 1022.69 165.463 1021.46 166.969 1020.54 cv
169.173 1019.2 171.279 1018.28 173.771 1018.1 cv
171.372 1015.97 169.358 1013.6 168.967 1010.34 cv
173.14 1009.1 178.954 1009.86 182.485 1012.49 cv
180.95 1010.19 177.695 1006.1 178.1 1001.41 cv
183.646 1000.89 189.549 1003.82 191.491 1005.15 cv
189.237 1001.21 188.16 994.346 191.792 990.803 cv
194.766 991.512 196.478 995.688 197.315 999.307 cv
198.01 995.233 198.58 992.053 201.01 988.233 cv
203.344 984.566 205.777 982.947 209.092 981.658 cv
212.139 984.381 212.379 989.086 212.145 992.627 cv
215.913 988.248 220.397 984.795 227.12 985.225 cv
226.513 989.086 224.282 991.967 222.444 994.285 cv
226.673 992.293 229.345 990.385 234.045 989.363 cv
236.254 988.885 240.928 988.197 243.065 989.084 cv
242.135 992.99 235.388 998.168 233.402 999.707 cv
236.481 999.037 241.396 998.307 244.097 1000.51 cv
242.083 1002.93 239.292 1004.29 236.192 1005.55 cv
241.917 1004.92 246.697 1005.83 249.292 1012.04 cv
250.558 1009.1 254.542 1007.29 257.587 1006.49 cv
258.179 1008.35 258.029 1010.93 257.398 1012.77 cv
259.417 1010.92 261.667 1009.67 264.652 1009.12 cv
266.167 1011.67 266.292 1013.92 266.417 1016.25 cv
269.083 1014.25 276.75 1014.92 279.417 1017.59 cv
279.417 1015.25 281.083 1010.92 283.417 1008.59 cv
286.167 1010.67 288.292 1013.42 289.083 1016.92 cv
290.416 1013.59 296.292 1010.54 300.417 1009.92 cv
300.292 1012.79 299.792 1014.79 298.083 1017.25 cv
302.094 1017.32 307.094 1019.57 309.094 1024 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
-32.7354 973.566 mo
-31.2705 968.92 -26.9014 962.145 -21.4014 959.4 cv
-18.5684 962.645 -17.2354 968.732 -16.8496 972.74 cv
-14.9395 969.449 -11.1602 965.229 -7 963.559 cv
-12.0195 958.16 -15.7803 949.709 -15.75 943 cv
-9.49023 942.549 -4.4707 944.84 .0703125 948.869 cv
-2.66406 942.254 -5.29004 931.289 -2.33984 924.9 cv
2.00293 924.92 7.34961 926.77 9.57031 929.879 cv
8.66992 925.586 8.00293 919.92 9.25 915.01 cv
14.6699 914.92 18.71 916.629 22.5898 918.379 cv
22.4004 912.18 23.6221 906.438 26.1699 900.809 cv
28.8359 894.92 33.0029 887.42 36.79 884.9 cv
44.1699 890.42 46.29 908.439 46.7695 913.879 cv
54.8701 905.639 64.7305 904.809 76.0898 905.5 cv
76.7695 914.859 72.6992 923.83 65.8701 930.469 cv
69.0029 929.754 74.5977 929.316 78.3105 929.779 cv
83.0693 930.373 88.0977 932.066 90.8477 934.816 cv
89.4844 941.133 79.3799 947.199 75.8301 948.41 cv
80.5029 949.088 91.1699 953.254 93.1299 956.91 cv
88.0977 963.316 82.1406 966.4 79.3301 967.41 cv
88.0977 968.732 94.4482 972.672 98.0977 981.232 cv
100.155 975.117 105.13 970.82 113.09 968.939 cv
114.55 974.722 114.058 979.316 111.269 985.389 cv
115.371 981.121 120.786 978.496 128.007 978.168 cv
128.417 984.396 126.693 988.67 124.068 993.24 cv
129.047 988.529 138.527 987.754 144.447 987.969 cv
145.037 994.26 141.947 998.109 138.578 1002.82 cv
144.861 1001.75 151.027 1001.25 155.979 1003.5 cv
154.648 1007.56 150.998 1009.87 148.207 1012.94 cv
156.861 1013.59 161.861 1017.92 164.098 1024 cv
-93.0684 1024 li
-92.0684 1016.57 -82.5684 1009.4 -75.9014 1010.4 cv
-80.5684 1005.57 -82.5684 1000.9 -83.0684 994.566 cv
-77.0684 993.232 -69.9023 996.732 -65.5684 999.732 cv
-66.2344 993.066 -61.0684 988.566 -56.5684 987.4 cv
-59.4014 981.566 -60.2354 977.566 -58.9014 970.566 cv
-51.9004 971.566 -47.9014 973.9 -44.9014 978.232 cv
-45.4014 972.232 -44.4023 964.732 -42.0684 961.732 cv
-38.0684 963.732 -34.2354 967.566 -32.7354 973.566 cv
cp
.732418 0 .886595 0 cmyk
f
-75.9004 1024 mo
136.432 1024 li
134.99 1020.08 131.77 1017.29 126.194 1016.88 cv
127.992 1014.9 130.344 1013.41 131.201 1010.79 cv
128.012 1009.35 124.038 1009.67 119.991 1010.36 cv
122.162 1007.32 124.152 1004.84 123.772 1000.79 cv
119.959 1000.65 113.852 1001.15 110.645 1004.19 cv
113.317 1001.16 113.408 997.736 113.145 993.723 cv
107.76 993.355 99.8809 997.08 96.7363 1001.31 cv
98.2715 997 98.6895 992.99 97.6846 988.531 cv
91.4316 989.066 84.5977 992.066 80.5977 997.233 cv
78.2471 991.72 75.5986 988.066 68.4316 985.566 cv
70.2422 984.916 73.3838 981.817 74.4316 979.233 cv
71.2646 977.232 66.7646 975.566 63.0146 975.307 cv
65.3008 974.527 71.7148 969.623 72.5918 965.555 cv
69.9316 964.066 66.5986 963.4 64.6123 963.307 cv
62.1055 963.189 58.6162 963.289 56.5986 963.75 cv
60.998 959.473 63.6191 953.695 63.1816 947.666 cv
55.8643 947.221 49.5127 947.756 44.2949 953.064 cv
43.9863 949.559 42.6201 937.951 37.8652 934.396 cv
35.4268 936.02 32.7422 940.852 31.0244 944.645 cv
29.3828 948.27 28.5967 951.969 28.7188 955.963 cv
26.2188 954.836 23.6172 953.734 20.126 953.791 cv
19.3223 956.955 19.752 960.605 20.332 963.371 cv
18.9014 961.367 15.458 960.176 12.6602 960.162 cv
10.7588 964.279 12.4502 971.342 14.2129 975.604 cv
11.2871 973.006 8.05371 971.531 4.02148 971.822 cv
4.00195 976.145 6.42383 981.588 9.6582 985.066 cv
6.97852 986.141 4.54395 988.859 3.3125 990.98 cv
3.28027 989.1 2.57324 983.58 .749023 981.49 cv
-2.21191 982.969 -4.99316 987.057 -6.67871 989.326 cv
-7.89551 987.016 -9.41699 985.121 -11.3291 983.92 cv
-14.3711 987.67 -15.6631 993.254 -14.6631 996.92 cv
-19.7344 992.9 -25.9014 993.066 -30.2344 995.732 cv
-28.9014 992.4 -28.5684 987.398 -28.9014 986.066 cv
-34.5674 986.4 -39.4014 993.066 -40.2344 997.732 cv
-43.1387 992.381 -48.2344 990.566 -50.2344 990.9 cv
-51.5674 994.9 -49.7344 999.9 -46.9004 1002.57 cv
-52.9004 1001.9 -57.5674 1006.9 -56.5674 1011.23 cv
-60.7344 1007.57 -65.5684 1006.73 -68.2344 1007.07 cv
-68.2344 1009.73 -67.5674 1013.23 -65.5674 1015.57 cv
-70.0674 1015.9 -75.5674 1019.57 -75.9004 1024 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
528.56 1024 mo
308.477 1024 li
312.469 1016.32 321.269 1009.9 327.136 1008.57 cv
324.202 1005.82 322.654 1001.48 322.002 997.816 cv
327.38 995.816 330.802 995.316 336.079 997.33 cv
333.735 990.566 333.002 983.816 334.713 977.816 cv
343.425 979.061 350.911 985.959 353.894 990.879 cv
352.788 988.4 351.37 983.346 351.048 980.586 cv
350.627 976.977 350.113 972.316 351.048 968.889 cv
354.47 968.254 360.396 972 362.714 974.279 cv
361.151 969.754 359.849 965.754 358.978 959.77 cv
358.39 955.723 357.433 947.559 359.389 943.91 cv
362.456 943.588 367.71 945.469 369.038 946.279 cv
373.165 948.809 376.308 950.92 380.304 955.26 cv
375.943 943.4 374.964 931.33 380.958 919.5 cv
385.434 921.086 389.23 925.68 391.157 928.75 cv
389.876 915.16 397.2 901.889 407.28 894.1 cv
410.966 901.74 410.329 910.233 408.346 917.77 cv
414.408 908.299 424.577 904.83 434.57 902.609 cv
434.286 909.699 429.922 917.588 424.46 923.34 cv
433.183 917.92 441.21 918.35 451.202 919 cv
450.411 923.789 446.219 929.754 441.161 932.84 cv
447.321 933.232 452.737 939.088 453.813 944.879 cv
456.812 941.754 460.442 939.283 465.966 938.049 cv
469.301 937.299 472.733 937.27 476.126 937.5 cv
476.615 946.25 468.544 954.92 461.694 959.43 cv
468.343 960.039 473.885 966.066 474.864 971.879 cv
479.263 967.733 486.271 965.816 490.67 966.566 cv
491.892 970.316 491.974 979.566 487.247 988.066 cv
495.804 985.316 501.996 985.482 508.597 987.232 cv
510.063 990.732 508.271 998.9 504.358 1004.4 cv
514.626 1005.23 526.687 1012.73 528.56 1024 cv
cp
.732418 0 .886595 0 cmyk
f
320.477 1024 mo
515.81 1024 li
512.56 1016.57 503.144 1011.57 492.476 1014.23 cv
496.81 1010.9 496.976 1004.73 497.31 999.066 cv
491.31 997.733 484.81 998.816 479.81 1004.07 cv
480.06 997.316 474.06 991.316 468.015 992.252 cv
467.015 988.252 464.349 983.586 462.683 981.92 cv
457.683 984.92 456.423 987.172 454.886 990.545 cv
453.157 987.131 450.603 982.945 446.239 982.555 cv
450.735 979.66 456.034 974.094 455.714 968.477 cv
453.485 968.33 451.233 968.35 449.044 968.83 cv
445.417 969.621 443.034 971.209 441.065 973.215 cv
440.358 969.496 437.054 965.088 432.759 965.486 cv
436.079 963.504 438.831 959.678 439.351 956.604 cv
432.792 956.186 427.522 955.91 421.796 959.389 cv
425.382 955.695 428.247 950.633 428.433 946.082 cv
421.874 947.506 415.198 949.734 411.218 955.813 cv
412.476 950.9 412.938 945.523 410.519 940.619 cv
403.901 945.619 399.093 954.139 399.935 962.861 cv
398.669 960.891 396.177 957.941 393.239 956.924 cv
389.304 964.516 389.976 972.4 392.81 979.877 cv
390.187 977.092 388.124 975.736 385.415 974.113 cv
384.542 973.594 381.093 972.385 379.079 972.592 cv
377.796 974.936 378.423 980.174 378.81 982.771 cv
379.382 986.613 380.237 989.18 381.263 992.086 cv
379.741 990.623 375.851 988.219 373.604 988.625 cv
372.698 990.865 373.329 993.816 373.604 996.133 cv
373.815 997.904 374.747 1001.15 375.472 1002.74 cv
373.515 999.582 369.433 993.674 363.714 992.875 cv
361.634 996.887 363.274 1007.86 363.274 1007.86 cv
361.247 1007.62 352.003 1007.02 346.683 1015.59 cv
344.015 1011.25 338.349 1010.59 336.349 1009.92 cv
335.016 1011.59 335.349 1015.25 336.349 1017.59 cv
330.683 1016.25 323.81 1019.57 320.477 1024 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
546.235 973.566 mo
547.7 968.92 552.069 962.145 557.569 959.4 cv
560.402 962.645 561.735 968.732 562.121 972.74 cv
564.031 969.449 567.811 965.229 571.971 963.559 cv
566.951 958.16 563.19 949.709 563.221 943 cv
569.48 942.549 574.5 944.84 579.041 948.869 cv
576.307 942.254 573.681 931.289 576.631 924.9 cv
580.974 924.92 586.32 926.77 588.541 929.879 cv
587.641 925.586 586.974 919.92 588.221 915.01 cv
593.641 914.92 597.681 916.629 601.561 918.379 cv
601.371 912.18 602.593 906.438 605.141 900.809 cv
607.807 894.92 611.974 887.42 615.761 884.9 cv
623.141 890.42 625.261 908.439 625.74 913.879 cv
633.841 905.639 643.701 904.809 655.061 905.5 cv
655.74 914.859 651.67 923.83 644.841 930.469 cv
647.974 929.754 653.568 929.316 657.281 929.779 cv
662.04 930.373 667.068 932.066 669.818 934.816 cv
668.455 941.133 658.351 947.199 654.801 948.41 cv
659.474 949.088 670.141 953.254 672.101 956.91 cv
667.068 963.316 661.111 966.4 658.301 967.41 cv
667.068 968.732 673.419 972.672 677.068 981.232 cv
679.126 975.117 684.101 970.82 692.061 968.939 cv
693.521 974.722 693.028 979.316 690.239 985.389 cv
694.342 981.121 699.757 978.496 706.978 978.168 cv
707.388 984.396 705.664 988.67 703.039 993.24 cv
708.018 988.529 717.498 987.754 723.418 987.969 cv
724.008 994.26 720.918 998.109 717.549 1002.82 cv
723.832 1001.75 729.998 1001.25 734.949 1003.5 cv
733.619 1007.56 729.969 1009.87 727.178 1012.94 cv
735.832 1013.59 740.832 1017.92 743.068 1024 cv
485.902 1024 li
486.902 1016.57 496.402 1009.4 503.069 1010.4 cv
498.402 1005.57 496.402 1000.9 495.902 994.566 cv
501.902 993.232 509.068 996.732 513.402 999.732 cv
512.736 993.066 517.902 988.566 522.402 987.4 cv
519.569 981.566 518.735 977.566 520.069 970.566 cv
527.07 971.566 531.069 973.9 534.069 978.232 cv
533.569 972.232 534.568 964.732 536.902 961.732 cv
540.902 963.732 544.735 967.566 546.235 973.566 cv
cp
.732418 0 .886595 0 cmyk
f
503.07 1024 mo
715.402 1024 li
713.961 1020.08 710.74 1017.29 705.165 1016.88 cv
706.963 1014.9 709.314 1013.41 710.172 1010.79 cv
706.982 1009.35 703.009 1009.67 698.962 1010.36 cv
701.133 1007.32 703.123 1004.84 702.743 1000.79 cv
698.93 1000.65 692.822 1001.15 689.615 1004.19 cv
692.288 1001.16 692.379 997.736 692.115 993.723 cv
686.73 993.355 678.852 997.08 675.707 1001.31 cv
677.242 997 677.66 992.99 676.655 988.531 cv
670.402 989.066 663.568 992.066 659.568 997.233 cv
657.218 991.72 654.569 988.066 647.402 985.566 cv
649.213 984.916 652.354 981.817 653.402 979.233 cv
650.235 977.232 645.735 975.566 641.985 975.307 cv
644.271 974.527 650.686 969.623 651.563 965.555 cv
648.902 964.066 645.569 963.4 643.583 963.307 cv
641.076 963.189 637.587 963.289 635.569 963.75 cv
639.969 959.473 642.59 953.695 642.152 947.666 cv
634.835 947.221 628.483 947.756 623.266 953.064 cv
622.957 949.559 621.591 937.951 616.836 934.396 cv
614.397 936.02 611.713 940.852 609.995 944.645 cv
608.354 948.27 607.567 951.969 607.689 955.963 cv
605.189 954.836 602.588 953.734 599.097 953.791 cv
598.293 956.955 598.723 960.605 599.303 963.371 cv
597.872 961.367 594.429 960.176 591.631 960.162 cv
589.729 964.279 591.421 971.342 593.184 975.604 cv
590.258 973.006 587.024 971.531 582.992 971.822 cv
582.973 976.145 585.395 981.588 588.629 985.066 cv
585.949 986.141 583.515 988.859 582.283 990.98 cv
582.251 989.1 581.544 983.58 579.72 981.49 cv
576.759 982.969 573.978 987.057 572.292 989.326 cv
571.075 987.016 569.554 985.121 567.642 983.92 cv
564.6 987.67 563.308 993.254 564.308 996.92 cv
559.236 992.9 553.069 993.066 548.736 995.732 cv
550.069 992.4 550.402 987.398 550.069 986.066 cv
544.403 986.4 539.569 993.066 538.736 997.732 cv
535.832 992.381 530.736 990.566 528.736 990.9 cv
527.403 994.9 529.236 999.9 532.07 1002.57 cv
526.07 1001.9 521.403 1006.9 522.403 1011.23 cv
518.236 1007.57 513.402 1006.73 510.736 1007.07 cv
510.736 1009.73 511.403 1013.23 513.403 1015.57 cv
508.903 1015.9 503.403 1019.57 503.07 1024 cv
cp
.833646 .0805066 1 .00588998 cmyk
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (User) ()
%%Title: (Background_2.eps)
%%CreationDate: 10/13/2016 4:07 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bp0Jp[NPEP&c*%9iWsm;Mk'ig[3m;QX)H>*93CV/4`TM:JuYQH\umMt8lb8%s8$pT*%\X^a]_*<S:Xig_+Z+nE,]t?I.>0t
%F*E%]EW,3Fo?XU1=Z(N%&tP&?U`(O4?[VC_^KpcErj:^Sq<%&3C41O-j3?_&rTVdIF1JjWo^unka6J!Ch<J):AMs>!lc[Jrn"]./
%lKgI>BC`OumIK7W^"hCJX_pZ)32&t9Q>Z^!-b'O&^s>te]`$S"<4uGlhEj/oD0kX:]DqbX_Il4.\B#;bi&r`n]JT7(d9=GC.T(IP
%qXQk#>5rp=l1S_3Ha1-\YHP1$akq,fm[Nmi(&n80qKes1HjN#tk3McB]?=FHd)]Pt+)en4@2&[uk_G4$o82nX7g[u[*O1=5WR=d;
%H):#F^T@5;5O4FLV>Qi*J"5OT1gc=lUGRUq[Cnj`*e6+T;C<'h5Hh7S?ES1t1m=e1a4]ZVVDPr>?fY[`+M+f$a2V*?kZ)3d\B7<e
%WQ'4TBW+bf,ditc1g'e<@f?2UUOQLOcIY!u[O4#CD_D"mZ^POR.DR$0s3ofcqW@7u(UjCUSE_SqN:/[flUr(p^OLO>U:Ce(MLX`F
%T3!tdY&=>H2j\_J(XVUrZ+k^:GP-:T`u<?'fn]LpEIIfWk23/9YOVg.-Rf$i13eS:jiZM'@J_>NQ_r8,WbiGS_#'ti!b^^e^saBC
%/q1LDrq[Abor;!FU@>WN(Zuil$U$!8%uk+)#-UX*[];+OgY;D/oNg^jZgWLROGpr$A"W;_LV'U2f;f8Z>a^V:/k742C'lqM4^[$J
%^)lN<W>)5lT;1Wm\*HiZCBFNp_7q\%n?8k]mqa>Y`o+H`pa`"'Kn&pMjcXNEg[Z=;bB*TIkBL.$j(3MM>Y:bkL"B9=?;n[)]"P-5
%ZDtdbn.Yf?b@WQCCc918B/BHs2T'<r9DiqCb]C@D\\nlA9>66Ec!BHQnMBuB]N'D>#&_I?]F;i7J+596Q].5[_a36g]ESUpIqe6N
%%_`h$Kn&V3%LW5F;[b3p)@(tGC$bTqX)VD></)jr!&)6`iEs60\\pOs-0dT[RUO=2_S:IKO.HTlh<3Ybo;V=:<H8EG_om"Xp_TFZ
%M<'fjDg(.0"($^lPaQ.1nBEp^r/9HOJ;aa.f6/49n1S+&A&Q,ER>`a,>j_VV;fI:K0:4"`a'E6.j(/W]JIR[3#=+jCY47^dD4*;r
%7/l.&3'b;W*$F(_,Nk\=N;+2B@pI&/10jTdr/91b!9&+;E`ksB5(3]G\tHAPNSkh"Sl(6)65GF%/OQ0-a0=_S1[q@71,1OJmQOr(
%cfaH$!WJYig!91UA^';IB)lob9DZ]-lrQF/"1QJ=p$5;%jjsNC\uYpnM0-AM-<^.n[KY622R#sY::f867(OmSQ7$akI&g-OrPNhP
%.[Bt12?2apq-TT]GQ5tgi:\_^.f[foMLrV?GQ([0r4OZ;dnBRV1?"l'49(dFq7D.>IrP:4c;jk7s",#ah7rQr`;R#a*p4+7o)/'&
%q8Vk_7\.iQbY2"#?^#k<c-"iq`3(/Jot5^9QPuJ<p8$4/gT2k^s#)<kJmXXe6\SEL[X_$GU(T,DGH;7ga7&eFrg7e5deu?s2@U[Y
%VlPDr_=-$];AXU5/+SNP.Fq3/=DJ.1n(@d<IhIC/e238e?LQk5h`Dt<H##/a#e1$?(dY'ILGJ(4VP)DHbGC%#"kTTep_+#r\62+O
%L*u1'./eMGXJa@m:J'k(3"18IJ'eV#a[V\uaO@,1\U[+U:9ZBlZ%6hW,)-+C&#'_3*"9J-Nq^J;5[NI^2s@hE\Xrl])>9?X4TbsC
%k=OeY>i<[,@4+LPYc(O\H`9.P1[+NteDS$_(hkck7f]"%XnL+!BfZED0I<qiQR=93jhqYId-XuX)"%tK+R=!9([.WU$gso8/2g-l
%b=Ec37@4^0'gidDF-m41Gu!Rn^i'@m&uBmo2o&JEE#Y`L1$_6c)!ALaai],LW&eSuF:;79Zp5MN7-W)%=!6GAJl.Bo^l?#987U&>
%8@MK#I()mkGSVm)e:Nm16n9n=L_*PD!aL:QUDQ],FKu/m^nDmlQhk#Z>8!c$<.OBP&LiOm1M(9Pjt7#q$dqm\EgU7MW_82k)'RQd
%HA>H&G7RrIpO*;M;]9?_-S@YeWHR3h=Y,rfB.0Uu<&tcP&q^rLk8SBYK3gru>B/)3R;TCn3JZbZ0QP(3hbL3r@O3Fa_6!5Ho8pq:
%%g7Z$J65;T`us'%c6@-=g+Z^=^Pm05hp8p2Z]ig[^6mlHUs$]>)jHE_Q&#mfs"mU,h(hCm45XBAM0n4uNiXo;l>5IY"'ig9T-5oh
%(oIsAnPB^O,BCF%+Dq%>gDA3kf3KS&cm*e5DSr2HNX&bq4J?]%o.<U8qsO%i[UH"_DCa_T]Yb,.LKK>faRFll!%SY?!+ACFiccAC
%1%u'a/poWj$tO10i34lq(ElM]6E."lHA[GJ_;2T;)@QpK[>)Vk74QXBR#9`>Bfk/bk-e=-_tk[c#o,g0YT*q)b/so8"L!?reYTa'
%OLF1<Qsf`jXX!<B+,8MjKUFs_&EXi9@i<?L=kW>Za;-0dg_X\6&SasWO`[k$]PIg+M8UZ:bj<st2=+L/#^!a'hcLdi>'[=ZYooEq
%s5GF(hGhG]-.h!X,j&)=4FOac5V6/odL!_0<Ismj/O_'^#e/ssh`s]dq-JA9XAo;Uh*d`'gnO3s4`<pX:l1k%U&oPdei(58iK3NV
%Q9tpfT+JY%5%:lj[U<4(<?Y1i>Nomp-C[Y_Ip.T>jCtjdEGo2Vk@\AL3*Y:POg`m=:-EL<qsp+>f8i<fBQPXpg\^6YjjAU]kO$HA
%k]9"bX[7Z0,8!EG\t01ToLKq7096<Z4`>NYpfNZeKa8b,k^)+"g]Ms7K=!KCHp"(f7j:,MdV]dtG!16Y"b%B:JV)gFhKqM:q>$*f
%5D[:O+Vsd#qWHpZX;k?+=0^:6e;:u5Q-t6k?JKJ@FFa$UfD?'$`V/'@.<!Xg2VWA_<lJma'7"AW[3\`fJ%%"5r,'X0]5A)D>Ai?p
%`#<[Vm6/GGcR9k,UqEVAj#SUWiP^@S:[^SpNskM_`8;e)g6SYoK=;j4o#lJqF',7*@=U<iUl?OF!_D'3KT?g]CUa$PIh.=A>nm)'
%T^,AtNYlKrmjH9<NYuQkVf/mC+!K^3Vgu-;..D4"D&n1g*GN-An3+e*9aSEZjL6uqH<aCn%FM'/,@$*9gP0_&S]GA$dVa>68:f0k
%KnbrI;'Kk1_!nhofL$HhRdV&2e+1enh](lCT?d)\L/)kp[B.(0^9:&?h)Xa<6%\<`Nq\mP![G1h^V"ct&(0:=o/dCd7f`?r0=3_j
%de9HNa+UgB#k(0RK->*Te+XX*%LW$n.3NK*)<+b\2FcU<5h_#"*t@F[hS-H:ic?>]9S&62FM15`Yp1iDZ^2Qh3$@,6b1OlGE?M&O
%MRhK4B-FrG)"#\3(Z@K8Aj8n`p$^C9NhW(%.<)Jq:KeKqVh2QHeigE4JV13dIhGN*`40!!*GL_'><Ls2>V`b<R1G]F8KN(T8A"Qn
%7![QBL^3mMhG&Q^(%T&t+V'C:_:*ah_++V'jU!&HoR;C<glWguK*WP.k^)+"G<#(8D&:A/jDb\qg(q6e8L<Z('R8fn0rmsC@=93<
%pG,.D+Ka]cYiC3oUocl[^-"%#-GGh)l&feIHXe%6XF4e]#P?`eq&"5Q_)uW*=J4E8a3DbDBG5)Yoh2oY[S(i!J'$%EViH'X36^n(
%dXc)u@CUe'H&uWcEt-K=hV).oSbJ\m]FG&uQb=fCGtq5-,a&CbOEN"KQ1]IX["Wm+K2-#a?Kb:dCb_pdj#E5o2sOpW'$,`&fY`Q)
%#p`uipUZnoo`XId%<,>Tb%lYjN@8F69Q)B':se0LV$hZc7erT1fb<7q:dZTjY7>,_W[8*iaC[1W,f)hMld.C$V8Rp;n%%:(RuMbQ
%As;P'4*Hg/fPh'C$d.B@AcJ,c)0YL&p@T`/N52ekS>;h`!kWYMB_7INFnkkYN0'U>+FkouNkNKh5$>fao/Iaa[]ne!=@PadYrLKl
%UdaRV.u7PPo/8U))_h\,P-H[_/P'TG_Qan8F-oUB#%YR43'gg=>pbNo.h\=CD%[.*&2IIcMcrTbdUhm*nf-!/D;%9K(2R.i/R:i.
%+Y,"mUB0@$V9O"k,TW46>;.g:FP\(9'XYEO0Ge%YB:]_MZhthP/"'s&/IU`(_1iM`Te@^%7N3]6dl#SH[R=*mKGqP%pT+dc<qC/:
%fm8r)8ehP?G58d1#%^iZ3R8"_M,GP6%,cJ6\empJlH-O]CD&D(nCH#qSiCPhT#D4IAa5DdQ8K"`Dmn$aI-K&lAsa3j'(i]POEc,*
%k:tZ.-3@l1;^],GN<P4E6sWNOC/)aX&7'7i]_$K/4PH1P-:T4.f@N!s?uSO:BdY`Lj=Q@u<$&gbFbr\0Q2D?X$e#OA[SbY>1)U1"
%`Z/;RF+RqA<`g0nX%9gX/uq2_GT+G0P%PA-o"6o!JQ3>)0dPf\O?(j(VP?7fnN9nj"0a8C=CIDBag@#VdoJ$i6Lq><p/VIN:tbQC
%kSedmh'o&"YHKft='S6/>C0:D*4\lT$k"el/W1^c]<V5FT`E*6To"?nGPCacQVrT54GXKSkoN&?Vb/td$F_BO)gDFQgGP+^DhlMl
%C43@s50%L1p>]t1KmE\QQTSoLs7']B\bXeTlG(\aDq;CA+('$iIB%Phr<@/L\Ai@Y040+Q^Qi_e]Y&k=^V/=UIJhjmqp!;#?V\m*
%n(+7`?_?.lDD(pr4s0amm_@`(=/.G5E/;of2le`J"2;B_`iG#Y?gVNGH+CLhO8)edQbL?6H[P:'s*XcoF*$F^i7c0C5Lu0jO$U[d
%Ap&McqN'1Oa$,L_Ge(Clh2LP&fCnNgJ&!]f!1@c]fC`m%IIl\J!/YTfCMJp_E^B1nY=G^45E)J+lg+.<Y''_IlTA8BC%BLj=78&6
%(S@j8K40c:gp;46l^R2^Y.:#\GFq'XIbnln4WsM$qidZ5Rp3ViBHH.cDL2B]GeB$^<gT-h^YZ%UI^h@QCVStTpRmOnHXY;>6+uZB
%nPAR]br^sM3J'YWo*Z[i*Qrcp2/dqNh4B#po()3\F`XhEYnh>*hd9W\6V$%h?/2U]Hu6#MidjCj2]l'BYo9fN#$:YEZa[^m63crE
%eTTN:WmUH"]]@h:ebKA&T<EfdYKh\*Cg_4sY5+_6GXu'+-lJH#o_dg/s*XVd)&GkBV"c+Zb:MaN.H^?$+&c)b$9otdA-dS2.a+m^
%;`ad7mI]P')tTU>8TQ+jD'Y+#Uofb9i'6E;S[=SgH[%`ugIH!rqWUk'Q9B!'Z:F64UNVQB24])1(PM0@ipYKgld8LQYg;Oj07LT@
%_g4a&DQCd`Ll)1n<N[(q<*l<aagd]!=b`P6'<T\&5J`.26Gb!@X$kF7>XP>X^&JCE/uIa;RSK`dl#\tY/nW4!c-.`0AM[@(-aW&R
%%XL"pHId-n:Z7S`o6E&DkLFr8T?_(s\ce8Z,'iunTqE5N.D=(nOY7&G8m<cH-;aJU=JieR>--9,qkSp$-j@9kGbPn"IS)7\75)%8
%UKSq$AA4kFTYg_@0IACc)IWdo/Rc9qN#G=n0LuK[HEO3^W+SaQ$\6ctc;4Ol!pn9AM:u)ebFrHC;CH.S!Qo/C9UAZp(d2\)1GFAX
%6%N0mGq#EI:pMN^p,5a?n,J=//X\/fC77uHn4D"hJ("%SEUSY=;d5I>n&E%.]@6n3k8*Fu-;+>&rLM1"h\j,)PDT6B_Q0,u"cdFE
%TF"Boc/;mFbFhi@4se_lV@-`e(a?[@<EW>kb,^J-Br*<^0*SPT>QWOon=#XVGZ@:=bIfCaPlf[;JEa(9Q3g7Z]YFrgPG5q#<60l)
%MR:`!OtYe%J4W*^:@aQH:?Q>oTr;f'ncb`m9Zo8Fa(GRWU(ds3;I;an^gnVPX0bRZ-MY]Y)G4J)#,^;%5_4Y"S&44jIKK?G$Vi?L
%!_>5I8XS^>6Uu5No/=^`(g@\?-6Y2M1rG.TQlo?8.b#nt$Go28Qn/OrF'P.>)1W"n>u$:YfO2f,6<Mk_OP&YR#:L`n+f%^[#cipB
%L##]6Z'R-7-'UD6/3s`BL*2fbjK]b[9$g6%,[3U',>nXA-4YVmM$Sh_dohh[.C9Ab`$L&W565GDGVVZeWW8d'4QhN`"P"-XlJ\a;
%!`3/hR;5ne!9GX0Ua5/90I:[h<]\Wb>1/S(_(qCVMM;WTXmcq$j<h[p@*qp3rE`K%5XC9q@qVc;6O=b>,kGVLHXbV%F>gDi3j\.?
%fCB@$D[FLN_W9aGRD\m"?qoRL/&6S'isKGmjU7I+"Rpb-Z^2=hj#eJ+j1I)F/mo0."q#rE5i#ja5u7ak".%457fa8/WXMbE:rZ:a
%@KoZY7Tms*!FAe-lnlOq&]"q/%#A<t3TD6k['6#3fg49,&/]j!^!&dh:shSF#*9k)W''hs[+J7%o*2mpP.$UVV;s5)O9.#Fc`1e1
%<D/aePc5@1d=#'%Q83A-MjCZ5!\M"03b^%CV6p1W;II2KcT5nl=\Hk@8g+@AFJ!7fgEQ4nR'o\S.O!i:VV1"?.4g]2(1%E-V&bi0
%rQFQ69#,LU4W9t%=:\%An:+$NWF..L086fb7'-HHK=$"-oEQ-gXI]TsTd:hfU*5s^-$kiS"g#$c71"E0ggLEQ&&aBJ$0[G@e3Nj!
%dL7NI'%[as/!Bi[XBZ;X?j-YgKE\+V,R+Mt'$WNDQk9(r@)XA*RK3je&I*IsTpmC3QI5d;FD;XhE?HjOqbTCX+?+t*Vq)^EO;W%3
%jI%=`c\hKGndXZ\^dhf..cMr_89.0^\A6:<6;<7Pc%'+DDd$%PJ-%tSip%s$-c\^Zl`'Y=1:Q+b`d#4B[Wns"VKe\WQ?\F7L8Hdh
%4?#AY4>-[JRMVP1RM.b-4<H[)(!Qm-"4%%p!RCb`T:s"bSo8&`O9`9WQnuYuh@+7U2+*hkbYVmg",%8t!9MWpQXFSPbA_$k1/&R[
%$r;DNK-\?S8s7_6Z:+MKj>_c>\c=LAPWf6\"&eu;8TMDNP'T<%D\U@Z1FK:T/$G/D%NI$af1B"uKu<IlW"3Ph9d9U@OuSKMhMc!Y
%WKm*JRXL<0pj=0Jn!7"?R9B=q\.VAX.*^h81o%-/Z`qjd8pQ5?,tW>*_e:R8/A:]HnqE?9$7ifc,eYU86VEU9Aldd[E_B$[;j#;0
%+IRp0Q4bJZO9.l=dssLd8U_&1=/I7HP^m>d=n*TW.ga<J^gRE8M7TNa&hue4LscnNAf?AFRq^H,GV#/4j:bcGR?^Z*i`.Zc[#/fS
%-+'P:s"9-51Da?t+(e81"("*4ndP,$iQe:uMgAi@\M`qnk1R<*gqpgoLGL$u/2*@)`YBC3EHC:/g2ZcQ:\[`=QfHCL[`qnN:YPg@
%:ZZdR>Bi/\lCgXVn#;ZK*oC.9>;TCS1\$:#72&3LB`nb&mP2+m:$q`d'%!A],>;kCOH/Tg9ObOZ@?fM43qjqjYRG]:c@$!H/Cbc:
%F'lcjlt6RflmA5t"e3rjGl=0#=V.92Ot*T(!_o*h.Gbr-S6@GA`KHJXMUZbk89FFbN(EQ1a>4B@/@[mG'W6di)^<o`)$2QK$/!/-
%LjW8l_P+Vi608:K2^a3;AP$Dq+juCh>n_cJef9eaU!Lh;;io*&$%BjG"S+c'dQ\,`2%)6h/;TmZ"KAB)kpCPM)lL:$hmG>;R,CSd
%]p(W-78O%q%C?rjJuY7?aHp%+k!=k(/JipXp_V+/$&T(I%Z1Qb)O4"=b82S-"f2Js)3cU!N)#QtCMd40m40n,@T$+'>Lju(1@;+s
%>`[j$N.m[E:"$$E6&+!&?"BID'cCSJniCn[@mpXILu=)_APcKBPVkP1Jq[E_D@L?!lA?HLDg!A,6V!s+i%aqcWHgDbR@g]N.Ej=N
%b<3suV)gLB/Mc@W=@OiXH0/6%_P3c7k+krqX5"Q4r%h<b8bGOfgoHJl,#!&*8g#T6Vp'G*/GH$=)I)m,K^j;Cq)\GS,:L,iCobk@
%jEmFD[P>r^pl9QoQF1HT>VoSrSV[\(NQ$EE,ghXCa/t1X_3!#8`)^ZTe_4I_ZGEjFeVHrLb/5D0UV/H./#Tg20[%3ZrNbLRPI2dG
%QHd@j]HZmO]^)EM:t?*;>USX=N!kPn[Z?A_D/rssD+M-$WuBE'@#JM6P-J&`V6qOBfokDuKX\Ihf&Ft+_ckfs^"loIR3Ai;I6tC9
%b-EY*[fbAoMn?I/)pA#tmS:bM[_"0ogUjr/:Fo^%a]8WM=K>Q``>3C5I]"cm:<8U-$nV!ZS"BoYq20h*U8!/iCno;X42#W[Ph2^!
%Q^V-,C?i3=@2TXr$/%tmG!^A:"XRPacsdou[ug!2lnDh2_E+[7s'W-?DM@J4lo8P)+o;c&H<KjdfE*W?OdH];&#!);MAoS!C!g+t
%YU4sjLhRO'2p]-UB#QMGLh"!EU+6kl-;F\R!GlJh04fhj06Y<$=(T'7i^70p$fL2:/h;#m-Zk1nQ$K&R&=psGC_F7@?S(oD9`t12
%hrFRqgk7JH=`50FSlW""Zf3!8T3+B0do]CJBGiJB1(J7[jQFCF1aVHIdF:EsAh2\j]Hs5j+DiijPaI]"(q.Q2aPVTD'AMM%nfOOW
%`"oid8St,'3K^9`IftX%$PJfYg4l>"6)"u"8g#IcQO(0R'Ga+_Upqfs+U*UG"5j8U-38u%:@*U"nVB>,m%m%r86b1E>P//,m,=C8
%O4UI:!&%GX)iuCX``PH.Aj'd\oqYU=Z\Cf0-ob8L&QOVdU@6AV5,/%t]<Z3>PTju%_g:_,XoFJ`PR(ab@oWB%80h]2RT^ja[t9bK
%6;3se<ohY/^rZ]U/_d_#)VQK'``Thq>D+M)D,IiL>+;W(nA;68;\H-.YZ=f/cA7qrL7i3C,LLg4=G$+7-N=d\\Ul=_>bcPgp=[C<
%B+<U.J`F%l/LiC\frPjkOKAh=15eM26dWhaS6.]NH056K4*M`.P)c*(G&F^G`-MDPm*;\fYd@m6Pl-;m>71MH,.oZTG'@%m*rI[)
%;72Y@qBFp,l3-M0MUa7KPK4.aZG=+pGdGY\X94DIA&sUC#T5tA"^*5Zdgr;s,q3)lD@ncL-58d"B]]b$$CpE"dKlQX33Nu($`BEB
%6jmtRAjDRoQlDQ\MWSA>n4.W!JsAEqeVSbL*2jt!=tgI"q^kDd@_[o([uO2f*g4<Wi_,cEV9LAtrADr2ke/]&V<qWZhoJPGX^EfS
%03_&<c`57!AHaebJO2$B[&(/*e_9q>G0uFMj\+!!g3eBe5!nR"KGHpnU@U5HVP]4!'1>bi,E)B7kmO4?PhicgTGYuGhdS1H)MHQ_
%7#MU>68T"r,s[qBDuZP?2>@+LeGB'-p%L,\LW-iYBG[CMOG3cu=>d2DU1oE04gV_SBH*[aLrLT!#AG3_JrOFb:A5=e6Tj$*@=2hg
%fn>b/kN3P,,T]35gZ$s7ml$*>JZ2;<Su0Giem\Yl5r:jpiW1=9#IOdn&O)pIM0K&crXlP0S9r&)8(8l*IXqa]9:L$EaYOgQ-G[:)
%k_(WJ+jpUe+@H]>3u4+pRP8`7Kha<j!?SP>3LH_=?k3b.6*/'4_aQ+b+!o#83JDsY7,<:$cHHLY<%b7Dgg-lgee+5b\hn[=9@+/$
%@gUqi88K_g>2p/8`=qSR[Oc9_C08E[^i@M.dUeO[i[41NkO>(gV&ge4TYiTglJ2_CODE*rWRr=.$H:(<&o_g4b_Dr.2OF_$5D]o=
%ZQX?;mUjCp9BT2ACHX/#\9MM+OB'/sA^/;dOYqdN#:^aoI$%'%go@1"M#rU!K1_H^[FpSR+>mA>e\iUsD&4_1M/:S6m"[L_dTW:G
%MmG!6?_Bh+)AW8Y#3"F@7d<1^h/BD!>)[6o/Z!@1-p*D+`=c3\c'4>KN#*6j/qbhd6g3=*PEe)5Wn)i(i.P->8Lq%kHZec//$@$Z
%8?!%Z`"`XOAP'(Y?46a#KN:DP`G$pJGYS>;e1-+gPW'oCGt"dHEj('q]W?F.AONbD;?cQT\PF4+Qs.Zq.\I*QG6rV$P$0S]iK$o8
%3(c[o$;s;j(Ck.M9h?b7$u(IC$P&6!-pY'`.Zm>Z,R-h<OPcQrA#'CoM84V>67"mL(DJ2VZN2dOT(!hU8\tP!gQ9.t#5"b5c<Ws]
%)tQB@Si>MOUL!#M.\YIaN!U/$^GuJP+_:lU+Eff@OLpYm.:NPf=O&K+`S"%@'&2?mP%Gj`f`3JiPb8</"$n$fVMIgh#Y$,f:_(J)
%i5^Z^*&W`t1,BUOkQCD<+Nbf?'T.\GHr/[aF?Eu\\go<b&6oiYI5WWp(51e7;-7-C=P$h,??ZBU?SsPDZ$W9S+'.V47ZS8M_]EU/
%og]D`@?3:Jn4*iZ@8dX)Vah-g@5B2)I%t'kCLkZ2TNDdbR\=HIL"n8mV^cYX``dfh?`Xd,:^LkC]A+HD=]`XYTp<,@BM2`E>s6sa
%84a.:[+H!Vfbui\4^>96._.]-Z84&;*Y-:8Oh-FmUfOQn'859iDJ!D`"P*WSJY'YK+<i%s1%L-2"M$>@QEDV5oU-)j>W?eqU=Ci(
%QFOqOW$SP7JiEfNGM.d2ZUWf*$bT075nDS^GfqmYqCNs$PNW#O5I2N#c$Tn7&5HJ$VAT5/ia')&bq-!]DaOGmR1%CFb]%10KTK,k
%JZ0%0bcN<sN.U&9T+P_4cqW\U#9!^""R1jJEFpKDF!,*e;Eb>,:@$2bL2j=QVRPOMY5;_"i=/u7C*e)D\F*6Pb!ZU4^Lpcn]X%b5
%-6/c!@eQ!UPf:2WP]^/4#F0F$9rqQoYc\CS6HWo4FsdJBoo0O_R<<'T%CP%Bod#*A$GED0<]:/,,e'e$6D=E8P"/0n#>#+CR<$<:
%>HA6"Rp,/:!*7]-Q9e>^,FM7a"QWTP-O!eK6=Kj9;qS2b$OZRI9di"*q\t\K-nGtKJ-E(P.8^*U74a6eE"F4I+/3jcFfP\jesp>n
%7aVZD)fSoj=)Kn!h#>Q'FG4+qZ-aA-fU_cu)saJA"r@&c3?JPoItJ#h,e?_S*rRL+W:%X+Qg*'V$$N.&9=;0lh1`_>MCg.3>-_ak
%(>Jbd:n1hed=MU+&@;AF7gU5I5n&S3UBM16+9p#p6PL34ckFB2ZO?r3m'HNP"W;9ZaBu9XrCBICd:Dl8"Z$RPC(6JL?5jB>9$+0q
%A*e&s]`_!E(`"`+8iuKcB#Vfb`Ub[1mj&0.'[M!^4:kNRpEjrOSK0]k:C)$"j2VB>\D:2&Kt7@:[%1o)K$n0n>?DV/3r@"\AoYbf
%[C!/<$7fj@:Wb1R(;h$)F6>P-s"`Oj@^RU#1W!bt-ta<V&VCX=']Uk)%-'!N07/V:oa`k(MXh;`]/m?nXu*p&(Nr#]S(c6'VcP&W
%[#7bBQir72@"Xbu@p3B.;^q!b]BaB'[MqM[9%X4LN.p5"-=A0,aH9QFM@_#TJ6?lj*b+$VZF%/RE=6B(2E[$fo5Y2^j,cB8R&H6&
%:dHHNQmMoH`]H=4ScO8%$gYE*ACsRCG#T^-D</;dQF9qDkXJe0_Jj8;\$Z8h2Rd7A7HcX&$X8<#gS/rU?3@mE1Si2/6JJ.#jUCBo
%L!W0$QSYG\'`p-pL[A<=@P)*]a>R'&P%eOGfJn[=$+?,N2O3lgns;"GW1"5q9<@KkE1q"4[L=1C@Wg4=gTkm,!jT&cI@LBqFCFb<
%.,'`f,fK:L9V*]<Lh>YfKUMF9J!P!DnuPhQ@PY`WS-'(02Lp=1#BF"VCmPLH##HXafV;h<l=*S$ohu/Ql.cp82?X4fBU2bUBN#/l
%WdhTSK$&CSi_U?:4U^T9l(NS>'CqS>LH/?STE7I+/-o)"`0sRC$!u9"PSoUBKNOIY5q!I&.3!eHj1Z6LYStK.9>(!=P6omk"$#?c
%d-&@=&P(r0^HaRV^SlDnJd?`C<8$E)f](_cQ-^l[6<DDr166f*mG8EC#n_YXBg"E%HYB[_q0'V?:=BX&[)&/'dWoJ#kFE/AVnF!7
%fVB9AG0Q;3=tdIl6/-Oh"\D/E1,\oM'sJ;OS\=-5(0KEL90Xgm/C6X\)kL'`i2es/AR$tb&!7E;j,CkK(.^<>HK%/bVhd*!?frDb
%7CsNbGV:AD91e)hPmuXbHs`&8Pn56#/t=R@$=>c?01i"=L]^J(+6!/<BoEMm@ipW++>%Fn0ZJBL;YMWLSf=>,5ckC&;YX5qI\2Ji
%"^1:*q2)c9BP'D!hQt.O*_YgC>$+!'qkTJL;/*WQ,GgYRHSO0b<RRluBk:%QF\[`^Mo%2m9\upPk=nSk,ugtj<lNhWi]t?.$=^;B
%_M<R8/`0iB?^cS61/#M8U#Dfei]j-n'?7g9oW,3IUGJgX)@dVg8mN&&c(-P\&\_75=&DNu7<u8k+jEE4.>#2A#dmVE<PP&9@mUlm
%KCbH_Eel*CF:1^JU.C6h"2FIjn4S\F-=V??WG:D[0Y8jZKsIpoCgsMU@M?@tJ."KS28nVU!A4AI]qi6q1**Ic]qi6q1*)/jHV&@l
%"'c+Y>=)T[I_NTs1USZCiY)+mC;,>g0L<<^\MZLR,;=(`3++<@YRq#J/+dc2%/5ZX@r)\I/%:9,3=ce1fG;o%[YOD'$m"%+MadXI
%96G(I#YcG",W%,F800/;iNPEdgLFJD*Z*_?-+^"MY[ej1P7h1pI#kR6O@FUn,J$AXpAj%P's,CLcl-SUo9!QI-#rV5-2$5Vne0jc
%0Ht;Ud`)2VW8Eil%`\Q@_Om@r7%Etk&E5,TppVOK&eHE_k:m?FK]'RPH00\ZNPec48\r-/$OiP-hkK%hi.tcnb^8pQTk8bC0f&kV
%WKl4U4EVFQ)+>.`K.Y,]gG,rAii#,DAS2[WLH>2U.\jY7&h38r\:X1&(UU-^ZBXh_B<,d)_WdJ>0Ebek_AIqdBF1O<7:@79S/AcP
%Tc5tpasm;+*3p]W98/7VKi?&N'oa=\7G.occ%r>*ZW%Wn_@E6/=C=Q`>no(_hSHN@>M,Iu-+q;C`\1&p0mWSrGOtt!CTPuJI"aHU
%]=.IW4um1Cp8-MfZQP/G#]VIY?+=+!G9<L^0AIcW(`n?(R2.T9"=Gt29l*AE]YS>S't9&[WSo`?7hruWl[[gfGiHjL'm6e:$'HFR
%_3%s=UMToecZ8OVS1Vqr_d*DuXU:QR.Nt/1>dCM8#0T:h1NIK#[%o]aE)%0\c<l:V661_*M=BOo+)q=-#N-;8XWS?LFl`?J.F^nP
%.$$(T=ha#4W`;l'('YT"..f!eTI\=W<DehmkFnBW%!3p''%'a#%%ZGj,"6%)_hTL:;NZ<EDT)o(-E17Sd*uXqasm3j<m04)2+XY]
%qQk*HVU>VLM<Vtu?c3?6%5<7':MbW^Dk\m/'9"f`fVB:pZ8+#%LIuqnih[8PQ1IsPYjEJlRA00h^BIjG:@3@X7XKq\/P*d:>="oO
%&84rPeF9.M@A$(A<5Y0=)W;T0SZdfa1]oXN+WIed\34MX_D^]AZ6>-*It)(d&8LfL`^'bgKop+JPNFJfAkle^e*;2mfU,k=%+H.q
%cHIb+\]m!fb0[d:gmC,;-rtjdrCLhN7M*tg1ZH:k'kKnhU%VS%eVq^NP&E'3F*lH$jU4fTGi;WI_FYDO[\hlIbtnh"gH5b^aDD3c
%BiQs1Rl(jm<^Xjm;DK8A]5S"I)lZSD<QD0-RQ+ia)'mVu(&!?&'WE>f`osr(1[H_V5`8BGH_e.RM)kWNX=XSI!P.&pQ*^aG[Y94R
%W4('_rF7a9b#,,0*W`X[iF`Uc+TslZBOt.,nViC'OE_+hW5sT*1_NgIdm;O4d+E_j@3VX^)CUWOW+?eOP!AbU$^a.6T1S%?d`#J@
%ZON!VY9ib6M]]5=&9C4m3ULuaB=4*Ji.01a,,;ei5g00Y?8,EEc6U!*fT8QldCI3tjE#!ZPJ-R/RX%W)o=PjtTK0m*78@r5>!"t1
%rRFU^@p5GV/CF%,\U,[`=$<QM@W&IoZ9h6jRTCcrig(;s7aXbmoSVdk[KZnt&)6>bPHo)&Z5kOji!h8\Q>1?OasU"@M14:qra?$$
%VE):FJ'bn'HW%<9T'#M`_%cd%;o#_152Bjqkt^8#\b><sJ5-3Z$\f4ZAQtaS$&T"0mJH66P1qA*\Sm]+q%/D2=l8cuUJH5C<0t_I
%#>>-Y-"oW^-7!OS%%X'LM&$t8U^,k+_S_abPsH\Rgc<ikP9*,DYYmkS\\($Z%kMlsZ/\ufT!EN'*S:RUj'S81_>L9H5Lbq``IHmn
%*6b=N7pIU1c>lLWA`c<ZVCobaAU/)0=@@3P0]8*:8d[skWI.<*R/0Xbn<!Umg<s4A*dB,*IV<qRCMT%?D0`^)_5mV(K?X9%>(ma6
%9#t%#Gg2d2DecD4'tN?TP1Xf<hJb<oD2OgHmc3*ojSV@ca=r:"m;NK;E3$8Oo!N.O]GB)WMQTtiO$S&cUmSTYFf\1nN="_,&IF'N
%LI*b1J3LXh%GGd0("2H^r_0kIaK92nqEf9ZCm-DkQi"@^q:Z(VY`5Kb&r,NHjKt7Ub!8"c>RBbS9`j`i3:7k\k%:[S]BR\.D&)'S
%jr>^HkJUCboS=Ip*&4t-=`,MWBM("2*$9u[MMbq#G#bFm^X8REBdc*<_YbZiHdEH8;,WYCP2rg*?o%sco!q>hPaMg=/IW##cV1(1
%L-i`aCHZ#-dS3K&F3ui`GtIkqR>@r]'?:K6)d#6`i!<&K&7q9^P%13lZSgKSkKT"L'BaJ[S\*"TR[fj]B&-,>=sD,nD27D=@mVqE
%"<(@Rq^co`ASho6)m1/@d)ZRLmR1j%dFoUTP"3EM'1OkdgrQ0>Xjriji_Bk$C'Y-8`j3jc(-0p`;&\Y<NuAW2R(?q'kH9mHRa4J5
%#p>"NYE4:4c?U!A1Gt?X7ag!])B7A<7afdW=rQX&OcAs#AY[,$5ulCm;-T+8Y!!0Z6#C5UW%>qRCX&Vs1MDqu#h1f`FGs=*Pgp$M
%%"lkD?lhJ+82<5CX=U%KBqU+edL^L2BS:`+%H8dZ1eESIn-;l,e.Abl)IJc..`]S/-2a]I6a-oUTJqqYf_o5WNHLAZ%topZjKW[&
%Jie)MW&S=WI&%faE$8Q]LcptL\VD:V<>q@-;P8m!M?^Qm]Q#]'$;l&_b&J'P6X"4IM7+Qbeti[coFW"J]df*l_^-YU$^20sl7s_4
%_;6\2"6]QT7]@SuiT[V%DdfgjhUo_SV8ibDMFW8`D="NHb`!9mZ]BuR[`QST@6-:HRn)k>D3B5OP"9>.Rf(SHa<K_8@%IWU;PJo%
%77`cL\K&\$;S)!UU'\*md@,IXM?!hhU<"R]#i"!A_(?b("Sep7ZV<UfmV->BUdT%*<6=0_iHi+s[8&3I*07[)\A^U,9)\;>qR=jJ
%n9&l1-_uK(7g^0C#GXJsFh3$*h#gm!5=]NUGN3eW2S60JZdm'pIuWj4g\Ts5Lebe>UCYW#>0>,Sm^td,N3(iILX>1lE$s@2]MIe*
%GV5j^U3F\:7tKQ=(TF0^XUV,7(X66k'T$GDSMb;"UKMsI'^0h,laEU*[o8db=F>J$jahV0b9#fVgI`e!9QKI`V+hMEa8EgBC/3PZ
%q:'8=WQ6#+7u>;Q,.s$h[2W0S]4$CPX4V8=OXE*[ieAN0](\*H`.u-92a)KUXa"_22RC._^;h>O'-?!D*oH!@\a7M!&+]7Gq7$NT
%XFGF4*:)VqpQ;b3(?6FAD*-1SCo;2R0OoI+5M7Nefe"_h+56+7T)8*qkq"TM<sqqdjn=4fZB7am_-+GXUD"I@-f4*XC`SeK2,2-r
%1:+ThlcFe?KLUe&A03^Jlf"AZ*.rt]l(s:G<+L\;/l0-u#"m*B&96j,"5-kKOhI3lA\pJWandf9)q&>/'r'6A/]gn$a:<!e%9$.+
%a`^A"1!eG;"eVl3"8g';D/A-[*c9'$lo'E_h4V2!X)?puh4-c9dl,n/D:QRbo2aRs<a=b;h39J,JtC.n#C)b>!U*XmYJRZ4[(AFr
%:[ufk.CJBJ'Sl](X_$?mg,B+,1=bf7Vp/+^(>>u$/XEN8fM_9WKp&EI4%e5%\4tW&U=i`B*[OR&]2*/-WsT6A\FoU9Su`EDnAQIq
%GJ=dKi.<Xt9%Ztgr+0beGN-&O:Ub5iFAXJ??b!V1H=TVfRhA2g\G2:r_kr>gTbmfe;NZs..S9sil)l=mUb.Z+dO!eA;WOFFh$m:K
%"SqD"Vn`(=&64f+40r.o3?<cI#SEndR(G3.]=-3XS*FhHHbZi2DloL4c>C&B=YD(>Yi@<Ybj0PDST4NUQ//C1"C(;[/r.X*'moRP
%2K`RDPU\(-8K_Fj>"[XWG2Qai(A\/[+VmPP;1O:_>'s:2*r796+"-.pV#j>tq=,b;8g:.dE&$,s[O!efN<Kbd,*).IGPE"&-]'Q5
%8l/tUq$1"nrl/iWCuT#bR@ITnNh$qM/NJm^Z\bA5/>^Ua+f5UL$FWD@lUlC9E6KdI2EnI(a7C(:DCL^7&flnsRMdP(H=YOX<1+W#
%eJO#](r^Z'-Ur3A-]78;BgJ&`X99iG?iqKsHBN7oXsi<oJEBe-Cm.ag'%tYSUV/f">^sN&?<s\Z8&*cXO[;-29.^.\"QlkQD(fl9
%58Pg2PWtcJeAS>lgm.Q]0[h/$)W=2J`2Y+9Z5+2>+tP$7M<$pdI"mfRd&6PQ8glPgUN*C#[TnO\f\HWH^HM:=g:=tr,P&NfXD/=D
%h@]]MNFJ-bAfiC;'eNb?Bb]uS;QnW/Aj<[p4(gJ=.fH3mQBng0/NB?Omn].6Tu[>XKuQ4)Hob]F@uX7IR+NBmgJ\K$`\bG3Xl@$/
%_,t9%rgc7i8U)e%R(,%u-_(Q4\?;X/J0cLtOs=61q<1f]2.%/iSf[eV-`c:4YMm1og<q<UQhN!)?A3O<@X?7W)E&tpY4.iB%ud4[
%`=E<IETFpF:!Y:M'NC(qX`&/2SA:WE[l>W._$r)Z&fBt%K5FG">A/!%^gK[ZlA'78Q&t4&bsm$5p;F;^KX,HO@[dU;2NH4]^fR.o
%_^0jEoO7!Ks6$MMA2.pTGmZT(cp\)56lY\&.A4Nt*)Zhq.EG_q<JHONE><H>O<6]c)&r/K2l(gKi%"O&F])4"LT(8l8B="dE@U$7
%8&#eHJ0Kc+*5rG,b=9.[8kTN^a=Ft]1$BoP=[HaM%OHm]d"'N>Vd"k?LU?V[&Z%ia!?ibGKTt2NQ2;<oVd'*VpU1N6hgs\\(%;)n
%+qI#Qq^[_NIbDDA6nmcNr\)gSr=tn\>MK2>\DG`,RAk$#YXE+W>]dEEN602E3&8,*;_W(L0ZIUDgb:&se3WH*,dp>$%^*@#*k%sc
%]!DiC<ga.3l5iEaXeqV:NAaM+Nt"FYX8]BpT/P4MVckZU<.A<AO\upprEb%Q_:_sgG+AWP*[-:f-&j&($tA:M175L\cKtOSO!W?h
%3aZg3hL>?I#.pG3c",&1#t*?SbATL]HoS0LX*EfbPbRgM-E^%5F+mni;F&%\>^ds`HcM!`k?<)-j?Y5"$3*`%JSf.eKNXC+gu\2:
%EbC/AZcp@#qNF86<'%'&GE,ZPA2eLk9UF_$bs`MH[LkmSN&J.9T#nofiqEdh.P`Yo@?K"QGRK"1;lWN)"_IB9Ka":RZ>!<PXi+pR
%(6ld[6C[R,Z-&S7)\dC'':r_lULZ0JAk'DN.[X=-;b@p$-rWr7Q,K8a:f7oD6\u.^!5Oa1WG"mG'9U:O2YgY0pm+80\)4**>3WM"
%nb9<H4%oQ2L>_(dQ.XZ`6uJ#=(U[U*Z_1!E18/3E"?4#D1]1;W-![h6L`.m]:,Hd'nQGJ#>]QN)(V4%f]KHeJbbih]p-1!:XE;S^
%p,EP_:X0SF:Y>P(X?JX;."u.1h>BEV+](j&a)P3U"TesML4XnP-)j0R56IPmRKH_lN$7hJ2u%o4DML[L+mk)N;(IgroA#Q6M>aDS
%WK"&TZ_YGcU`sU;6-*95`gC`llHk/&Erj4\ra\WdGtR@_d@->_8sGH3@X]%Nh,(?teBEQq#ZJ.s&PsPRpEdY*-3(GVPsNkSq%tj!
%e"@[c6L_)T>XtU`T-$2pe?k8YlJ$q1-+#50q9Jrtl*@:p.reIS3lseCF6b)"-9s<]1!OePQLMhJ^G+@28L'V`Zk8f[Bp.tYF[pJZ
%Q,u/ABfDgpnIb=:"GgS798(/-+hLX*p`q#&RLlMNg2gh*&9J[;NN)UAjgE#MV;(&^C8;5+$T:CsUj$V]o[6T]QOiMQ38F#VPm'P?
%3&7<Tf*+h@8[6gfY%[]D2pTJ[iL!cem&J(083<#WCpP6@0ufr6.^k&KV!oM!4@m+b\]ik#!2J7earfXg#Pl<+[F+f[$tO:m0]OGH
%bf\Xn_mC!,-3;->!qQ/g<p"DT$R_gf<oq8fq?7rbWW>(6D^=m@N0"\Q[tuc?!Y"!T'-leZ92g5;$SXku^9'@<=Aa:j9S3f8*\Wnt
%8.lei`7*45RLh9>_[__LEm.I@*HN=N)GhLtg=jK,/AMp[.fmXdU'\Z*(j@<Y2:!B^YK]rVqD*IQCII^6[8j,L/]j2-SI<mfbQ;-$
%@PW#@0^1kmS+A"tm(h_D04"!j73S?nc+o(-SSVUgPV!qTWlujodnje2$LhRl#<h$#:Vlc&g?*e<RNHIl?dQf?6V2+#f(<>;m+6Re
%-M>M%:T'oD,?[dNVot[pr.l^%fas064;!BE$%:;:J]OOu1OK%K)o[H*YEJH7[g?EhL6`6-1#U!#'*D#%_MKjZ2eg6@JF@ZpRBEd+
%'XNI9mH6/JV;8*]]cBu0!453lOj0W1X"`=j\Gsea<nO_gKcTIESkfr*#).J%fE[+Y:tQ#,I8JQ$KmceM#DIR;`!>C?^ki(>#+YIY
%$9OiIes1sBB4.$epPB9*Y?^jLQlDNHi$k]rl9aIk3+1.9Osh_BcBmoSAlg5mfo4U+<`qRuG*"H5mH>5-&DY@Dh5,!:hi.++qgG<O
%gUjB\iCOucJFjatG<d]f*!n>F`fCZm@bdn(!oLp(Ntig5FCGEGD+9Z+Z;[U(S%'GEYQSUV<,6eO6Z7hRRQt?TF&uNo2m:J6C1Uqt
%HsWGeE%Y^OAngqG?qs!#Dqd'1[B!YH<n>"lNfIHLZQ!F&DB'3<Eu\g?%Oj`WZ))#I$_:MR4mUk._R@kqRuOmC'dC4c`rUr!KEo05
%MlFUIp++hfh?XoqGM8MoL35IQTBf(A[J97<:rDgLO4T(*%a\YR3m<*rhuR?)]R^B<Vf(X?l=u/("Ir"f$t4r$&d9-?e+NLo=1bPX
%=n0-D2a"RB*@GS>WuY4t3CRNj;YAh>0331,$`7`:EnG)^'j[%IU^]X2KO[^M_hgWNBKISojTC_W6J6kjIIS#%k*_&oH19>%*,n<_
%HRh.>bKrhF1RQF=cJV<&en3<dM=nYjK`6YubOZU7b+9Y7TlUmRi7(;p\9r=k%aIhF1F(_tA:/^_N"-tJV6U[Y-]\'2,X!^WM2Jk[
%df/m-pli*&fI=I]41&&-[]83IpsBCfNt`8N2G8Drj.jQ2Z:,,a`1t;iE^VI[KU/"XgA,,kT+f(J^8RY9f)LCWZoR'Dp6^4:7)Tu,
%$4G'jJm3m_3>Wb)JAsW,WhD^!PELL:YoI^l^ki(>#+Xn2'Cep%Hh_TEYtD%n3e?\C*V&!31/:QoSUr,sA8gXREk`Y[6A0Vj[QCRa
%^(t.++4j?PP+(En?'1$n>ZTgXg:jZRRo7rMRB/%o=^FP7'bmP"0RO/"FT@]Pq(iBkO33TKZJ9!,Kc>fB"!a_:X@B@'mmaH#(KjBJ
%gU9,r*tRSMH&%9e$K\I>;%=D7k9[OQW->gD\r8Tl7HFRa.P&e>kWkmLmW7E4QTeq,ksO[r%^i0DNtRd/PS8h*8OG7))+$h;Q'D3T
%+otorKM\BS<+YD.1Q"L@I&`8b8et<f.YJQb=<QZ-Os@(hH)RTmX4Z6FO0B+SBCmlR!XS[I%rYI#]SZWNGY^>C7+;`so.uT=bXgl\
%KeU[[^"['N\bi4C79%_!;ed&/e:$<l_]E@)VtuVB]ojoE3"-l:)&sH2*3A.J^7m74S3[[o*lk^!HeR>o2d&5snO'cg2cHB2?MZqQ
%EGQ53q4aMSf]hge;C'K('PCk^E\Y,c+CTS^-p\6bj0XrEV4"3WOf5+BVBnd_!g6)YZBf+6QB$VM2=#BrcTZ/<g(L<#BqFN*TBS?*
%(2>n@g"X$*p.]>QEh8YEG0i_XcW[Ktp-$<2GAjjD\!Bt!Sg-&47Ca_X$t)OtMO>m/9UK:d8!4`N9sle-b`5(I51N>gC^+j\Q>S%b
%]nsYBQ9D#nc].(>M1?mPoYHXU72as$:ZEi_*i03%In!"C*n$"4'MXn?-;1J@9[_&E.5ugI:oQ)!5TD8rf&HC*`k,@qf$6Wo8_kHb
%W%%?nPU)e<PI^`5$*OX;YI['si]o$:5S+sc*@6'A#;ruEnC=A=dYI9g_F^Bp4Ug/)"8JTE4s.i^KVrO^dUb$mKW'%"3&&UR]oN8W
%JAVB2RK7/E+8WJn4=t=X:TK:ReUuCU6B6XaY]V1$)*8>A$:FB3:gPPebGaI:.nM9EisnHJaoFB;^q:f^W\JgOJ9<\[XT;Kli2-cI
%Y(D$:/gua@8m_^pZuXMBl8d!.``^s33#=I]18CLFe79>b;Wm-LG9H(#'"k,#V9YTo[e#'?'0;4Rf`O8)R,@Buc5@YdMoUifP+`1&
%:->FR6Dbu\8397':t+5?5/KU@TpPoRFdo&Pl^5Rl8-)FmLQf@+`@W=IkP4I,_Oa7XL1:?Klf$!)Nmc22UE!A"`s<o;PiF7l(`tTO
%fFX9J'qHJ4(C!hJ8q2ph#Eb;5Q*uP$3$FfXPD8j")mapFf'LLXH'Qa)Br*Vs1IXZ"7JRKmR%Y,FKs]"e"#+)n35l#C9mP_Q>'hYJ
%Ds-0j7dcMN@1U8[LLJiQ0^N3bp+Qo%(kt0^_]FP@&&SsJ4N+923&0@0J.nP:l+fI`'K(faIQ)GgM/:EDp^!mFLMkti#hT[']H*[6
%AcR1NVf-'<3-jDsiLYVce)"qF:\#Q(8U]XKStsV[nPfD@N."r#1JT;_@d#WmJ16#8SPsP9GOWFoKIZV"<E\PLH>m)DbG:Q7/t0/t
%TVYg$>2Ep)#:-2?T]XgU6s,.k9GRQjg7?7u_>FN"$E'Po,j^</BmWrkDN.qQ\I8?9c;9WmL5L:jU95BG-B7L_o&5+&abj^U7+%k*
%Q+3gKL+,`fU6r8&2I)@H(--,eNbR@D4N^M6iO:dU.ZTb!OZ4sWa")/;'<iBp1i5`6"U?X,`ecBaWd37F4?dT'78*I:QK4tjqJ2-p
%%Zagdh;9bCF=B1eai7/ra"P'bQI*8'Na1R'W\cbWWLtXh2Q9A0P01dAc&o9CK:%Wd;LnguhQ_IO4K7&i,Z.O&O0ORTaK!j0SqQt;
%Gb\jR<B+c>dYq_2i'M*SNf;-JC<u9+frbo.,S_ES'HREX"NN^Fa$!GMQ/)[:77TRF9VQ`EZ#J#>)XVE,QmupuD*YA$%SpjZAEr3@
%WM<CMj_SBeGM'nHq5>Hn'p@c'*tMnWJ6^k?9N`(iZgA/b+8OH1/6?dE(Wf8-d9PL_F!Zg5YPQXO'^t_c7I0JKblbPoBWnPYF1Ij`
%>t8ug)Ne@rDUs,u(U,<JnuA65h0,*+E+X48):?\G0T,j](;"%k3mU.JI^GJ*_g&BF`B#3XCt'9.\G^ZW]q`:AQeJ1Jg*47GnQnN:
%TuTMKcm#%Ge"ScJ3Vu^*_#cW)#B6)MWdB^q!0Br(a,6/KK5K'^+4eeIoZF786I+j/no1,]E1H'0SE=d\k&?jQ&KRcp*!\qsj8dE.
%*tN)ITj09ijaqd6[Q8BDJI;rmE8Z<M(H`loGT>N%=Ldlg\7!_,"cFQ%G6n3h_LI@1h]_oA#lbp^Iu!ON+oM)\janI=4U7JoE+6V>
%UVhpQ;>>'V]!h1GJW,>BXNetH<kNUUq7T`['X2ogm^7c8[3[\G#)%[Zc-jC0*L^seL?kC]C9"[C?M%/^EiVG6Zt\*=OBSuGEN#=%
%](KTb=Z.!N"[G2#f(BM@l3]nY#9g>YP*6@B$:<HU`8);UZRtNU9B%72EEgf7[ZDF`\[E>)1SE'1d7Y+i(<4#H/3S\f=\d(a0Nbe,
%$R99OBd6^jCZdDDX(nJ<eK4@`/Mh4E9(`S1SoZs.4T_l_O$IM>'`]?49(>m@Rr[QVU3r:+2(5%t46lpjnMa5M6hcj*WCk?=9*aJ`
%Z.rKf>@l]`X'A)cK*6]jY&i.g[8(_*i4A^;i,`FD8nqETM>FmDXq+39#VtIA$$%C6m\[qi[+L+d;EDTI);r4PTaeIL"b]X&OM%#t
%X[]igg)UDnf'.EQbMt9K.*uF'.qM\;W8pgtQ7Y]%TZ&86%qpHVecXGn18<$m.<8/s#:l9&c/b$hVNb2u^mu1gqM2KM=_Rb`XDZWK
%8Da.E1lqkTSL0gM0?G'Lk+E$KKZ#:Gi;'34:s+(k%;-,\"<mW!Als'9YYfj8jt0:3Y+-2sdMcH>kdk/sX0dGaAPHc1c]OsbQue5Q
%S2NA^d;u,I8COu6IiTgDAN_]Y[@$jn5%Q$Wf7r1!U0C5gg'm2D[,J[^Z"dBB%V,1Y.Z!LDQgMr[<n4QsIal:_b[Un*Otqo9:2s"B
%n!#ScBB0^Za?s9:PMqc(kEKJHZAbRK&Ger.`XV)MG8g`Z)sAHB;F:oo2ZN@q(#57Pa_dCW5G,0j'TJrRZH_$dD4%[>;dR]g%sN8-
%h%&E+)';]7SIV'Q.&N5VPiW5?YRE?4^q;q0G[rUTa8lD1V"6$Pf[Vfm\!P*X.>LJf(H!is/&X!">G:<!)a?Y/,:irpAiq:_LtaSn
%Q`4S(2I"5c^e*#C]$jNrIWj$3D/lj9cFN:TCL#='*2dn;*Pp_B%NWB>GKs(Vb;NG+CnS+ka/oHRbloXn@-\$*R;jHaE('M4e#i'.
%Xr?b+U24R!giV^jfm8PHRYDeqoO6[C8@(L-MJ9<uUePR`*@E;6im;$2Bj4J>JF:eX\r>hRDm4:TYWXp:fo:7i^8>a^o<;c.7<We9
%[T2"p7fdKqG;B2hb!+^@TXM)He8$qEcq*L`:jeo8f)7aU/IG1MhbLJ+53]?Lk::YpA@5O?h%h@E(A$dm3G;(fa!>oRDggUf1(GOM
%.Bd*mYQ8;J<9CYW8IB8D0XF&W[6V'a@i["ZBRI0sI&ph*Y[d+lkGHYcNcMcW&6<I!39$'Qe6F,&>L6J8FKE2nW#eJFKTe][D-Mj3
%Tk,gtUuR-V6+@fV=^0N]1W=IKmARbp.+j+S/N1$]eQIlAbl.:-D`nN,pYPLIa5M--4?CdUn42J_Z/"!Fk@(G,`C+*gehBk]=[WL2
%qr\D(Tt,pqUJi]8*l=BVfW#5pCOMPVnOD[aU,t8lL\mY@ro5\)GnR@1atm%2d@^FnFZ\>jd7GI%=b8:&S!\-$f3J`B4_DaT[86UL
%L7A.fT:jQ'_"H;5r@A#fa>>ZjfCoF2JO.3'G6ZO\9T_%XL^T6f5ueHs*"m0cVSbCNUr>;M%g_Hr`B[C)CI*>OKHZm?3&./JIbXi`
%D?C!'h/D'6jFnWODOi#Fa2n_DpYLY:Dd`hM\ks_re,30GW@96*E!hL?I0Bh20mP^A!lZIk+5,_kaVZG::YJ^,b9B^a)q6)h`Y$Xq
%!V&+D8EQ^)fT8j:!G#`kb1ZTZTXQ,?Ae]SPE\_]UHUT[7?n$c"HaG]uR1-YV.1L>rV$1F;:.eL>fMFI1:8SD8WXKLnB,Vgpkg67*
%J6'0%BpP*-Jjbb9S?FuqX"r^[oF.MAameK=R7K"Igbttd!EhC7O3lOCQkH+TmJ!+9+)`d7D_J8CIJ#'H0o!HUI.@/*qT\MJ5H\mB
%f/M;gO1q,kXKFJ5kG-_d]CdPY6H0b8I%5b45#Q,(33,P\2E$CA7n#;\?p_B`'7Ti?GC70c0?OdfQTt9Bs+\l"%CNs3da<96s89'2
%FT.G@q?_YT4ln/lZVMLQ`k'maj%?lZF\@WlGMUigeQtuBmaO*)qZiSmW_<GEBib@l#IMX2]Q/dufR2oe?k$OG!D'?ad4[#_43bd1
%;>DW`a2l91_kr#\<GDY$VKl)01Ne^.TN5e!\:fS&DL^Kn-<7bjIk`CR]r[$^VY.GQ0`:-K;5HBLDL^KnVLMd@ND\8LD:$b;C7Jh=
%W[#;P)c7n4H!pY5mR"V3k0jGsdF5%879bhL;P"YT\)+!3=rfg!1fXQ:8FtYnVT`.Vdf\UugL`Wq<\t*ZXJjE.CH!k7(ddFmjtVVO
%j]GMJ\YD'W9#2(LrH2>6brMOWJ5o'[[Mu,UcCur@g[n:*V&ZVFU)Xt`dV%DE4]Y!KlW:dEk0p'4-;WBUe+0kZ=k28C4tW3^H!3.S
%Uf*d"9i8UK-:UTH&Oo6_YS\8.=cD-q:%'Zd/kqM%QiIMm;TOeS\Jj,XQY.k^E.Yc^:QhG32;lrLb4b:BIk'4/j5'$$VQN.Km9['r
%.?Rl'`6W/2VFcL<o8`h"]UO-;kDT;<GrK(=l)"k@W@cPiAA$Jmiu-6pOrE$<8\Wpp<J1_pSulVI(`/oXgn/oEgUn'#kYJm=nd<'i
%=7iEIXgG=11a/(;T6b]S'E'4'\MB#6ds=`0%JT$WXYOso`ata1p+*b#dVaLQ[3:nj:M[YLAI[Bk8%:3+N6nOg#HYC[++Dtu@i8M:
%PqBKf-mhA8Zm02K4W/+=.K>@A^O3;2a]]s'SlUVoH!aRYjPQgnGFq(/[Tnb9<KEgPX-]ViZ?geO+%"M`?*RqJnl8O60O&fgC\(Pg
%lXC9s5fm$0CK7>7YjcVn`g/*gnX=bjSbW;G%1.b`TT##q77K`\HX%ksG8472:u3&"dj.fQ84Gg`qR!'V;ma[uV%7:>8l>mm;^Np9
%?s&(J6]@2l<;YX@$([hKqY_]K"Vq-_CQA@J2,`pYH<#JnaeS@uYNtjA4LE0\8:l#rl?tb_C/*e)aC8<QmVe6aH;f)!b&1*7]$smO
%gNcjZW$"o@a&Rm^e9G&-]&:pF2s:[ONb\4J=/0.%j5)0b:X'8LM$;jO$'^,Q'Sr^L=<i:iHL@V\-g404I6KRY$sT@)EE,jhC\<\\
%AJTngA1:'k=k]63WNQC08.)GW_KQ=+?8Ur:m<?lc9-]GA7#cDa=r/0ii0N@(bd.mK8r)"W#PIKc1C[gC3)*@PT5"']:,2'YD5I\K
%5C$9FocBGk$Hc,32<u4KmohO[=KeN?A(%Fgm\3>$.]hrDlKV&EkC_qee(2s>#D,$R0uWJ[9G)GlNkDc4XmJ4@fUU?im_QXE)9[Z"
%6_0mgZoK63q,j?TT+O4bj%SW9F!3EpH/OXgoUsU<Lt$Q!n_H><7ej+go%Vc&:`fb>-rGAldOjZe#M-e*[,n!@c:=GtosIQ'FhYl:
%C7e(6"&U]egA21uUGT*rF)!Q-fMAMG:9"D*OqWfjd4Q-Ygp[[uNN;XEFO^Vj?",lA%g80(82R)q0tF&"At2r5$0kmLlgo+ZlV-Sl
%4'hNnSSJb*8"g)-I(jg767Ue29`aII(F)T"P:R6U`g*AT=\sAjj%+6Veh6ZK$^qMTW=NW9#\=1<3cVJACiLP5jdG-o[_or#iIn^Q
%)fU<ChEM%d(JPo^J"2;i:@`KkSG2c"eOMSPO%RGmR\WYopIcgPG$c>$[;VtDrc;JZmp1n>@D,$$+GmnOC'Y5_+L&@&[\mVCF1SV5
%A8op?ns(B,LCeK>l'mYD=S`S=]C0]XEB#,Ef`iFf#i!Q"@sbiE?<#HWV#cR9X$?]o7O<7g93$Z/O+Ldo,Io8Qke!047B3H=_8EI0
%T&lf3qD-;H4TgPo<ann;<#1olU]:FQbYpp#<JKfiPq%-#DDE,t*ZLA`-1jKkdT3*JE[DE:<[Gc:S#in3=!\5Ectk=7<@'fDp^;Fu
%!OBGj>b<9EC+kko&2fS>CJ\CYqr7!M-TAO+MmM/rc1UAaO3uQ]pZ3n:gkqo+nukN4I<0aVEW,4ebNX+hG'8*&e)kh-(On==$XWZ=
%rfP#Fqcr>1M2]WuHU,(XmbIE8bt*lr5LNqK$Q^dd`66q1X<L1So_H,AS7Fpab]Bo'M.QCE_O-uJR93rL1R$p<@[TnTAI:E^-akS%
%5$+/AfX.s/8fr"e!EZ62!0Jh"g8)"pf#CFcQ3!I3)mr#kBdVE`Y)kU%ZV7JZbT;s)YJR9`Uu%p$/^MjGVCHSNH*4Z_/;k^B>#SR@
%2`IS&=s<T.Y-\0e.AX7?dr9&#9>ZUm:i:#:%W[!5WAU";=%;B3eE3UpE98i'f2ZC;QBdJJ`,Ksaa`Yq3YihWgE`7Er_1X\5>]!WK
%7fTYcDItDUXNBPgK%W3s<YJ4\f4JS?+ta)<EFf;i_+ec]\Q1DbMQ;i9(,CG0.6=@h*+r8^$_jW:XD0gJi%0=X$Q2lW*+m.iGa_d#
%@1uXinlZ-ZQ5RlR8=]4M99EF*R:jNAR7S3[ja-ta=./53=(\s-S00+N<l5X:8i-[7<(rK@-4gJZ-"UgA0iZR-F(G!<qD>HJOH(cQ
%OXaWYTX%1d&"*pKL+HKkE04j]Z&fEKK+o3.#)C6k>\$J)>j*I,r,YQ7`E5KqK#>^\;NKe01:asWI?`Ac-C:RiFBfY9_;OB(X8H`Z
%;epA3oC<8aD.]up<MdR3eP^=US6cqq1b(Z(WE"Z>5uF"gC5q>t-:t!:l%9jTM0;f:6fCV6<f>a0@*_'\e.uM^;I2ITM5[_=P,P3N
%XgXKDJBgl+@L^C(1]+.G9<6X>-M<RlM/Hsr_#P=5<2O@A9Q!]V>FuX*N@UAi5dSORAMKMt<tZA\-<H&<V4AftCZ41ODMMUS*1gb_
%jgeC5T`S"O\O`g/V6bm(:./-]"'?-QAsjO+!p,Ud!J\:D[^'F\c2^-eNnZjJ_.51;Cd"W.36Mq=RHh)^g23Pl.lXAN]'>^U/P@jW
%l=jkX6Xsjd],6+E8dhG#E??lU\SIl?FL3ed)S0dlBk8`9TlXqV#)C6k>^/Z&=<T]252IZZgq9r>`pBS]jD(Y!f'+M_,\N;h='6Fl
%,bo'9S6V23F]QT&=Xru]Su'G$DJBIZWpAX)C:UjQA0/poZB_R'34UNJK"B6L34VL>S6@KS-TANu;.Wd)Dnt='-8u[*<+=1GHu^qH
%QEdq/g8suP(X0m0lZ4gXONAfL/9<*e(>E7qVR^?b5%=`".Npg;RT54.:fSqr!)^.hR8T%rUH_=h.FXT;@q%'%PoAB^W[q'46\$4S
%?foeq.]MdR[(V3L<i&\sK>Z_F/oIFU/:it_KI<5DD.^HX7-^_(IsgkVh_$Q7TrFA3rou[WL]@4oGH\d=S?M0u4I.Q`I5C`jT3%B2
%nDc%_i6B6Q]3F'1!i#gYgoTemS:.oW4MP%j\Fo'hJ%NGf5N8<i5<c77a"LGUHk??2]]^H<b<(($L\8Wi+)X0C6aJ+F#!J%Us)QW,
%q>K=Np-Xngf]s#)R*"7B:+eb[=M7_HLNIOm@m#"`Ta&tY?N0.CL-L]F#lj6GKRY%\#b-&<]fs'!DXO[RTo7Ao=*K9/]dMP,pZmal
%:Hc]5?2^+=6TI&nG^FZ+md>+DIC@uA*PQ;:=Bskk)pn#HgoN`r?1oH4EoE^HF1lj?HZ=D`7DXU"IA6%V^:7GB_;4>?6OcfZ*nBr>
%eIQ<%X+0a[<-[rL#UcQ[]8-&sokD+P=oZ5u=F#<S61+N?`27;QC>0#;'?Tpn]8/r'p$M?iO=>L^\[sk+Is\Nupu156LU_?[8)1U<
%G*7&hh6l%tETk:LU_D1m0K($)2lk]X9olRS9+S[AAt,i^Rnjj0rKbV?on%j^h&Z:VI/SNdc(N3"iG_OdPtM?^DG]F!<UOo/l2Aj6
%K\suA2]&(jAZg/0K/31SKBkhj:JdJF@?)=L\NuQ$FLa]()g&W;.R31hdcGcakB(gVl1uLfb;UMDkF:A$Klc[IIKhi=^HqMDl:t46
%@Fe5OL1e<shd,)];=mddFa@^'T5N!<l[N0lW0JDr:3cScV1<JcGFq')XKJJWZZb,EF-$,Wmm@3'%nHj#N1gag4?oKMX5C3IHKqn`
%s8LLDG0=WF+:UEn>5s/nG*8p(R:+Vm9(WsbGdb0<gjK(tLMlc8i\,ddp+^R@lOGe^:ES2$5MUD?f.$:i*q9c5mV^mbcIQpZ<rJmD
%])5s)?&s!AADUUpDJ#C(:UdCj5-rePj^@+Aq@@Q8c]=R]oj.am\"'D6!D41+gC9p-o`3.L%]DIhI`"-g'fbM:MT=7uT1[,uEH?,J
%qmrDRlRu&cNAl$[^:"IE,__iH%/&iGSinYF8+.+9I\P-GjZ#^:d"<qJen$rLVZSS5@U\jedq9*O\AusOB`3*>RahY0]#GVI5olDT
%4<GsH*ZY1CH/dr)m>n<+:.=F^RH!MoiqC:?qR-p;rMc4F.4W12=F0]b,_qo:n('G4Xq?gE.IHc*+O>*mT!T;$Pg9p&dlJKA]V9dc
%S'C'eB"e1F&')i_L\UMY[A13Lp)(]ODr^KaD5_H8IF*5Ump.#kaG#E"24mN@<f\u*N`u,b./WhZjf4C1rtO#+ml!*H5AVr2^\2&/
%8#V/)0/E5@Lt?_%3nJ"CbWrfFicT1!i>KSOp=_KLlnkbucffJ,eg'XM3TL6+i@*>k\1t]6Af^hRmisNXbZaHiR%p!ESooX:*b!/<
%R%U)Wg'n>q%`j%/@W]Jpe2Ia6Yi5&#)P2!O;'YOUT[i;2c5qTuHIhmj%qj/R_s7)EIJIK'\N]>Wh`#I6eG(@R*,>A3YBe<B\]t'3
%e&TY^g%oH3IJ_jcj%6PHWtdJC_proCRZ<n2T8Z7!O"1"9Hbf9YO(]mW*]6AKH</e<VKP!_lB.95*g4OfE#7ncgPEdfe$iY)EV-<,
%LH9`BX/!^CNa@>'Zb?)hUb"O7eb6^i<7q)+bKG>H4-t_liuWGk]BLORD%8LZe`H8#5J!YXR!RPjDL.HV^@G[\dUP9"I5:3Z<<n^f
%HOSpT*gtR!#fkO;0en'*ZaoA-i9@O7NT9ThHG/UK<T.b:H1p'k:W.Ntl(J<(]t*PsOB6ZXgte9XK5aZG`J5A_c'hW#*[<a2^UUuP
%8$?pC9+Nn[*\p)B1jSlj1l0uJMm#@DB!Jq]\E\cbIsJ%84G1RgYKA"$jX:hMZf`$ZdUt83@_N[';3&a^gC(?JI]Yi48<c;j3I52Z
%Z]7H<PA'=d6W&Sj&!*7ZoFNTM,SoK;_f\]s(?OmC`M2uBbgA5m+VnXF76)!Ho=SR1e=Rj!V&)Q_H<0p5@Sut1k#@:"V]LcECG(Wr
%FZcR(PWj^[H3s"1@Son:965tF28*sN&#sWj\NK9?H+bERL7($7N#SZN&Pq,=6h]G@jY*/%mHpG7GJ&?7$dgEoY<E`:;p"\'glc.X
%=_7lLFt^Fm%s4oY#R7jud'\G-SHN5&gd'+,XpsCE0pB"&,3_AC#-,*R<?$V!6!,))g-F2[$WRQt6>mCmh``r[oDl_"aoOIQU]$NV
%0eB(@+;gElY`.kjkf8U2XtP:;>lF3dOn[*@-G)T"b'HH$ngsdi.k!-^p/%M&c5,[GUmq&-VK8C-W?lJ.L5A]*T9LKdk*++P,pW)B
%:.?^c^W?afhnWlLrs!oh4eoOTMsL!-qhse.@r.nTol7[VSbL"=i7^O-mF+R!qm(QN6dh;El-%P7C6pLE-d;@+Cnf>K3iMORY62=2
%-A]FoE/n8r)U&`49`o^9fs*40]tHqV^ScI#ol9R0ACDXgHCSc#11[L#P>9m\2O!Ad8Li*)2YL@A5:2m1]]`a,CQC2lK`OVP0ZQ>2
%5*YBB!tqb#\C<C]BFO0*M!p1>a52FI8b'g`PbW2?F)h*9C44i,K_\P&a]!:Lm"r*e:;:58hbj/uT0k6M_>bI6E:En96>#`e%fYA%
%s(eS[H@U//9i&nlpj<V@o,S>;(js&MchB4D4bM)T=:ADdchA9aXhj1IgbdrWpjCC@hS6hkF,J&\XT.-%3dMFcgFE6#B=@d&l9gQr
%O7hVrk4d\!]=dq3__#-_l3qaGp)%*6L*N9JMkdW'or$QpFe;[a\DptCD%F@&GOlm:o"J3D?f$u"*?.'W/7_7g+WJ^]4Z3Zc1P0Oo
%]ihPB^B&=hrQW=Sq8KP,DuOa]\Qn$@F0e(1Aok;imds'[VR+*\2OMbodoh3P4[d<+IWf[=8X2HO+fg)u>i"4ZS_P#UMd1NU]ZYX1
%B71*DH<P'8CCb6YR9u&enJW4p6"<jUXT,rA/,U[?rgB.45(-\.!W0HR?8;*qD*DU%`+Mp$%i"id@pg'\pFs'5D`R*NZb9ZBo-9'l
%HO\?Z1)O=%_on8%mpLC>&*1N\(MdVk_i(q>OSr`E]F9O]_=02s?3\<j@!F[<_oq-W]>Q.Dq?I+c>;B")OZ->"3GAlL?Da'a2^CPq
%*OX5B0K(2G3(?O0*0O%g)8i^,S*2Y_@o##1-Xk$"-_#?u-XZM,@Qf1SG^4<+j6EAf/:ECLEC_i>0ZV'Ej^Vq`6RJ\j@#k0lnBpjH
%4Z2/]iJg2/VEZ5F4@Obs*XFi<?Q-4'*=>LgIs_(T_s2X@qm/8.B1PqMgB94sb!/LdTLT'j@6=>e(Jg*E,0tV+<([rI$HN"%To3q\
%A,,5l0DhNB?CU]X5HSjD2;G:ZH]mIed'?$Aq&a:/ImtI:5-t,KQ%<G7R4!*/SBdo=)VQWRBZ_T-m)IB_l[Fs`m_V>24I,UXcL2S4
%]cue/Fb^lof:JU%io4#hlS18FUtYtY\,?NY8%_!XF?A,0#!9h=gG/98NcEPME;9q/(k'CXfJ/CediIclVo!-Q43"Ogn\L5?fJ-.>
%Ne+e4mAa6lbL(+JK7;AR8FLItB=Fqbml)&2ij8HpSUb_)+(RoTNuZDcQpLAK<Lo)?fk3!/:JS&ODf.4GcajOVOj8p;rHrV</!iYG
%oq;TA-hG^Xh:3$$/,mq3<8kfO)H8K[O`'C=lI1')Zi5Gulg(l@\od?9'.*P%.a_'JmW#tZmA:ESg)OuEcS/YQF30`tLQ9$^fj+2Q
%.<O7:7Pa$6)Y+(AH%V]%<.-$K5@N9=V_\2JI!>2MmLioURRY,"3mk3JWR!0\acIS)$!6K"16eg"Gm/Tg)U@RMI!OlD[VK7G.G:<h
%9[8cUI.\Ao&Fai=%Y`YC@bI`k'6$4_a;4fWc.G12ND@iXSK*V,HdLjq5U$DLDU@MMD/R__Nb(0tWQk*DKnD:-*((RM\^T0mSmclr
%T[00h51_"c`X1pO4[q<-F+ZM4W,qKR#'Ff[kBcDXg%/,)H4B%Ze@GV3CsIOD=nPqD8$C+L;U7UtlSjVcT0%ILm^\l>n]VV$o\=,/
%lpS+6JhuJQ)"M/Hq([Z;&k>`\2qns;glj-.P'B,bJrISaUG"oQi)=p9IWr=`qsBjb=)C.(c7X#7ppuf+mF1GEQ[Psbp:<WM?-gED
%:M(X?*7(T8UEq,@8Znf%'Cd'Qc3[T5T/AG'7!Ub)O&$)eKCltgd`4i7Sr$;"qom9J=oA4o!Bp.1htqf-2eT0tZ=\4OTgn_PLL0kp
%0C>2!YI4`MiS`u[*:^+5'V0*D5M`J'Nu3i"#PC.g27ai[EM)Z:hQP5UI??;!]I-K92K#0]&&>:GF`DQUbB`6Q4Oc4:@X8OKPk#k5
%LXqg]Xf$k4\G!_te,4eg_<ZR,jhEoh7u0(:[e+d*jpn?bluUV@a[gO"?"3R;4S;f&+[OaD7%r`p#9."\hBKX=r:At2HG.o1r@NXu
%F?Dn;+;52>dI*%-Z"s-1Kq^`VNB_I:kdeY]5>PF#0QnN_-0W0!Id?Q]LXUej*=B.LN1hbY:G`8sggfP8\:-L^h<L[Kr76!b1^8)9
%?LiL'>Pn:kNh7t2?JPOi]'.YN:6@!.DD#fk>ci@DQSC27@jK4;c5c]mj^Vq`IE$6mbcq[2*BS?/:OnLt0CGe?&%lo?NCV/2:XObV
%*&`&C6I4*lq9tam-gelE@`1(HiUa]W(#PE3jV6DJZd)59/<<FCo#r.:-,3VLF$9(4S-0:&UVrJ,:Te=(B^'$!74&hB!hDQ%VY)Or
%rFnpSdfXmH@5Y[?c-:Ief%P,-M<?0*4k$NP6]R,c?::uC#X_+S,idEraHH(8<i1KXkD.Bj_=s%ls+HS0lljtC92mtRB*hbuEDSka
%Y>!5/K\\B2KDgo!kXe*#S0$Dj:M0-q5%esJ!qj?2+)MbknpZ"n]XTtprSuOBpic>5cg76VF]+9HR.tC2s5)B*(gVPtC9kLa55XRi
%aiJNiZ>hTk7aE+"^)bSectK;J5;AWK1cU.f*8D2)o?HRse,)<V.3'MVmjHX*]o]\s?BC@)I.4)+:@K5s++rgqp7F\.-C:'OL3)5U
%3.tBt9o.mEojH*5OM7+[9dO]ofB;QU,c]%llL">8lQ;f88n7J8ekao4?<i9#]R98J7qma-I.PD/]?MW_]iLbS>Mjo&1)Wem^.:`.
%r;Q9+h9-W7iss*ha-n+.ca_%/%Dpp\0<2ZAoHDU#FOtMtW'%IB1r$-]#)TJXjU_:_^Z!Xk6f%4+FS+DQ5Q<5OS\qd_q<@"!=%-iI
%fHeUuMEFgIPs@]<;QgFu6@E%S'<5MpQ"mDl,0.i8XHY?B;HMm(0@HM6L+O*N3j+DJ07M1=H<_;N7ZA*n1+m^KU;p\ROX*!O)n0'O
%A"uu(0?cDVnq('u9aX/-b%?'3N)9Nq5r5G4.QpOb15"KUCg=hW%"kcJ+'7qJ4&r8"R@"%+$bdH.@2A3p[doA]8B*,8-GI!k>+,mM
%D'(;C?%$;b6id/:om2.d/u0H[EA15#39lu4g:k+KKGWs_Ap(ctZOXK">QNmlTMJVQ3_7/72tf"XG02@qTN!7QSD,P]OHp2\MJ6=c
%Zo+?&q_43LCjcH7Yhk@&GasOed'j:V_*Gkq9j=s$hM55=g`/j">aQjL"/J5r+$3FO\1WN!dUQdjN'ODm3)`sd]/XM?2Q?G%]C"oo
%O9YB,m/Cu*P^M@tOSXN](RqjF9t_(D%_+N\l?&P1h,sG\]cXl+Fp]6W#q?U8AHYo5`sV$Pm:+VsXK)#G]C"ooO9YB,m/Cu*P^M@t
%OSXN](T2,pVY*-s3oJ"#r?$M*I*-M_`4X13Ba.LQ0f9']Sg&F]b+;[g&M2%83L+?LVXOmBMfDW3Wmo[WW`9+Sf;903nb(8:.cV:l
%Ze7<6'XrU@d+!huCpM8n0^oQP@@t_PS=<CamjOW),qtH,]G)kHDR(t3SDEpuJ*0<u<Dc$]JC2%?WW5Ri8HAKZ(E$R-?'+Mm]pZ/7
%lhu.Qb*;3X:e9u"dhU+C4=L;G2JSeXR9^Qs0,U/>K^$!GQ"bamJHh<;#*G>/f:*t,O46kpEaUkP/tL08W[u/?=)!)9gkf]`"ahi$
%.ZJr\Pn=/dpEF?%$`;p+:uu:>B\H6r$jVNI'?V/%dOML-WYA9s/"$L1(5f_$_B4=8E,7dcY#!2tKVtWaKkkFg`Agk/'soY.aXP=C
%)[]sd)FP^1"dF^LOeh#*,rDEj1)k"2]VDt?R$TpT;FV-E;SWqR`%7,[Cs0>k?o:6`K'k(R?V2Hk#b7j!)Cpehg9iW86ODkj.MGL0
%:;I?X]uo0jPY+(k&]%]14:@uEKW@"Fb&\!_BggH!L&=M*K/Q<sTkTZh;&+&=Z>sE/e1.-@Q=p(!6):NJ+pCcOQ"P[PBptOd@XqO[
%C"W^8#*i$rJpQ>-T\3^L%1&IaEX_u_GRI^:D6,[GnM[`M'.>-g8'jTS2qL9F>4UqOL7I0dM^nD=>Et8tEWj7*B`Rp!5Z:eKW*fJq
%VtK><USmY!W3PX4jTT;3"Qeh$Ru?n<Zi7j##WGL;S'1$d`ALhe^V.6=\!le&DfrCAR#^_!2Wu*[AoD%jW((-C2>ZE!69WS.=02h]
%h<!bpG4]N+?(Lrfqs*=VY'\u]f%$`kWMHLcBjC7ifkGt8:'sri%+Z]F/sA"@NSqFQ+8T"E6f`.h2\<D$.c8<2#sVTJh!d87A4qB)
%]s]&$i7kQpNDn98(U&I0Y)g:K*WnPSc^Y\W`s_W:h][6S9KsYZr:9=.W(*D?I_AmT?`[ZWo<7Xr5[U0\W3-1(dQ5tq`;FfdC9l.*
%)'CtgIjJH87H3?":kV-OSmGP<0V't!#$%qVBj/:cN%%F-#R[Y)Q[)"q"hk)%(jsD\Q2mC"<S9Z6=[iW@c:T@q=G>WgL0glZnD-A`
%MkHCkoVd>FXZS*roSNp#_Als<kn3Vm:o^;!lusfr<["p@2qLRW(6?:@Mi+`mGj<^31KuB*POEJX_]8/i1'-=N?tB7p&KFgP2#(9U
%nV,adSn0-*ngru8IWGq<>mP<B-MWL#MbO0PqlR4A(;@Cu>dJ+.Y=%kObPV5!Md0pdiiFan>6!jN]9e,)+E;oS<=-iE!U3/DPBn"o
%J_aIK,gTD\$aNM-]rjs.)cc^UUi4UP<`N0'ViT3n`(stX%4La)!L5!(Xt>HnqR5a7LV.oZQ.MbWk6VN+Y0076_8eZr#8[DL`WVrO
%d2-0Ki^6?RY3(UB]ueacWdf`G2*l$(.g*^>al1or&Tb'N/eC2R&7L(!o(TqrW0%qXV_.WWTH.%B+JrfK5A/^M3OiDE*421!=[8Kd
%*eJe",m'@/)-Tk:&0sSFM_l(Y`9_kR"gTV!'3<57YIah=%7)&2O$[!rK,aq,&ucsp#qN>=A(C?S$M$^oq@h/-6AZL-Zl?CL"NrdP
%=_^C5U+f9+\:6I_.0u*Z-t@2HXZ$?/"6g'Od,8L=fmOr)mJC:E*iopY8VRb!F4DllIJF4LmNM[S.^0^bVj"Hn];qP^[m"C8D@c1V
%rUp'4m8*&Sc-88mN0Se%+Q!a,As9uXCFA`:pR@X&fqcVs%nK.PRs42-PJ:+9U!%BD!5l;FiN[KX:IPVG\>&`9Q23OQ5WN#I87]$e
%hD#QcaGtgR3Z^)3n=.,^\n_@H+>7=k?Mnkmq;_>6rVGlH-+\S1?(YKT"N!p=G=PjgLAp='eNK^=4T`QRs%5LD2HIjB)p^IX?Oq2I
%B98&%=%KAcR:aeSI*u/\K"cr?;CRfrN?ssD'!G<O!j[2^;'E,Bb5<F38N',]K9U`d;K<[Jaa"fSMj.Ig9?H9J.62fE.6636-'t<i
%>SHI,9$X_eE"NYi9?ATb(fc1[-us?3-rY61am`,jU,=lJQ[+dJNLP&N3Ci[beKH<XE712Fh"NgO3I/ehd//r<5iQt1a^r=)2!7"I
%i[-!?h=t$^D_PZmQ%`3EFK#n^X7nfND&ZN.MCpdSgCF#tjj=M5bT`5p(D`%l'b3\67[<#>KV?+X)T\-DD1bM%H>H.'&pOS1/)Vd\
%=D*Dl=PhXdNs[2dW[R!"]_/ug26s%95(rGh*]NKb3.tX=l,#Z&V`8O_8KL<jmY:?GLt$;*0hBfB-#,:=!f/[04U[*m\[`T:c%E9H
%&>KIbH8%5f`obTZCdnq`c.H9#5iafC=B*Qj?T0m`2a5%0/2A+T</!UcOhLQj_sZ8o\HV4sB;+FQ-ACj$6tEFU\)h4SE=*Ns'UsO>
%qqu2W#NJu>Zbr6$4(3UAipgDr*\>TC5(:1ohhZk+K]Bo.4G_.4W'"1P#E/1dZ8e&qfJkmZ^V0?uMH$[qc#<(kQu*Y!?*]SL&@1Q#
%8r^5NU+1W14cIXhA@baC'ujFDQ,lZp*jt-;B=.=sZcbHad3)cDeBs<\oF;eh#ttj0YiALV!_^/L1,Z3i`R`pn4Ee<n@i9k4GMYi[
%IPbcM*RmS%7LrP^#>3CiaiaMpS\%%@d=W9!Ls^hl4c%L<(k!5U\dHC>;H88bc/61lh#%qEd:fSXE/d\QY*rh,J&FLgkjI+:0t'Ld
%jeX"*cbXJO\BIt+I2gO_nn5m^f)'11rLW^.!j`V@#$LN-7P+K9iugl&K&e%F%YEd)'-p;$,,#BIguUh`Hl>;6id)!A8WNDGKQ4Tn
%2bCJD@D,Z;5s+oVD2BK/8Ks.G(oa9'jdGk,,ni,Xi_X`'N-1;X_(Ym52Tt$H1kR(8Q,+6D5`uKVCGAMN&k:q?"@_DZP8#HUllANX
%[bM6qdK!uSREi%%Q=fb1c^jLo>QuPQC.V5D@FN"i<5A5L+kC'0e-@5c+BT_>@"!C6\]2Q$R#%sq>2N,e"s-_\P592^/gQ3P$)0i-
%H0V=DW[d$]X>p,.W[ojZeKuC.[4!B[[cFAY,d,XmIl:@_b;B#skN"2S>/jMa'-MOgi:]JbEhRtV:`8mRW:c\lRZp)BcfV61.u^o5
%p6)9B.a:r\=KqmaQZ%d,9FZdg+BH6Tn>J0FPqY?nDl?:_.8[*+1K);ZnTJ<QQmHIeh&5XgW3U_giP#hphWNi?kC?;>'6VkSd]=jA
%HV'o>'(LUr0iJRF\h'gQMQqfe!i5ru$E,YDkS4<^kgImf`Kf@R<YGEBEMZ459tLR&Wer<(6508)C@RKb(0:i;hH1Uc"'8/HXr)r-
%M#>s6f>b!AD3p909N^P+'\*!)#>OVk:Z51Ye<+.4AU`kKNF^E:b1)ZY(42=X?Bo"3bY;=[%3Q,"WXPe;nkD.`;dX3\K&Dq:c\Ta7
%B_?uT:tW2E*YVQYPO*(5kCY*mO:<$a8<go'MlLh7C-/08.k6Lt+j<(]%\FAo]B%aO;N"O?@LR+f_R+Erat7Y#R\a1iKUE1p)m.gn
%T5d1VWcV4H;Jb+u.P#DQ&_"VE?(6^'=<MM+eHpMLJHY&I%@_-8cRMe/JKt9>d>efiJ<\6rFsZ0F;e]98bmNF(;o)=-bAo?J+:nut
%od/b$9%!^lNObM*gpbQ*hZF?1n7RC_+<%;2+E"2/'B(K2ih4bn*\0P8bUJ6KJXRfZ=AVRkbqnBq9?]uJe)21I!)JcB<e^!n<,r?N
%$$)HQ(MchL1.m-92!Z[0*X&mbZbFgp=A9XVqX;]qAX@H4!K-qhNV?.V$9[/*Z`lJ=@jUTlZ!S>2NChgQ"A53?\+hrVXoQ+2MdX11
%n.qO1:$NU.R0.B1f`pRh,MqKsoscR*"QgX,8EOdIbq4/X)q#qVj,;A!E<#rNmnMQj89TaHp[bquq%(bG682\N]s8o._(:.j!81F`
%)fRJhZ-=ioLZc.];Q1FSgXmjpb[f"eHgWZlU0=BCWDlbeV(s6,cnZ`=^d/jC%Oi@JkT!R-gCG)d2Fg%5ge@s)P@U/#@EVI1d)5r@
%'W,\#;Q)@:%&phQ4#0;<T-K_"&W8L#)"1DUWAeK.OE8N1)6jZ#)qO3m<3DUXWEW&.Qba9o@<[=G<!H+oJgbWgm^S!+.#GajLX(9/
%r>]=e9`,'F;]mg^%#dJRDhegR@:.L%6-#Q%o$"4@A-'cc#c<"jj&)\H=Om)V/:U<Z3-gAQU2eb$Jldb-_0)a>(Okj:4?(7mm'/4b
%n-(lZIh8<G#3pslL]O,K-AEJf[pD2J;AWDR18+RtccM^I7t1f<XfY]C"9E[)CM\NhF@AFVg[UqN"XL9k:W8oiN,Gg`$?nOKbGG@U
%;^g-tHbPn">0<P.'iGm_"XM)ubl[5Z5NAH[hd9V%cT(hEI`RY5gS>;ph$JiNqOE_m^I19oJF=1KE01/qZ"OA?'nCq0O?o0^0?Eg!
%!s(/6[\sY6i;!HlU#mj^is!+]i(u5&+b>7sW=0ZX'B&_n!NjQs9[N&RKbOADQ0o%_G,%Wc%L\pY659h2dO5,TEt49MP4<?:nbmiC
%!>Lt(:\e655Z&*T@gpuV^&1U<7o=ek@Q[E5a1_\9"5iog(oc:sg^BfuKZ5He+6YPS:F8BN><@s?Kg!'KHRe/U&Qu)0Aon4oVoIq>
%+AdOg'ioM!AsNekN.k]_f7pYJ6_ieZe@AE(Xpn)T6T/@ifO_nd6T6qN"N\:dfYI^$\Z'Q[%1P&5E0(/_=rdm@\4@(2)As8SB6+`F
%XQ(^:-P8(e49Fn/)bsMb*1/c_gi1i-b)fJ,>%SO><(Sd_/poqceIadqgJ"Os%G4>VD/>C"2`"cTRJi+KrerpBTOh$rqV;sL?4m+!
%irHL`YJ!+`'fNWb5-Wf%TCh+R#-V$Tp,L'LoSEn"j*NIXe\JZ`"nd+6+N%"XV0g!IQ1%,6e<f_</rN&N$?LgQ<:+F&>!F1'?VD+N
%BHUu*m2RPt@;p0Je+8!ocQX!/;H+F_Z_T:g<+j@LeA5Igf2c@5!Sgqar(Tcn3)6.'F,f_#"oZl"7B9d5d,"#K;b!_rXhgn:+44K6
%_G68MJ9D"D@i8u#k@Y0pi<[uG8Si/3+V/_V_O5ol&lG+o$qM5>1-Rm\O_HAR_MYV:^C9AFbg&h>:Y/to\"Z7P\thK)N/7sOTH#[=
%#U<624UPSHpG5\NgIS.6I03hQAQVP&+ZV_$>esSQWnMlYY<kgE5-0e?;NGG=7-BI`;Qh';;cg($)!`IfX,+$4K#mT0VpjhXM:$=.
%7[e$"1@5aAHn)g*^f2R&!@:9k_#Tsc&/ss_ZibkjU>.IG2l.cn"SsB@&LOMk+nJ:n,*CN5X2%C;&q*^tpc@N]#D4/K\Y)NUjMX68
%3=0O$&*CrJ3rg5K\M?@O&Gi(d/#<H]V5J"RMqVf:2+iOMJ-mPZ8_gNuKauE07?Eo;e0/-2VYSn3\9^5k:G!2!q7aqlbD:+;Xq81D
%Hg,`=L(Ies:-F@4s-89\"OU2P,/DJ<J'Y"aG<9]3Xj0JKkC[U/j3QGBn73e&qB3Z:G&AQnSPQ9,AJ.qM)^l4nE[Wi_Q>48Y)b(.4
%2`/`c@B%D:&euu*I'O6.8QgQ80j#@2=%a9,`$@LViIJFk:jb8-nD1$d9>`0#l7NE,pl)ej1e$]NOE?pSYIEPc^Uc]e'Q/Z2rP9oT
%)IgW>TGtn<3Gt2hIhJhWPGe_[;Yis\5Mkm/%V^`GAn'3D^rf]Bpi\@\A&E+S5^R8GlJpnP^7R]RW4IR)@K"To1,<c%`S0\"!&6nb
%$:9Z%;?.BIV5N3mLG.^:9uLb_"$%S[Sp^ere`@n;YAV\q"e22ZJ+.r6b@&7CTGtn<3Gu&KZ`qSG*0JD]_Da5*/:bb4BFo!UW>+L.
%][Wj@Gt\OZ$`^icmFi>S3<FP`g?j,pI-h7fOjL+-`Wc$A<pE6s^^EE#$jP)I!LZ3GA\H#9ei7BJ'_(1BJ?ao)'N9>O\LQCi4oHRj
%n(Eer^r-SRH)mfb6,+9R`O$3\6>tp%0/D@_ViQWl0LeGI;HZi#"__o86Trp9e"ChM0$KC%#r"W(!TlJ<e6piECc3roV=rH'QXhWn
%RTbYG,ke2[=nI+WU/+Yolk5AB1t(-XatLs?0i%,h;)gN@Fr6Y8,%%;^HoXc2lN">'@cLra.cip*!;TKVJTi1^,S6r?9blhHetE(<
%9j>AY1e@5j,GS@p<!,?1:&oVpF@HdUM:=XhU`\]Wn]38hMAMnNMY6:A@@3E`rVV0a#=Ul$J\ZlAQ:_o&7[/=1$oD]ecQ\=`"m$@i
%3`jr,/A2-%#@qW!m)%3!mtiK9BP1VcQALZeq8,6U$+>eAHV4LUd<R3d:/P\0jpbhU-@SL>B8]'WdjJ#2Kmp5J94LmG25#8"$!(\5
%!eUN@*2T+Gl6q46^,?4I0O\i9=J44u(5%@:PoL+Z>o]Y$0Ig$"8Ekqj0fso3E@ct=Sbtmq[aps=i;a,7p:&n",(3<Q!sIX$hsds]
%@GkON#)RV0;POD,k_7T@eMJ,9AeWbYNC9qS:Ck*Mcn]!`"pT8S41&g;U[uhd\H+qY'eM*Ss3YatD>)7FN\17!Vi"smg=#?hocT]A
%o3lcjM?boUY*e-7FR$8$P7KhuKFb_InmtDPjHQD]/aQ4IJCXg6Abq^Ln^&KO&gjOb5HrJg8ZEn-+^bK]@SQndGWZ=2+5-uA.USel
%GeB(lo<FL)elZ3_#^sRmc&%+)FrVnG%$]-<0FGsM82i6BJ.bgPOdf0&RaOa\k6du3X":6qLSHY#F1`CcN.^;>$:^D_*]D9eWVUQB
%Lk#1USpOd2\%n"(#'L#[0En!O@tccWWOM^,A\.e<p!'iBd1r?C;(,^`Pp<H.7e#n:CB)GC[a^@j#8*@J$gMVuH42a`acYYq);EPo
%Xe&91l*#Xul!PnVd.F6,9aA_o8q"!U0nqDGY&.GqrB'ECN\8qDO3D&Q1Yfud8Qo$KGDV>n$7.#C(1P&gD^OJcXt5+RQb^$:e6kO=
%8pp,np:(:U=5ZeeqcfmLCH>@]c.*`I@]!H-R$"PdlM:aXdW&>S1/g70mY;+5PDkR9@BW'29VON;h9B+h-$9Z%*F@2`F(H'e)fe2k
%M%lL3m=H9:mYdYpq(:<&R*8;dF9u2u4pY\N_.M:G`\a!;Y+Sm%%[cXN_&\dN.3D>tgbU8sMMSS74\l1]`c0>mPZ/J^&4nu&(RICJ
%d'l^bbV.[88C`G-`oR,0`;%bm%0\4L!cA$`*)p*"#4"@EX@%jf@rf4II>u;%@-3rGZCP:-c(SLDOqS*ldhU60#2^[tKZjMBgfDYS
%C:LR-.9"s[`4;+]G&Gk!qFhiu:Wc:;m6F@^`5n1_aFK]H);NX)d$c,_6"_AL)BLpOpZ!A=&D*X)A0M>d^`4X1%V/'1*=#`+(bnW<
%';9oZ30gO<5hD$1=,2n=F*oZ\7]SnW#@rQnaUEX`\b;Ec0W>P+7i1N2VFKo(h4d\:hrl&T[<c^!@1>^QWq62*R0t3]n.]$7'!'fa
%P2=^;5eB%.mLQU_-'i^Q#>Yc1!u`'r->'17GcVJ^INa=Z6iB=nCKMJ`d!D=Q@+Ns>NM.A`LDdQm&PQ$dGZ^\_#lSFMFeaq:mgDr)
%ZJuUHObCjY#KL-(1g:IA$0$%2-\ON6_:(G-$sfNf(R7uZ5^Qb<Z=1%u"0s>\BH8d;g#a:"Wqn]^M*7,61h`OFZS_lt`b];umH?\1
%#Tida(c"X(Ek21gct`k+``Y233F3]h'.\3kG+O=V.:nsq-p=3&*l`;\\=c06JM^O&M$meNATj$_AK/NTGj<eKUU<?S6c2A;2*?CX
%Uef5e>!0AhdjRkA!EupFJluSAA;>>M*e"5r!kd"Bl,@.]Z1OL1num,]0inoa!$$(ZD76?rWu;P`5&,_LeA9fLT+6tZ*%BIuX+BuC
%=9VI*NNls,#Vp'6d*c<_Ban<NS)9s"iMSAp8VREW[,D?9Qo4"n[V3_*_iJ15CmL3F+gK#aU?V>"ZD)Zg.lD4\dQqa6e!'GRh;L?>
%_\4LM5Y#sg(F92`iG8QbFHUKkQ:Z\.7IeA@*_++/Zjs$KE,;t%Idg*G0dT;NCZf@b5^R%@$0I6CO=f1KH2&Q;%N:fleJjSK`R*oY
%e!h=WBbEcr3^<_sN32"!i"79E/Z9eT^6#%o`[TXG"6#Ago"Y7u:)q+L''("lEN?Z+`mHi?VEn^2E&8U5Ul\$7;RduFK*L&fU`l*_
%G!fbQ8*8dNlni*ZTMn*;%K2Hd=8+Vl,/ARSXgAa\9g"p:kMR21dBSJF0</ah\p,(JKu)i.:kfBlonuGii/Q-.pS0"VTOgAUK,/nD
%a8:+q1c[uC/S5gp2RuN1@"8]M>+u=8NSVqug<k3@+j1)u")/LJJ'LlKIGqM1)(q&P5#0M);Kh?p<`r%@2psZ6S.eM#]*F#+e)jcr
%;4<ubc:Np0"$bM/:_'!@\B8h9TYCG`,-G2[<P1f_^a@cUd.8e;FJ91,<FV!pdl4J8/eapYMSfsI!)2@W.k6EM>riY/'L7Zgmpk^U
%&clA]FadDJq+K9?`VH?3)+3:MU;>i`&9*GN4hc4:)a&9!;IZ)#`L'l@ILp\cBi>VIZ`0A24*$oH&_.jS)HWi`Mi_gGH"j?0D(X[8
%LK3tE<F7D=F>4KZAFprHJk[/XS*'mC_T9b15.]m7_usN(RILOTb*]u5?SE)eh_ZZdj0a*5G/.\;Dqp#&\h$u\5=Lt;1$2\sdiQBG
%$VZD7*[YCORP3rR&.Kut$QRF<03*FO!@;F*i:ArGd2_nW8l1V6:/&pUZdZ"='a'_k&Ak4h1DVBD^g[@!eDU4^`a"F_IqKLaM;gMV
%/.jh&+K(MZ;`3)!/sUotdl"g8Qm)RBa9"O@j[*]KB1$(87&7[J5/jr\#.%!d=Mm:=id*Wl-!'PDD)1BT5lqB0<=a10"EkSS.aFs7
%3D&UNWr'mbG=UpqK]%0\O>.d?!:*NF@AC./20\<c3_As5T@d*g5Ek[?C+`PJX8uR7-=@B]%ZbOnMSO&MfDmYNX("c"J-n66\5qGr
%`H*gIR<cmDi`jqGeh)_V--.cToj?hMWOn(o!1^sU':]Tl-)r_"Rb0R/iZs%-Ya-?M]n-(e'3)d?npEY[M%hBWZ\i1bPVMF#.)5po
%FQ"$`d*Ngo.&.'$<*@fAUS!:."qeeYIY\C,*2#<HiDco>2d>`Ce)9I2^4V/-8?iBa\8N*5dAK&T(0<%oLN7fV'C'g8MPUGgI)uaL
%<QG+5^HM'<SGai$X#R#\&mOQI!a5&0_uksT37;A0U6)aAPZUUX#L(FbQbH%t`+o^i#Yj#1BH*X4d],PP!E2St_d$oH>_J4kU%2hM
%pY!(l18*DEMU/2rgjD\=p?K$)jMuQ25uG4Y"b.<=ka#236"RBU>.Gq#IA`<s1<HmP8&ac_V*7"YBGb5U;!Em/?VJg3arlW3,neAX
%7%d%=p_'kep$jpUMhq![0$1l:;O)9\I!b!4b)>`8=!>S_;4=>m>+OZK^or;2a?g_Q=qrC<$[&Mm_^\+?&-@JQThs<#R)$F>W`#)^
%"cH@D!h>pCA+DSW1o@nK,/qSk@MOM$",So@3h?)MrRb''6%[fY@"CSe&B,@pJe:YG?-ESlb&Xi\X<,iNMX#I#BFc*gl'Mu9',[eo
%>qsb8oIJ_'O\ApVP^4;WZDhIep+/@S,kjfBW,)"qT<"XU?63^:"o<%>))(]O9hDn\Sfgscgb.hA`sqF&^aGeT0h+)'6.H@bQ=XOJ
%A*NVb"KGBH.^]qf(8u*Q+YZVaScQu&XRZs'WfosTD:3]?]j[55Y@F%NVN9ps4I.CPG@2g&)_^!6TT(c5s*1'!"@d=0jBV8<_/;"X
%dKeY]dE4BWkYqS6PXCMBX9$!W+>Jl*,e/RpPWC\(*P*N(a*Qt(KQMPqU.7hro&AE;]L46!+B1W<rEg!;J]8C&=PaGDkJT2@AP7`m
%1(<WG=VG3-K`s#J)+WtX815lX*;Sku#!5?[hBYt,'IXmD7>7Ru_ab_$qJhUCTe>sD2Ce[$bU?:MSpE%J6G8"c(Gg2-c<c;3`t<b%
%"u0"?qCUO9U-f:gHMS9J/2RI4@ZuHO!X[9oc"]O1O(%Y_hEnn61]OH.M=tdb#[C100:bWF'LQ@G-0B/CGd2FW!Z@I8Sn^,k.8b-a
%>R4S&qIE*LM+Q,$kV`KK9aQNQO03Ao.3Qg$L/#J8O+2^X6O-(OK207D'DF,72";qU$c@$6Rr&[/T!!$/O]sTeeYRHN)^KOi+(J]S
%-*a;XHX^Jp;.=E6L8cdN*mkX5F;$EeI4_ch52*)g8g.s,%LYf4FNFf(kEpq^,SB>$8:]6Mc"U@A&`7"I"[:.sHKZ;Doq?kWTL$Wp
%^,f66q-JT._NVDNZ):>GR]iBJHjSGQ6jHC$=S.X!(\'JM8Am;$]OXR@L(dR+#un;S!:@r!*VgU5!?B"g'#8_@d"/F!:>f0N"c8!`
%Lgua"8J0p@7G*ZS8u!24^/Sa%Sk5@U3S'e[9GCE='_b[$90sS4-:NUXEA*VB`)+#d,QG<##WHF&W@pQX2$oi.(=C*:][ha:$O(d<
%d,\L`j'b5Z2c22m>&$6-?a*Uh65fV<SdKg'7?mmDTItYj/uJE.]d>LIf3iHNWEI/rN\7)>iG2@^7@(;6(XTQT(e&*kh5Is%jBi'K
%bU6j4.M-B$jFtl>os$Ut#H;A)2Pg1C"5t`3Kn/H3&HPV!0JsY;&;Zg&`Pg<>+JK6f5e8S&Nuj,,muFG6elZ7+LL&tpJh2<Y"iGgf
%<T,f((GeVO,T)T+_=N]NN]RCj_6$%&'jn,)nZ5<\qcs5fgP&XB]M!B$7&PO6YPg@16%Y,E.V1r,lF>/+oj`dk;kH>`Vf_ll?DYSV
%+#HmcLe7CkZh7(3;bF^MT?nGh.e`Di@L6O:Y6^#7+H6=Y)sNT=jSAGF#e`,MMdfS<'R_Y4&I-Z@\b]*%9V^cDQn4@&[(I$oTK"lF
%7d]YZP>VPsNBZhGUVNJLD?j>['I#p?`q,=MYr5QiCBaIGe@tOJDq9LETSm=&?Ld:JChh9r813["RLo(j!cp:r?amqn=+-PC+t:>U
%`2oplFFcW[WZjK2MFgsNXACt+<*)51!ohC-Te<\afq9t7PK8F&'!,&*^bgpj*EqRO;^fbG@pQ?>fm4AHRTAZ&W]O-A&MLinYs#&;
%QJVs$^;FPTZ+qnoqgjN[.o7nI$8c\;47SGa&dsVR'U>PQD5[O`Hm&PA+CYfiW%*2^eIP1OaI"e>QMChrSP1N<MQ"s&YbS2od%Mp<
%#.D[AO8V=4POTQaYZ%]bQ]OP-6=_6GoU2ggV.T4W-jU-H%q'bij1`Ii%d72pTN(PL+&'pEY]:Zrhn7+kT`I@3ku*CAh;A7D_`)T+
%T;nO9jd%WXs*0f6A_GI^NiTa+iOV:J%d,.P0&R)L[fmH3ml%XE7ADX*5Tf5PD[)g9frhGMA`+.@a`+&cQR43-C(d!.n+IMK&]rbs
%6!B4W7Qs*o`0B2RlhC9u&J6N0ctsAOamZGga)k>dC)edPon[b!YWiUlh$jklU7^KfUW-cc@1k9B>u<_X,3HU5Yn5iHcXA8T2sO7H
%9s1`#2*3Hu]CWt2e`$3U_ht%'7*IF*J*4Zg'oONAnO<GiG?jum3jloM2r/r;5<-_kHh6%#[m02U/Y6mZ<"?;<#8hAAcbfih>7+#p
%"G-8T4HFM5Z'JrN@g:Ef_8:$`XK`2RTOgA_K8m<RGbh'QVT+e(,GHnL(nc$+1r68u)]D(*3Y/SaY#lXHGB[A0<FK1W2;8!5aJf.'
%IUQAbMY'_aiK%,EV3m<=Pul8&WP,$@=ATp%JaXF8-j2n8'H&:Oo;%BsHD/Tn8p,,`9]`^30@i[VZ-EsR][Y/*8<78SIHO1/ZQQ'l
%:B1Od`Eqc5E%L;cI[.Gh%+^pS9]frURW:PW6Edk-3=38T1HOgD'sk/TMU\<P+lp^4WB4Qg+!NL<lB+"sp85R!XhADji4s+38Sj-\
%Em,rE&LOb%-Ga27G>["J`:0dPUc1Bfh5(G%dR@ZYo+M6u@4]Zg/&nmd_o`C<AVXir"BL'elG&]CVnaHeOo@^d!["f7rPn*sK#3"\
%d6oP[k9X)l#uc']Es5'CnYS\rI[fpQM.(io-HGdF:*Z@K#5%10`nbK81E*;laTC$9#OPIRQt<:(1n^lbT"F/"(gs9QFtcuh:q\$/
%`Q1^o47'DQ#!Vfm@:1dA[Kr\7lTkK$k@jcbPs.N[Hq(=73ddpLk5&*`ql*_qGSL]o&Afu8PobIVZ?`78V.Y>c3PZKo$g?`[/rJ8j
%@\,Y;4jGeMmrps$g4(R95kAN0q#I>Q$GN"EHk5BTNj66p^O.-t'ooQsVn[VO";$:IA:S:SqkW/-GurYKhYVmA9&./PM=LJ4\ZDe]
%dL3FL7h]#XX/&p?/^V-g:4L(^1/C->(renr^YiTC<$<]HC$40[ZC`Rq3Ms(oG(?S>`a#LtlP>Z9Zej\K:c&qW'$rMjPd5pXJqK):
%))t'.<,!fcoPm#jqE3jU@;XN0O6p8@:h3%LblUIJ(Ll:O^;@oHHl;81VT=hj0g)>s\D:-7DH.I,&Gg]o@e(su4Z]0)US(6j+\Nt[
%8^'IC1Q=-H:aT.!.)`tpk/NJ-3/oV8BO8p%@sCT>l!r$bCT4@L&NtVsV<"Go3&UBKYXh]/CSYCE:lnRE7dB5B@$,oN5tu8_cdRpF
%U67+IlM`F#UN9qS"Ba'k_+BSQWcs.cXqGG8-77EsVo,Kk1%9RO/iI2b=I@l9d!j]0<*,H/cm>L2+mOJ8Rh^jBGm),:96<H`Yf0KT
%?\rnc/=QQkZ=NI!?Xs6[ShL32=AYMU?S@PU50Fr-[K1,\gVc/((aJ(PmMBhHl3bEmeq2LfJA1YmXrJc";_CF*G=1VJ9G_K`%ePr>
%Qr?PB1ba>*ZEHo28N1'1_qM>A6E_f:C`sZA68'[s:4kE!e`NSriS.H4&0BT8M']cC-q!RueJi-uP%";+3N67,5<H3a#(lig'Roo=
%?N[i>F]RuTHn9dmnVf6=oS!i,L4cNKIb3>JJ%PM<XS8oI<.hq\GF`A(k_`&a#o:P&a1!KAr>[opTK=K,C9f[D10/RW0rP^^eb]$9
%/Z"01m?1:Qe<b_W=@FW#^Vb,*,I83k%E!Ql>U;H%O[4ud9P'd$Uu7[A6UQfoSf-Y8N&S])nL]!6M0_6W`4hllb.s7"7dGbY_%pEl
%ORDi,?V$0UJ;\TqPN^%M;5OkEn_K/Fl?J8iVIh/B>N-a_ILti2QO+uQg6n"M$]!]p!c"[XFD`-J[(sq6PUZnV<-@-0f=!EI2:.Yj
%(O2WhY>7u(hqCDmV1MYm/)iu@4F,:q@SOs0ZV-jKEXlQl"T&lDf'8/[3RZEtZ78J1B2R\h%q2W?4&XQ_[BK(186>Q.oG)[9eAPEg
%#Xj,VeE.VFBmqOOIuH`&[o8@Wd.bPaMK<oQZkSBFW;=TGl'4/Lp#6Co$FuoBg@U,i,jq@I)S=/'feI8J"a_\l/!`b=\g<%WmFi1M
%4OTII/VB<0J^!bgC<@oEPg%@-`e1GeAf;Rs8a,CUQccZp2dH(S7%4i>9?hKATGV:*dY4S>j!<s",ZQj'?+:bJ<FT5n?0WhOC.fNk
%&::M2E"'G.R:'j[oA*@kZ+3B)no=%02-"/%3/B_Ega#QbBme&9'AfhgS&4MH-+iL\\">.KkM"sejs3Phn7)O1:;b?'j4f0r)>\?m
%,*-Olr0!<Nbg644`8D%B%"9,DZZBdhWY^tp:TQFD=0Iu('B<r:^dBUeN1'akXV_`A'D-Pa-Nl5aQ/@/?QrMa?R+\L3%iOu<RXBM$
%6+r9qU?@BLODjKn4CbQEW#D/;(b+;WbCj9+1l+8,A9`etn,/o(fkhK/VtGsKiOmddfbr86(I+X\kn0#lgO_Jf?WB_fqM%qM/n@JD
%H$<'9PnmeCQ?f,ZnP*0E!1s;>--Oj-#p.So8TF.OW-_a2DF072_P^FDhgC]VkL2<>`)NO/*>94"RH&9BkdRVD@]7j%5/nN92DU#j
%?B#/hq4lmlpiVs6/nAMPMY'MQWf*)9W>p3G4@*q*`CF@0/YpBFoTXjSHr<b-MW;ZIDRj'8R:'B%9T4_8[9!I;O$&;Z.rOYH4Hq40
%IS]V-1:/-jK&d!*8DdhuBaVI&XHI*>/n@&(7qKUeE)l]uo$(6-SAhLXf,\WEiT0AcO;ibf9&X2>X38^[AZB@_.c[4\Z\E1?[5=k_
%NL5lbg^5gl;NF_MOc!j<\Hh<%<h(WE4mjPr,cApdEmMtSe5?#[*N9mCbU;^N%iUL14,OVl'^F0UJP8(MTfqrt*8+&!cq58j-Oq#N
%WAoHp4qf+Q4ip)ffHq@k#AQ:V5(n^N$GH$elc8@.:Jd2TV%(d=MX#H`C>F\a6chYinPJHWkTm2A@2d-D'PU;O:.AEY#q6Wlo@%eL
%<(3t,b_WKla6)re8laV$Rp\!H!:l=+D9JQVn?S8^Qm?Vj^T2DGhu1V9QoeB__YTVP4#4::NJOh39SGbglT(,X[_8Fc:Z*0nC.70@
%Bo+bq09<5!N66fT/\`M+rOI'Q658\Z0CX>p/#>)*fgU2[/hi+tbb$To%UJ7@>Do*"a?"RsIaE4CeV4_"2ABV)Aj[a(Ai:?@b@Ik=
%EsOj>(=IEp+Fgr?g%kPio=/9$d,eoN[\;]e1$&`KUJuWYY9]sB\or+5&0G1=%`M)+[u)DVduH.E)J+*Q9P*f2*t:or-5JH@.QV&1
%5+m@4a&")LDj*n(9_;,g-&b\H]V%*t&sa06H/ljtN/lr[JulqjLT+`=+rPZ[fuLrB8MKgY%,]5Vad^?&mCiEl]rR)Kb[Ji=;O1l3
%kDL2#S?L#H`*P.!^pa;4*8'0!*EMe0Vf(M!o3`#jPi(s4,q=OIs6c#3alOqI,dJEqE[)^.SfM6_?D]bjf9A7;cVP8'ZMZKNqN+^&
%k=]7n*\mYh=Ih>76aUY'PkVm=oq^jZ+Ib0M1sT>`Ab5ppD,sX)Qu*lBUQ!b8J,f/JfA5c%]0i6'@6qer/^+1bbC?*iW4sYN\%U'5
%r;50p(RPi>G#a9AU"mC&S/-;6h>0^D?[1.?[ef`rrNSV;XjfG'2CtY^drn);4bT5*/GOpW@Bo=gf/iglg(Y;Binto3'0d>_P]5,5
%p#4C2V#"I@:L^YI$-/DdiiBd1D6(]$_U2.E5bE1Me#+)=ja+DjlC0\(&2YE`0s++IId]3)WMfsa!H_Jo9Ed`'ZLgp(O"1Ep;SWO>
%ITN_3_uG')rD3BhK>s+Sr^I6bS5K;MrY$#S6SNqH5HSjl+2!8Vbg>$-InJl\o-jUfG?>-1\X`X64hE/`SqZHP!B`).F"[HfcK"hm
%a7.E_kPRh'O`:aLaeP\-KJ"%!iB_>S:iVnQeE0\+Z7;rpnJ;^&Db4FD1.DXW3N>CWbQ]Aq2rT[*/2U[41Sgm@)XRp*i6Rk!Pl>8I
%;%8!Mcf1.+n$fIr%IFXk>IsSDaMk9/YlpB7Y:\L@Z(b`Z[<;eP=aa=2XgbnGC-l<KGo(TB6rU6!g(!`bnObB`6D`9=nH/;KA3ZO;
%l?"XYU0"O*D#Fjub9BX`1hdg/kAiNt&)4u3OZr<HR_FSYQp^K@P&-WLK)2>EedHS"mgg/%0dAk!ef/8R*:^kLh`GUJrlA0UFIr/J
%j/JeUUkY=$Kkh[o),G[cg,^i;(LY1&%+g0saH*CMlS^EN_lJMKq-tE3P^/cYIN)=:0kd]hg?Lk;2APIk)Lou4=A2fBalG1B4"V#j
%mhk,[_XJ#0@A@ci-4U-l=oZ1c\3sfiNs`iC<RL9es!V^WqX+=KFbd2]hTs/S`4Wkb-Rb%*=5^hDn9\1YD)R1JH?XlUN(5fFqkq;W
%]l@5W[kGbi2%7I*qi%)<U%q_..(&(AZOIAZ,B(9n<3%rc\"c05?LEl$Xa[%q*KL*aB'-;*f7*%q"%L1D"4_`>-=sYM<EgjLQM0VH
%mF>Qo=k.;W:3'VolLI*N);E%mCp%nD<;X/rhQJo+i?3oShJMu3g]'c[Nd]c3dl'uZS__K\9(/M1arsW8m^0U.8NZeKKSJ@1Ne^+"
%Y>Y@@Q1>HnMk;"3%pD?m'2D&_(&R%AROWqu<a?Hm-.ck'X0F9Z%F@0XOA7LMIp]e)MefE!^M'6bk*#UqqIfA9[k[dshm!(W]ArgR
%4-$i%NoQ,VE4kYsE.47@J^lW_k,EZh"(Sf(?GTY'd#,*B@?UTX?aG.Z4-c`A#O5(.gVC1FFnCN%js--$OPheS%[-=u,l*?dj'OhB
%=lgooG]a43@m#fO8uNeCn[,eOp9r\ig[G1)p:K8_,l@&&mI5rse)C0i#=&6@*q0q7XU6#<hJXmpriZk1n%n)KB(clX9KG0Sh5I@P
%hF6D][,10JG4dK,&^7g\$*@6(L4<J+7?7"3UI/6WBJfZbkH^^7G`FgjiY!$5Z"DBP^%&jdReI6ab*,l"h"nG/q-OER>3>ifiS"6+
%=!IVk\e6(86c="FTb%NrWPXEnI6UW4"?slkWMb*;,Z7WY71eG\LOY@tnUm*"rgr%TANBa*EVqd2n5l2t?X)<hWe=%Lb%ZtEM&GHC
%-][ZP?<*]sLUcEQbQ%IS575$q_:^bb-aa_'8=\\-m2YFmmSDM-rYLT`re^NiNtm!9#E&qfgJ6a`M#.._Rn_b]^Y\XuHej`gp-21a
%Qau&3kauKA>h;8[%/Pr69kW]:JZ9S8r?,-!1u;C-;RO'q;_V=6<^gf:@O0<R`h6ZYKKip<#M,NVHYg%F5LX8[71gF$Bs7Pdk'3<H
%Io1-"a.G6d[FM0<.4UdQn(85'q">qaIl2>KIg"=iWS]Z=.Q?*0V]GQi:OFA_GNcKWQSq<6rY5mGecMTgE+O"e*GFKdd?f8hpel\#
%U+&bTa!/8lJ1jl8;?19Cf5[d:U4mMrUY@/_4nR5cET!fpWG-`Y2Y+t$pJZG>&$P_Chd%LY'LC]#kphsNR0gAOEbe!8h^b7CO!;qf
%%0eKOrO+4:CViU8cdgSMXKKCGDYE[:)u'QK*WNPClP1LGjI)(Y,jr-l/$Q;hHeD3E+1%MlH!3\BAc'gCh%nkL[KdV>qB,@qhg'*s
%`N]B#:H-ciLnqtpj<22[oT?j5Lp[\+"[k-=KhA#2jG?*2"oL$Me1?EMs.`iOJ+`caqEA\Qs/X*dBlX0f8rKGW$dudXMuNlbe8IC9
%191_>O,n]P;Ps1;bTYKeJT"2S"'=uMZ&^Qks!d-;5?MgO^MilHklkHGe&?a4A:O*BjSst$q[VQWbKfSZGA@`Ck8,0%em<X/[/\>9
%n)mrds,A&(0F&tPTZ`(X&ZA@UleNo"P!/b]pKkP^)@ft.N4l">l(37B+3sY#?d6CPs218Jro'4Dlnuf-dbLnPp98--I#Za4JCX>4
%RJkM(;N*MBea3J]3lVe[+hh`j6G^N7Pn+bl[SmkA?W'ee&:YsIq]"Y6I]M]E7]FKl9sM]a/oh@IGSmD)0g#aM*0)t[%d(tP1m&kN
%?P4)NJE3M?LfL)ZS*D&/NFe&EIFB]78`HskoNSH#72Cb;8-t]-LA`Ag1bPcM'B@gX&\\C.0=^#8SASA&U[Csp/?.Ue1V<F:,2u;/
%KEgdQZ0"IM*&M0Zjfk\^#,F`M@hC.iZqZ3nUrSpK6rn-d8X^_F6>gf1ek\P6eL`foqhf6)S>>HB1%cu&gl"=Cf>^am+5dPCL&D#i
%WWd-e<PTSkXNInH?4B6A:a#pJ+\k@3W+%+?LQRmaPVZ;V8[8")!%ko'[BU&eb,[:,Jk%mP^1n`<6&iN2(0"DY%ohZlM&FNgV)O#C
%5T?b32s9[F-SY208.sa-)N1[6L9[FOrRYLH9!L?<T_(4d5Re^sOHJO)*8t[0$>&2tPEA'X2roD@1L7p:,*hFVo@5O;3(&8)Zj=35
%BXG%1Di<)I4Gj+$;#3/F;U).^!W[%m8KrR/m4#c@5];u70^^VpPR!o'->jqqTi_H`0nU(9O;=l5J1,1b60\Sgm3;hnTUAHFUD/97
%j%b`XaItFL>(B(O%M1'\p,s![21<P`ITZ#j%SP%r=q)4-@.fgej1qe?.$1IOSZm/?W(BS`i2EO+jK823Sq7iEMGgN][Mh.9JR4;"
%AsCa<dTBqBpf[t61lrcDe<?l[Z;r4GFKj('HT8(">>Y*$6_]?p:JIl]8Nh3&iH2.AI>1TSY_*aDThHZ,3/Sck-\:k-7%h1aMgK"3
%'dM/:W(@].SAkgN4fBNZ&QnH)lJ0b,=5i?o7A,N;-qHk&4p6%3aUC_kOZ_NFCD)qkVc6NLn!+Ga5#sd9SG4Y%dT;!^d?q+/7@oT3
%?BR;1UmdB%"DL^XO'p]dV%glmi0*#.>F!Zj]Q(kZJ3$L/%h,R^eOFkhrM6796e_(3"u89#,j]+DWV(nD89c0hFs0gQ-q.-3JKR/l
%.@Yis?pmPXbG()uZ'faqiF7SQ7PZ")"'CC7Bt$JUKK:kT.>W+AaVhO@1^puaA#&K]i0L;M_bf/MJfj$g=#23h>H;Ve#-NX8TX&nM
%#i!?K:.35]P7N#N9!8<-5n^,@H_QBB(),T(,`m(9\'2(u(VZ<l1o$7K[m5LG#^oh<H4c,R/3u`MX8PR=B)0;\a7ooIfb/;#9FkN*
%6FFfua/MAa@p-TGSG/,h"hSoS9(EY'N82JV:Crk$;c7BAKJh2IE^3:7QlVlgd"#=iL^c)^5V;f!l"6>5`t"DrdQCnWUe:U'JkT0,
%^aNlq(+K6um5@od\:5_"'8AG<,E4>l64Ff#?L9,E5p^8Tm#e;KUIlc:SN0!!Pno0B2SV"D<fTjBOJj4.%4PHNe>r>B)7=dNXBqaJ
%^s4\B(G9c6B22HZk)Y@/8JhfG0F9KVO?sZ(,`D;*"LOS!_oeX4:`B\J""(b"%(;!:3fIOIClnj#Imj05Pk+"QlnnTBU=D`3p-GQ_
%AZFVK`^uidb$b8D6F@:gT6dN`^aO#U,h&oeAKV>cZ7M@D"=$^-*^K$h9eY_7<;dBDmMuSBB%^e^OnGG'V`5PNc#/i",kf_>1ORtY
%8Ql1m\U')U!oH;#Lp(Go)_C^11lYR2Z;f!%/3N<QfBUU]iNQBcDdm=dE`&_/i8["@.!#VT:Kub]mXtNt.(jAgFBbb1iY;=N^<+b"
%Wc"C#$#$9fQ'C[D]4V:i;l_\h'lQ_Ne\Pi.PI`E.nCA?SSGmfSE.'->N-t1**[GUFW'As9#=c1C5ChQ=Ahq5T"$9Mb75.Kd53s`1
%G0CId0r&jc.!<aW!/4&`'2kgc#Ze'(k'\EudR!SV`]up:,Xh#53pe!)DP:rNLG9WaH:9@a9h)Y%nPpoqkp>0I>/2)XeV:e(bg^2B
%po5;d#_#1EKa0E5ej(-#C3A/\56!u^MoU=B>'%h6`0dZA%YfO4(A7tD7\LT:BSat6?uZ!8ALd-Vrp:IWkSR2U,#m7t2I1/P$]hSp
%gs2/]+hKOa1:QEIk#a&5Yb@k])gkW4-OW$pA4B#mi[hbtD5><&M4O2<&)NB3MJM9'q#j>X"GB`',su45+VLjXANc\mLOVD_+T]9S
%/5_KQRSh^%-(,9u7f,Q9PuHorrsMnYci$6LHNBODU#+Go%naOa/s6+9FZbqK';,KD^R`k\1SUkVXL'=fcV2>4<%-+],<Isjr>h&N
%(g([;mDTa&PSB5hVRH,a).DEK=[78;iHT#4S$Enk:4/^C<H9jCTc-F/EQ$!L#^i]g:4+dNJ[&c1If<iuoTbZ]N\u9a*c/cs%[K0s
%.X@`]C$`Bp4&jAJB9G<T'F*f.fpt.WPJui&P2'a^L7.('QP5h&\Fdu.V9E9nerlMe]_"k2`mO"$.ZsFaoeNk7WZ\>A&%^Q_SRYH:
%S#ss>eOCRL[1k>#XZDPg?Wd]M_I1mE4h#o[TUK/0?ucV_YdnQ'/Yq+tXd]@X[#VIE?<h#i/VDaH>J8q<!,K9^JN`>2\*gK>E!Sp%
%*oJg[IiL-9G"h>kiHuee4Y%1X=:7d0f=3q]FbeNDYcb!t)ZUU8cU8`%PLAoC>Kum'H""HFk]JNNM7&>'!YqG;;&lrtQPV-%3c(L3
%mIa\NCk+eO'j:V8YBP2^p6r*6H<W#GrI3Vf6A#HWd;L+4%W/cJ72!qC^CJL!l@lW]S@1N(I`jjjD%\2>TCH8U=1itLDKkU7f6VqN
%b\!BSrO%[&TGuo5#$3YJ3Y#h<#2*A`nPe!*F^)2r;Q&,+CGfan-I_TW$LYA6n>P/[!l8?36%[=r;P[k__a&M=+"7o]5:L(4Us(_3
%D1"?PVNikDVuLp+\@tjCqK6thJ8KcGJ]Dag/dK;Nq+m[_r_sJ8)UpK$Na"9?_q?@/Y?3_Kd*G2-J(IR>*<5^GaS.naP7R/rSGsMa
%K2X6Sb\0pjY8m:N94&:!c?[n2Vbl=0\JP3DVGd`p>J$ktOf+79\,7\0[ik/TZY<qHA#=8En["0'Pf6`/dtdVnCl7F()4%u'G3*t/
%HJj[QUVHi1hZb`ZVW!M`o[B0A8lm)+0)LW/),kg1R+hIVE>SA@DYQN"f0?HGV-,VGH/.hp-FV2l#&jK>X8m1_T/-Qhf)$hs+W+:*
%@Pl`;c8<bmO8bW/'YLDK6PYp"Vut&ZCjJ;B_9X;C;b#I.%U8m,]eSQH$#ffAN,\2c:&Ws#lhh_u/h=UFQJ.j;XM"@)1"PUEm.PV+
%2ob1hs,^)!X7Z3*-.XsQC%h#[gXBNqI:kG9:I.nI@b<k_s.;oKs/?8+L]43Ej1I7N2s\BX%j34tDIRK@Fc:"2(!0XK"]#V"\^P:N
%dGfVsOH1e4Be*=ke=4^qdPt;sYHkCK7;nQKeN7WSlslfPRMY@cL7,?lNF&OO-nfEP8sdG%@D=u+SRO&u1T[FTZuAmWB_;acpA&:?
%>uu,!a!UKYn>KFW2[^(lG=<bjBcEJ=>G^3T[6?QhI75W>o.!uK;/j*!oJ+&Zb,0XHaA)9U[O:@s`JcWY#I1%j9qr7',:/';TEd:+
%!i.C_,amHaXP7N\oe)"bE:<?a\!=+r2q%3^Ed.U:$l]qN=:!D1,g:YCgDZSWqdf!1n6,Bd6Z+tPUNR:RaKf&]7]O>.rEic__q+:o
%_KrOOX<4i3m@er83j<j!UUN>Xm`B&=UfH(5?.dih1DppfD1K+P*OZ?[;!MYhKSc7^]iKW%d8JLgn9O=q.cA&?qp6q\$&rqaBA2ng
%HAmF`1Y1EdXo8KY]EbtNMNar*d\q>\?e03H$9M5'FX$BGVgST)_8H*+5mgD<N<]9MLl,NdA*WE^ZrOa)FNej@KG!1o2!e$&"=18$
%m^<H)FVT6WB#_m!*Wg,:G&m/<C"cXO\F=8A9?.j/lCE71_=S>gW+C+70i=k2/>%PqB<sdTZ0q6&oaZ]d#HGUb43=qf6K_aWRVBtF
%IY^Mlf_&?%%so+_`p=e4Gk"#Q.NTP"*XmM4F`H(P\:ln'_E<@Ri1TeDY^*aj;g:$1't2D-H'AL_rr[C7\*7"r).>aKD$nF=/f\8E
%I]LiU(b^51s(l5D*T*/RUZ)c$9,cF1R7uXR_]P_sHpYO5eh<-ZA,!1S:CaG/nEb=^+&I;?FE';&'Q7gbDPM:+">AjVfA;l`2#><`
%D[3WY??V)i*-LgB-0%0L\,a:P5?L.b)#dBHFZQ:tk/qU-*=U\^H=rOMe.pKWq9d-3J4ruR%V@*--$[\I'QS8uDY;H%'je;[c/*Ak
%nP%pO?Zb&;NunjM[B&VK1!sQ^DJ/[JEFcAk+4PeZV1Q*?*0+>A[lP3RI+k!3=moOdM4@F*m44QJ[SbBI(%ikC%"VQqo$(7P[6=tX
%M/o`%!n5iqBM?."`q\:PMt/V\JR.:^fdZoQbG4*(VqL?BWB,+-iE?*/UqQN8.jk7qmj8CkeBZ!7%5d0.1[E.?41e)tVg]J1l\BM6
%doT;>4lA`:o!8Gp0ZS%%`L,13e]S?a"8rb^9=]0P'%S"3qr&?VhSgS3ejE1_l7K.-H?V#,-In.miS6o:4BD.<s2]&+hB5>*qX566
%rXePO\.'cL'JtrG5tUr.[\lQ#VBWKA7`ngm%CZF/X2/?l$<d**I;JO;9'CIYDi`Z)4uR_a:$%!X%I6]o6YB7XrothUh]b_?qVK%j
%MR*4/[[Q!<DNjO*g=2OU]]bA+(VfU&MVq?TR&tX&/(IY5@r)1T$:YrNE_ndW;\0Gag)!9;CRj4Q9O8e\Yl:;L"6n-&UN)S);i*@`
%3Pini4i[=?gV'AamW#GG]FD[fBt?Ij;ARtljTbD_D*+B=';LiV9M1$\O]]#Y.b`e8chO!ba]!'@S71q6H$AA/GF(=VT]R2j^eGi.
%IlaOL+&-:+5j0_GcO6)JqF[;*N-mKUJiJY\X:p_%.+u#O-\9uGS:qQV'BV58A^pY3F%2eH0PTFMUb=@s7EUCUYZe8.PO<o;2`M8)
%dagb.\)eJb8K`oTPq=f&7<@#10oWD@3;TCHm=Q@s@nHJLg"EMe%XTEraORCfa8(c@Xjg5$<#(NACD9^F?Tdd7-WAl?(46"DiafoK
%,El6Qh@Igh;fCl&Cf;;P3f/77lCqbjc/YUR)E#*YM,Ob@L>[7FD/E8?:<q1C"'\--6DGbfXI7Y<dI1@7T_l5\/2fRmmYl!>\3.',
%PN+\C'Kauh^i<)/g:0s,d6&h#>:6F)iT+#KE4aXhKh77bU7n+5;&,:13&n%XhUu?ZbLgEO,&"#+1*t)4rI.U+at(eXNUT>X!qjp7
%GL>VKCGD25"0+f]Ejk?]pYh>o%JBcqa(;_7;)tRUokrB9KI/OFWfS1_>`6h>-ls'1Y?FH#$\<$C/A.T:GkGnArVaU:rY;10";h"X
%Aea@P!cj8Sn"OZ[bO$lHltl3']@lI$me2Y@b>km(em_9h8n/h]hJb18Qn:cF8$11VaaA0cNcA\ugP[CR=Jn5B'c5,o=G]hVjnL,*
%H\ZVG5q*e7*'oX(3OFZYnjZ9SqeZ.u]\QJ48hljMH1k3;hs&m.^>2n,]@e+0:V-I7GFZ`W]DP2I(f&#K>&l'`fW[P!C(JYVP;E`W
%V+1ErEHTfL%a#Sp2S`G`,]^/h[JZ)a)TBY>Z.DJjYs+-KBR($?e%WYk+r"OV.6f&0m0]oR=3S%_R)/^I%4<#%C>WlN0`X"T3RJ&5
%ee@*,KXS[r+]_f*SRZ[!EDhj7@7d6MT<eaB'8m?7)dKmemJ<o_i`*etK.TUdra=aN[rr1]Vs1c:e(X&E)&i7Uf']p-)/Tskg&AY@
%59&Z3T:rZfI"oY2nemm/-m*5YAHmH@BN9Bg(&"-(P0$D1kTBQ1'3Dh%bg'(J%&SgdfNbOecCRr-ff1LZ5GFR1P<#f1a\5;8m4Zmr
%_pS(NnI6qG4;fLNn`qDI=6#:<XF_:)EKZH\^&>c89oGkXL$sB\R+rrCau!t*s'[a)p-bfhRMW7AA:"Rn\oZ32p@#-/?E8S2Ei2.R
%cALNd41Y&$ords;FCFsXC/#duTLQll[9e'=5;Cm[*>P0nT/,$\bAD<$:cbOkD'`Vue\DSer+kfsg"glD/$E"B/_=>ogm3/V/X4l`
%)s=+l-f#`r[2TY>mT&!6io#"P@WO]D[C#X:j3_c6G\Q@>^"p*qAL"@[qn'rj&HoR*Dc$C14aH8I?<dD2I'C'Mn7&U[GiCAC2f$Su
%2u9E%p98qMq0Zgl-"n;ug8g8QeRJ(*a[fc#br=!X>clgbMVi:[X'\&TK=;4!9BX!Z6##XmGWPjQ\oh/V#.Is)^NAnWJo7U/hY,?!
%Cq&Hs3.C]$h>>W/V>0WH??s/Z%r3\.[1@%GKAu]Sp#2Ibg>#0h(qNT9<Vu^Yfk'jO_lL<&=mN_,3\I$7/#VoAOdV?XGH21Xo6"p3
%n\&"W#`'O$5+[/g_,#9i<k"N%2p)NMQeS?hKj.h,icVq[$/MCak2mWKNUZaKjYZb>]Mc<cn'78l55[OX<k7t!<bYi'Gk?%Rf'.4M
%;*Vsjg@OXN4/^T9n.t>0^O?"N;Z#KtZeW+_pte>err$DBkMYc0*5MN\jm>tQh*fF>5HL-]NI0j[X1QQ5nbN(4FrW.FNb,3IfFmdg
%9>[E><4<)c@HQQrXn\1RRS3%j@NCgeG$!iB*k'4^Gjh0Bn7Lk/>%ML2euSJ!Bo"X/X'>%e>E@c9n)O>gbN?D_s6/#=L%eI=%LhT!
%o\^Ljj^%L.HJZW?H;m)?+"_.,IG*EG`.qR/e]%C-h:dka[sdTi_EWEI=B#st`]LcB'rYL%+4XEa:FiX"T2>F-_tD?/c%"blJHWa]
%jrZ`iJ*9rUT<)cqY?"_jRpVb9<8=hp"28F0cu]Alb1i58%upcI\%7X&>(M9Z2p0ZHC:^IJ_;cYa)guFb%]`t!X2g,o^96)RpMQ=m
%UDM6X2QNGkPn$S/_p[E/`bt%fQRDp3pqrS*n58fEqWlIg0C:<Qn7JKhj-dfNFGg#k_mDA9lLD]:;b\_!Xl#b#FDL[eE="?e2s[*S
%r6'-MHFpW:n"7<"Q?HUu<a886G!?$<5'T%om\M#sZ^DgpT6`:n`*>\6h(6mU?I%*$*DuO=_^5*0L=[b?O.rE+g@F4lB'F8]GW@gS
%3Gu.%2r&o=^O`UVe7i9Jm8AD50)*gqD=6i2rQ8i]s*"@^>Bs%^p%o95f&#\tV1`I!:<1XLl-m(;1:ORY\V<cN8[5l"-*D#85[7"n
%^7IP<4o8@<X]:Cj'2L_NC=XlZo/B:*No@lF\J)*ZElb$7cKa0Tk2EGm*"gO,d*[/?h)N$qK"dh[TX'^:n^=Jp.)#G"%J]2HE9#s?
%;4>c`#>]D^ZFgA7;l)Wj7nRnV]\E&HhqHe+j'$=Ph*$NN]mh,XCj1>NqsCiVp#J:"1^SZFZh%R7po/OF3r$?n?#0a)f*T:`^!3Kt
%\D')JH[3,$YH91u?UHbF]CS5(JU@aJ<jQ/6ICapg<.F=ap=:0j=t$M`o'joaNDf]E`h;BU\r9q,oqTKM[nD&Y+29$5;,'D:8lP<c
%$_?+=LUZ!@98A:H+0s]nGXn+dpUY_?/8rhsf3c8K1`OYk]@Gr)CpAu8rY7je2cr;HDYG6#*rZ#qLZhb.8R+DBlpoUnql^MgmVH\E
%?L@][`4u"R1HW.KPoB+O@APot6Bc&#5_^>d^Z&pm9)CO^Uc+Q/pX^3&*XC6dmbKn(Yi_8fqs-3#r=@-eA9i#$r`*+AJ)MTPQ-<#Y
%rjD;&@;?`_%4at\5,+qJb=]a&WIEQ"+5+tW]:/\"V2#$(a+%)`P;oCVC?q;%<%E\oF]0="iQ-4MXB#cj6rQN_dG:&S80;!?%Le<#
%<GXU@@qM]^<NdofG4_RRb0&bgkA/^X'k+-Q8'*YqZP3-s1C5n7:G%kF)\(u],lZ*7N#X3e2i\apG.oFAp;g!/G"-.Mman`bE%OS5
%m`%"=2jtW:U;!IrC=uqHYLLgAnX(pJ4.1(KGo;`LlK67bU,al>AqZ0?i2V(I0$d.L$1u;0bt%Di`K;CCQ4rXUfj5E-29d(!,ILD"
%de$NjQ0[<%,stUlT<6hT6*aX',!^BcT'dJM7a:cSh9DPiaE!o$FC;i\#%:K*?/d&)Z+WB.598C-..X!nIId/TE(M#-E+eLi>(:d0
%^N=F?k@So;k^f-dR#BgmYFhRM#hIDsib@jVjDD)MXe=g+:i0/]k?sF=cX8DDLWoW,.<lq1b0`@+i9igBQHJ1[jZME&H+Ol+%bBt)
%GW1La;6+WgVJ"^0[2UP"!PQI-Y`HP)aUH;'[J'1J*%IFmZa97s<Xms_\SgEg[l^uq\@21,\iJBU<I45uTUYamrI*1F^3QrkZ4Pop
%DU72I1JT)QTP/Q2N*C6Aq:q3q:9(E$lT:N>1(.V6r0>1'V7j#.n#Jt:W/a//5-hJkTc9^84g&bNh(OuB3P6b(T7?dErmdCH8c="[
%>\/%m9,FiRJ5,U910f=`]Q<(^??od%b6#rUQ-Utgl8Mo7WZ,`d><u8Ae$cF3Hsa""2dW2oHWF>ei%,p;WUG]#>q\CTeUhLlU'K7c
%au^XO'm-4Um6p'ib52"0[:bA\*O&\[016OB2t;e:XXDZZkC\E+p>3Ee?9C2dl/-kIfr(@^TmZM:4_ZJc0CG@pj,0oC0n6J+\Me[0
%Ufd1g%c@-WDgu"HQ6;g"lH-pAa!;tWjk!i'afF%&@2[<?)-Y).0Kr2(3>a(#)q7L1Q<i\NRNlQ>?`brjFc`3&SlCr[fko$d5(@mC
%<m*RCcGks'DTp57gAS_1Z<G991gk%P?^T$qFmb"U27+=1W&lVWn(*t"j.j)3<o<O600e+,^NrPto8X'U;f!s12JIR[`bWanhV87+
%kOaKD!R.Xa'9Hk'K8o"0OL3QP^\6YV8djb>mDX:MF-h=`*3d&qoEQo<b**SOk:12s1X%r'bMM:@c`3K&bDLM6<jqWL_r[@LV.UV+
%c#Rc+p;Fib"1reB'L@SiqcHIWT.JVZ*#e#5dH<JQI*hGm2fC=dKGWg<O-WONeMWqrNTpC3GHJ;2l<R%pr]nJQHZlH1qYnL_r1f6I
%T/+KG:Wd=^o=*m)m2`g8\:dQN=?c=XDn&"s2ti?OYI8=2Ip29Ib+d=una7GHf^eX6GPebShDkCY=)fMadSFYdO2pS\C8L)tT^Oh2
%P98l];<b77eZZI*i$BD?MnAlT98H__:'X;NVBeja06.K0)40k?Q:nWtifo^uG&"_N=dCe?7(`6HNBI^^)jMeA4Nb@^c:bn2(<c*f
%l+7;(ph9En.,NpS>K68qhL'QUGiSU\^7Ks,34Z<fol6a<G^8b`PT3u!'ZK4XLF<Rdkg$rB*Z&aJ1o78-rIMHNDI^Y'=R/W7oqN_1
%dmqea&,J>WhctROpt5aYJ+NWPdUD7j6++5[>Zb3VHId7DR$0]pKY>".ru,2+GO#cd]9f@9Z1Gc)d`7++im0dR*id,B[gSg:j#VJe
%a;_kJcZR]W&#A8OI]bk[dT`l%4t?kG@mnYC>E/IA!':nK51'6mXIPg3(;OaU]9sWi?bBZ/>4bS:j>^=jgKo2PZJ8bN3kY>ICYhI$
%Z?CKep-J)pXh4J<:OAo]*c`?^-i`8Q)=T>nM'o0iJ8[S%GN.fWW1fd46i0fh1:PhA82!W^+&n<E$VRU[>d$dE\ad%Ms39C3N%35^
%J(U/rIIaaJD4[X9?.UdI\N,n]>3YH*=O&E_k&9uh(Je6W58tRop/g22`XQ%Ac&ZXIb@2>GPJ"<;E2+93#A;eb#XHj/9?3kV:TeMf
%9t$e"Mp))jPKq"8g8?`/P^Dl-hles[h[QV^[Vd(\H[!3Recskj?d-Wo<]6_Y<,(7&*U37,ZjoKg0-96Z7#*`;:Y/no^F1=r0=]]6
%;'Bj95/d139B##gXfV>u\Y$7Pp%=A's$c2JnuFjr5h:lfkGm9h]e1l,W46h[j8GlRGN2-*[^%(=*%Gg'^!j8gCp'V4mn4['cILb!
%ro)R4DO,(l(;[00Gu0CU03?_j?@?\2YG?!"%SOJI_=PRNYN>8&KJmqO]D:B#D5Gf#0TgXf)G,o)gDeU?rVA]&.Z_'Y91a6k-4nQc
%=c7U8nT;#5r(\nKkWV,9B%Et5*PQoK[^Pbjib@YriffZ#UO1sb9jY]NE.<D-A'&I4SB];_[7]]$$2eSt':u+%pNHL4*.s#^]nO?u
%=?Od)q;lVX=D^<S@sM.(O56n=LJM?i+.YI4K8+hq=?-hGHe$*](D"YqL?EE6r7,N^)ohkbIJuNSbUn&6f>>M)o#J/)[td=@(lH,o
%PL#T[hY,\7Cs8i@jdjD:jJLZQ`U>5J><3V8CKHScDK_2I^\g]XF-^#PpJ/a7%8%Q,BNq-Y*o*ktb39#8iLYY;=6d!@5JN]J>]$QJ
%<_mVHIfmF,>[tGZh-VUVO1*AU945='_J`D_G@.ue`O`S[UA\s3-S;ZfQIPFVR9km):QL(tN?MDpY<Q*t=/E\2n_)<FlLA;lkjW%,
%jfrhk@:*-jf'tP8,b2;"rXE94S<fc>)AhYenC';"V7R7-kk\^::A7PiMt.6Y8+>!,[C[!dXg=015,ae@]=ZVdUZ5.NA%R:m_-HgF
%p(m,mHK3OZP$`%^i8NGSmJ_`!QoFbGO4u@_S$h(aaFm0.qo5mb<B&mkb@ao:Gk<1^085IJGA;1p2H&[@9j"])qJA0T(4\QWJ(q!1
%=!&e>@)@P&$TH@Iis/sm$l5jI>A+a'Q93XJb/^!MD"aI8I1!tlH'`H%C$?TgL0(jlVkJa3DbC=*(WR4gnlK%,2HG!%&[&j-*\BM_
%SY&+jBl#:)j:>$YLPL([0i"e*PQ((2$[SZ\0%$?qH!1$M;u8DaFmKO89L.%n2l[gYf(Yfqo?@XSqlf)n$fpg8%&PMa%9huo=m]_f
%BtAc#:qG@1L`ThY;0Bb&[Veer1_)E^m6=4Y#]/@gf^9=&UVMM9mKQd]7G"pZ!S;\pm$2sX!aW,:H4J[k[fH#0`=8^8F?TS-lCC+c
%0`PhU2RPRTPpr),`VZ]WcgSUt5Mo[l]%Fa)[,P>7eYMo<ZP\6B(Nn<gf-fm\A7I=3B_k&4DL:>R7D(T%\0)RU)N7j?EO0hj[VU!(
%m>eVoT@Z#Q^HHN2pp/H%JTRr_HOm-7ljLEVoOsu_X%3c:SNa"&ekXdW+DHU*4ZCcpQVO3>(62Jm:@fr">Km9S\/n)BI,O\?DX$*<
%)OM6e&%\0H0VW`/]lA>h;^kithQ1V@h2cTh=kW"\>NOeEfo07Oq!^%q+'1?t/8f3N\?i^P!rZQ$<nb=9=,?t2#eRb,PsAAH084=j
%okT!DaTk)Wjn&H&^pFmg8KY3n*]-a[KcbE=0/]5Y6Y\*+o'OT;2kOHC3t(%ej3=K[cWNtSPaL!.G&J[lV2oDJ*?3-M]XR-j^RTFb
%@lI2`gTM.=18ftUDr\a]lZ4Qe0Aj767pd>hY;`'1?d0R)W[=3n[H_<0_jXr(K>DnQTj$;uo[:9IH["XS9@*$S=C6knfQY"62jLO:
%p+Ir.nC-FP@"`[1foec1C['B)lBCTG?^6@fRSb;HJ#o<dN2IX7_lq=[OTtdHo??hi.@63Q>H?9f=kRnW[@1\EB!o05s7H+mE(*Do
%H_d_)lSWMY-'`+a&k4gFk$*a^T"eI_SX8e!Z?g$'lrs[^S<)hlf,JX3n!<:CH=*\1lX0)0ertNVaW.;>)*jthm)`jF\X9U=?MIp0
%X<c?Yjk@mUYB1bh0rW*=\"]4$LKM0P*8^*Q3TR(-H5!kUO8_f>e"b>Q4D<FcGOV^lIs(5\Lq(e:^K^o5KB]jL]=2dX#3IA;Wg3GN
%E=5Rre*La!U,[GT432:#)+4jNf2`rZ05L=Z>8rN7MZ=OL.d3YQh'*-G_OH\7[o3ItV:Oq6F#sOugt@/UrYDT.El.dPmGjDaH8UZ)
%d6iE:FhN1Xff0!sXRZQqkEAshQ8JAWmgJK>Q$9bZc1<TD\#N6HlaPJ1Sr(q(rakJ'[FY<K])(CHK4h0qVm*7%dPp@IB@"iMBL'lm
%hfJ>\i?D\teU_!(;JjtF>W1U2B":sW]BaL6C3MU[0'5g9DOgRR/\11KDnfNI=uZ.U_]+jG!j)%=61)MeLB4@0fBB?=XZUECf8"RZ
%<cQ=_&.F0IlWSH+p3(/b#>XI8gkX4bjo9\gnclGRG#_Nl/Y=hD;#dr2HeB:F00645me5nP971gL[Q9sPQ$M0N([S1rf=68aGBhg[
%ZjQJTX"ZYQ(%cp0_S?lXq!GH=/I^haGeI=smd@.E9W+8N?)S;'O"Lad'Z)?"U'=!8`IP\G+TA-[=h*\2VnHuAeSO8Q'H)SrUu(MT
%g0OQX^de1)!$,8Hh%i])Y_S#QX[65tV6(OpFo(M:/AkK&T_n=_05GO[3(8G.cu!ZmF<*.%=nc"d'J=t%hQ\<(4XaQYcapgI]#?1s
%(g.@/rre].rUpCf[[l3&TCU&&QuXhaRKj25c:jgkpkfrdfQ=<Gdb:.[_/>aj'q3s)s6O^3Y4&kR<8F3f-C+PP[eb%4iFmYn8RK<P
%+?fGtg"8]+e+hkl#irGFlONZOeW[;mbpTSNeI9qIp=naJE[J0$GO/rhA"P'S:VpAaM<(<\AnXp3%,:3Qr"XE#nmd'tRW^J0e&.kR
%h&ghIP*;IjYqq73h-RSB3:6Ic>PN4W]j^K-D9H'ej5sZC%,pZ>.*YfJfLl@5Sa'BW%7l%as/jm;.o3cQi0G*(Q'WEfhGJ^2;u`V(
%(X2Q`4Igd^il^`"@#_on0PS6klO.%"o,W#W,abRoMRt7P=<3@6f>,.E'W\MhV5)nNR:6>`[Fg0&qYn!/<*+H1dW[P8g[X=;i_&Vr
%$:eEt?X9mTVV0\efDh3l=ff\1T'f`r=&,@QCu;"(T(;-2,9D2=q&6(>YNU5N3fc(E4hcI,'d"o`JqO:+$s)"%?1(-]\(:^DBStsF
%R>Bc1+.TOYGEZm3.sde\:Yf2S-2OK6J_m98f!s7`cJ-D,M&1X3$CVj"lXYoSl5*FN[,%0q>;*V?3e]Li+H`r%@I*FTo),FjDg,eK
%U-Juk[>nS%>JJFobf=UkdoOWDO!\SHh""o]q;G9^GR-u-a:pDD;FJ<k:hJu9Y8/kC('e0sB=N,&^,Qt\]1l@?l3_j7PYAcV]Zr?8
%36/S/RPY@0m`\"d1qd:f?X3(Uo`-7!WFDDgf/7iXq7=-B?$iVuWr#E]gW%MQ=KJ(0YR#^-EW>>-dWN/kn'[ZYk0DgapT/nKf(."1
%ELaOZFufSm:$hEfC6sFTNt1?E\@mNUjPm#K?e@``b0^%I5GCFCi7lt[&/=Wmju?B@nHpF+GE20hhMqDdSZ\D<0V$-G<:XM!$Bk`)
%5D`21$T(?A'/Y/HMjT@+[FGs7KpV0-Q6;`#BeApBVBLuudkCak$75W%led0ecW;)iklQ@2_#a<Ar,!C%q?!nY$EupA$h$9(L#t&X
%a8KBE'74GE*jn'/jZfI7Gt7i"iIA+`rPAL+oU#TjqW0pq3LB%2]tuSulumn4J)eH!Bp,EmjWbqFbW^e'VnNFHp&)7D+5:i^Ge140
%EBi)^4nn",<IC3=&B-?si\Y+B>V;?]+<LEnb_:I.K.j1Tf?I\%',BZt(LFj3_dXi`"hdbcIH_-854X+Ne*QDjOnoB>(<$"+3fZp*
%;=l-Xb(:]N73Woq,m2.U+lg'Tr2>tiOMD#a.E4QqRIEX"Oe-NR#(.hn@N5LZ."i,<#f0=tM!e,gBS!JQUK1m'"MQCYktsh;6V!MX
%k(ksp7`O(W*"mfN`Z@guJr#>Y9SFCs""$Hj/d6N_^h+Yk7u.9j&PRH-3sa7XrF24MJiA==:AiTbZG5_^e7TO6_.SU3E/6m^T1+q9
%B-?J,6^DTO#WJ\O`^f%nM+X0]q(a?f6(2CRJ,qObHlt<=UX\fL-5T'A";qg@@JhnAP2ZR,+I3$qjWKR,%&j!A:hedl*h<Qj_FuaU
%]KnD17[aZK#`DU!5t1to:iXbkr*nZ>N8ZtE4tNBU,6BRM@cTrYD\a28&L-t]@gE0O^,\T9\#qqB!fehdbRn_hNJqeW#Y:?trCH]$
%&R[lK2[Q8eRJ;fOdSGcd6C\Vg:dR]K_O?=gQiq.9),q+*(rCflD[_on/aLf@!$f]EF2T"s,@dOKO9+jj:Z@<=0VIEq%&.2RU<rF2
%"qkNK8Y$Lq)0eTs^J%d$)&pj5,58]Z#QnhU3CJV2Y!467N\&f+&oLS.a#@$%?s+5.=Crho_)0aF,a9nJ!0gIt"kcTmJC\/!0OOlC
%#f;[?!Y"(U_17te%$fs*ld;upP%>P7\db8/i+NILcnC,><rY7Ki`?].mcpiK2+Ib9o@/i]%-%HJNo$7A1P,J08qd02fYE$+>7QeS
%W9]L!hN;B==h5'>r8>T#4Tkp#,XION3s05HKh*Uo99,nn-n.@jZcYLcSQ7!bP7Uiq75'NX.L0t;?pMslL.ZNPp#oN(#W'^FnHROb
%(hkJ:&>grLAVU3nW;%-_'(@6,h'("UC<Zo)$t?P!R:\`mpdU(pmuAP"W7g;E):#hmQiK+O>Vf$_5rCF3Yp'2F,&BMQS.Pc+e9m19
%e<m:_R-nFH6s8UnJLXDW0B(0koSd:?b!@"7(f9g`U!gSb4ZX0_KUHG4G_9aAN&28H#TIP)Zc\m@($D;F`XmsfC_Xa('7)r6!2<;W
%IE=;J`N/f(B\`':*=SmWjq&EU])J&s(nt7[9=.-P+59oka.Ofq+j"]\_)02A,Vrke4U+%aUe-=61$l+F=Qun%E6qBYVYD%I0nKE`
%^DJHF;qI`']VEV+Z?.$Jq8(Gm^pFe%mMLoK%]6`N7p[nn`M3/G_i2Wua=;Yc7qOukc$[D\6KET>Cg]NQ/VhDdeFgl7m`;]Y/DUM/
%IW2&uc\VWo!U*n@GoFRM"Gc'._btI!P-bdQCEf!_,JZ>H5f@0bXCu<]#YHF;Gn<CQ(aeac$lLArdJ]b6F25!s$aBIY.ZpHV#;3aX
%d6_eM1gLmZ.+a8EL.?<JT\Yk]Cp9O(:ZASr:k1\1(1RE_P=@Op.9I\UBdZ*C'@]AbJn+krdl:gP(sK;hG:\Z06$/0FW<Sa*'S%u9
%E2\;U!;)TC:]oW38![k".5uK@#<5`hL]hfQm1bNZ*3/f]JCMqA-"F*6@;'2Y1Ed<,"MS*1nqOqSE->->Ne&0[3)oLqTsHk)rGkbS
%"M0>((^Ag[GkI1aM?[4PA0lgp2'6gm'/.7>!W7be,V'P4+Q;K/c*[)Dn5sK:jS6ZdL7\mFk.0g.#mMX"ZuRCqW()P'rcfOdj\4D7
%P78#Pbk-Hk&U8]^K=M25)0sM&2S`B!eWk0R+,/YK76X5^5`S>SWgW+u=dH[K\SO5,>sgLYK5PeDqQ'Z\8u;$`ZGE6'Rm(dP&/h(W
%J8hf*<]L![/6^s&1C^/m,(n-+*1IqpY`n%o4D0('d9s>LAo7SafB>cG*ub3;,S%/D_17u<&rFj=JHYoe78[s_OKjK+4<m*(GRHoO
%YVD7"%u4mh3cp\DY$WdtQ9NpGNPQ_V)6,k`8APE8A6(#o:br]B'Deci["KN!l/hUM#u#s\NjjY4NT_3q%-73$TSAR=Rq=SEeB%h<
%c8IH\Ya@o"3W9]n8PGl67`(jfMZFG08\U;iT\I6sP$+Ia@-`Pu#J;36er,]AULPFe*tHhKFQb9^?,'Vm*.b79)hpX;3aV2XH>)6u
%"bT0"0*<1\+S\D=!'e?9cO*.'9&/id9KUQmON$?IN_^'uprUlsT"A="A2*""OH%&K)Dfn57h%.d?5hub&e6e=+d*4V?cI[#[@`Ns
%mUQE#2sbTLLPE&57rat`a$@l$A5LNELX*3\ougpa&a1.=@2O*]j4-o&#;%-BgrErX6T$fRbM_FVHm=J1fY^%DgIOZp^^C7I91#:F
%$^&HK+HB/+B\DWhBqDXpSS0_2Cbn-QK58\%`udTtG+emWP7.ZFS;`Q^,ihF+"<&o]J%u70#]e%'/$J07gm):Z`u>4>%Z&*c4:pe?
%bCcS5[;s2)<$Po&^8M:kF<"qIJH:bji'lT!"e>*;YTSsX-n>Z[E%?f*&:6;j@jHt`*+Ki83[,?/jtc8P#m2Et2DYGSR.B:-`@lA=
%3uNYbU4[ibKnAjr5-kM@me\L#jT:/PP_i8KL,SnlcnUXM2\W'Q;,[&&!+XZs7>ZCVe#`X^!gTp^)hl*d3net[;M&s(iq'87=f<mK
%JKM+8V2S7L^cHZ/6OV$>/6P=RN+D,l8GAU1>09AML$(lUCah_*`rd'u[/Cn>-?/2fZ=+SlUZ7mX]B%tfTphT+88,R%Jr*_p>gUkU
%[#mq8Ne&1F(fW;U@5D/$h(nM.o\"t:'F*=UB_,Y+/fl"4q<;@CQKp03aMl'9+BcUtb)o!15`SPYWqjc`)6U;pR<UCeD*p2iK5PeD
%;rX6N4?-=3dfg:7f3P&3Mh_[2\qW+Xl-M/H@haQ1L,*S"l`=;;*fN;;d#GnM)]`cZ`6#uN6T%)64OJ3*`>uL6\G2k8BS2Z^*<S;[
%EN&"I6YEpSqIS[&#]pO30J'etnP5*iEp6ssbtSjXZlF9U81kf5=QpaXLo*PZ5`SDEWgUu5)32%@R:o^fCbn-QK5+qa\aUu5$3o!b
%FKn<YCDW2q6K)C?XJ#r>3ckekR)>VdM[Z082=$S8"XDAPFJCPB7Ktq#*m/&G6T#rki6cT""Xpo`\3Qp,BVV+.*<S;K0rX4\_e/\g
%\n,?ekd(`S-k*Q3dH3fk>W+Q@F48)O/^I_8Opd&'CV#6Yq!$-[OCJrZC3D@SL?GXF-6.t0f?auETGnp?PZT@N%h@.fF?rLAFVh^O
%io,KZXJ(K(3ckek(r`/:Ta[FL3pW)g#G]U'FJCPB7RrpYRr\&W:sDcLV6i@/YtQbi0';C:g;'XS`^#PU*3-Qkcl&F]I[P.Wnm!t0
%"H.),XHV\C>V[-mF4/&Z/\>k1PDb,&J@]n^9'VKmOCJiSC.9spL>/k4-5DP#gWU/CTGe\[/u6W9JcR_>?2W,kg;Q(_8@WmmCZo!U
%1$BIq0o&+R(E#9OCXt-P#tCS)kXK!bN=>MA1"HnPg^*NbO0PF:MZe-;@[SBUFWuN6bsjfIKZ@1Hcj!8t-3hlrnJH$Y?p\ht],5=>
%Ssb\Q7g!0S<XWu5CIBDbbJdRN$%*Gk.aKn90^(1qgBKH$Y\2HoM@Fi7#`l5oTFIJr<",LJj>#4^b$p/o@AnSK0F`;g)T&8NY*gM@
%UDb05PV=U(!=mY]F&>WS?Pi.kEo>rOY+^iH3ckekGf-5DKaaM\1[CB!"!c/NAA^+b7`Uu/ZZ;bt:sDTKagCuS!Db<`/hY<#H'Xp8
%RfbZ7EN&"I8#Md#\ok<paYW>:+:P^+d8#P*Eq/'abtf.sZs7ee:G*\@2!Q"5!3/E,5`SPYWqjc`)6U;pR<UCeD*p2iK5PeDq+*"P
%%h@+uFjWn+Fr0i4o&6=<XJ%HZ2:rneZ&&K=4#nq<FPa!\%SiR/aMqW7N=L,PYa#S$");H%@&E%q$[Qj@E7%P7d)Jm&2?n1Qi_[lm
%L<ab.oufb@d:_4E0c4FG6d5d=\QCPYk+diI>%YCV-^P/Z*d-jd%+Scr+NGQ6eVn%k1q.b6:+SAM[\4^o5rLLJ.IgFk'ca4kl,&jS
%h(J-;jh_0l>sfQ#Fm'[`Z%tb).iCCcDq6S*$V$e+aG+-MNK,q>Drn:@TphN)UhQ67,G/4!>_&'Ho.2sT2@"8Mi_[lqN_VC$FmF^5
%PGb+%&/s;jd7t"YEq/'a@k68h-8R&Ek`^p[MikT*2Nm@P0bCZS)-$3kTefqdrA*nN"PSTH(^Ag[Gk3([/fl"4)=#)-QL-=&alUEo
%8M/H3;Csd2EGT)L_bPqZ1S&aTUk;TY)nIb;FCPM:3U4b@K)mhc?$+Qk,SU@*GU,1Fb$+%KW^GkjN]dea>S;h8qBWXB-5)7igWC+H
%:lUDg(Nnj1^jsFiY^oO3DqG&'`\0&d;C=@\R-K?_JK//Ze@6h8Rq=JFe]@n@cSi.?YfQB&]jBVS(>o2s;4%g*`W?jd#@=,4CrQN7
%r$2SO"Or#YJQLIM``!m=#1EH^!jAkj+C3p[F*%JbocW"m#%]!^Xs"a=5rUj]I-<H]J@1tBZ_:GS%Z@<Iq5lQ\)%5p^i`NDrW!-a!
%YH4FSW%rH)V#/Di?BOtg,$Etap&`rk=LSL!M7gESC_RfBk\-js?Fb<"W90ucCg+!R#UgK"(FjP:D*6@B@j&f=%b:L<kVUn:^J6mN
%JYjS0L-[aZhL+OPM[,#PI_*UtjgkhNEq++R;V!P+$oR5ca>&Q>M4k?IiB$:jM$Kg%2IrT0fLA@m-1K'rK0qL\?!u-%h*jT>GdpSL
%CM;b-%NPX32K>\X-V()FcMMbD_$Mq-fe<iGdIH?dY?X1L<:eR-2D*Nd#aC7&Mj:l.2PTK`0p#lZLCurl2T'[g/JAXaT53X[@Bb`M
%G&lN+9*YQ6DOSqLjg^5!Em\j";V0:8;]RUtE\-3HbtF'lF.E!j7)P."R^j"I>U'?qKjM;h0VIR&MelR']+?A,$5Y4(%8B7@Tjo4c
%*Y'JS12M]sXBR"cN'?"C%729Y)=!I%/!gPPeU2Ii:!7Ai!TdeL6D^iYNMegZ%-1O/Tph5dS`Vm"f80YYcno:N0^)!HRh*2Qg#,]O
%9c)Ki4EhrF/fZKEl5JB4W^FflN_pcgr++FgcWR_N3#I(HTc8^*2EKP@JQFHF*3/i!!h5MA/cs27_hC]c6PE7<kSVCGM*j-b3BGE-
%hQIS':7u=BL1/GgN]/&+jl4+MR\(q8BmK,5TNjH]XOK,7&QOUFJK1.=Ph=*^)4n0PR;c9n>Ve;?K55"nP68!n1)Ni/d`+0s]57h<
%MhMP(\op!'lB!`^@h4?05&tb6gT4U,'oY3&b`0Er)B!3@oZAJ3!AtBnACGSQKg<1>\6(1qkZ]APF:@6__kG"<L<]4VFj!1)d:XE0
%6"jdR6QL)oJmS/V"`5g3'HloH@E>M&`7[10!h@8(,pT(Nhdj11ZRSEKA?*pW*2YDaS1RrSBeWO[%$@E!8T#O%GQ=Y6f+BuT+C/d"
%hQ>2E."i);n6.,0;+.L;N=='s81ISJIq<ap/BlTZd5YqS$I]M=<FL]gN=;qd:do7]'02N'j0UM(G%p*fV=*KOD(J1^m^M>HbP\dK
%QM56(-5"k(Z,sTQKM>*sc.=f%RV^7HLpG7LjQ'I2c(WU-l4WL.b\+4<21&SgVI?,jd<#qcU$7(SUXEPU$$NaASqq%$ZHXr^-4MUm
%]SYFh30+heHp':)m^s[O`EP72""2>aGMH^0m'+UKN:ZN-QkP(aQfr*;:80&d\;9r8Abhm:">%b8mWr?5F`6D,iu2Yb3QKK#deSS,
%_V@H_e:*oRA?C14*Ol#"<OS;A>hf8R_9I#kB_"]W,R1@fa#m'C_.-k8__UI)YhKos`Y<7;MM3lhRZ%F(r"k9J6$.ScQ6u5'=8+=1
%\h1sFi*:g3_jLdL&*e8N+%*$]%2cU0m;BhG7gAL?O9P-8%>no<s5(<;MTF#F^*;r[(4kdK<CQ;G4.hWI.pd#?XIZ\"mqHMN8S7.D
%:3dg<R8#b+[t\4DpNUkF)1;k<]A7#;LsWksQcp<4r4pgjI9&8fEI#ZBic]hAQ4CaGpUH`(`bM4@P)baM>0$(X`QKiG;]_9hb^&Q6
%a-q;piMU>g3/u]4i255F*?UNZ]#Rt8h?Cs#jZL&$?VYYYl)`*'[0=43o0pC-HgQNfKDWK#(uF'6GTS#tAF;$h;/IV?'?XYKmAt>H
%MW<3,4W!h[n]!KK>,@^'X*M,897FU$m>S)iqmgKMhV.9t5DPf=bK.@WDQ9i$nNbcCIU#n@c#J,7c@amCjYV1Dc6D(D>Ks3/?h<Tq
%fB0S(\0&A<iQ]&rp[Q'gk2%'oe^j?eT^5*3c78SV3*n2gK@tI227<hC,$dT@bc<1"o';dshRGVU+2#VTc+OV[F.pF`7ddBu&T&u+
%"3Os=j/@!:N8r<+*o)2tVmVG)(?hXL8m]d<H=,RC2TG"=IdW02)g`Ifj4Q`\h@t`YbBP"'p/2u.Q$Z;CO-]CmG'ho%*QkcN2q=5a
%2!/S%IIu5-=7=FeHW].Wb<S;4RCBfL]dI]t/`Z@bfo(:6<:4%3r)q<tg[!rXGEL/Ph,IV"X#XPSlatcO\2q,A]S>Ci]oMjW_*-r;
%)&Lh(o=1FZ-/WSipWbbd/D"rOD]s%8;m'-3WOA6sCVJlmX4Pq4HKWe)@+O$ZA,RBehTd>>k.%BC+`?2$98ms?Q$[QlDjL"Qp3A[C
%?)1-Q]Vr9-=*)+<f6=FCEHQ4bGR_Q[HQDS8K6,8M3A.>6kOCahMgjG\mbMm\=Z1Ca]m+%BE%TL,oYipeq3#+B]_9@q\b"_sQSnNZ
%:d9`)h/260)Ageeo!k>44[b;[:Kkh_B=XThT9n$VTq'*4LouK&[^I5d?bA;8eZ\r$l+AtJ1<.A@CWsI2%ajs)m<WepN:!D2Ul2`9
%bLn`,iFVJZ6b/NEVRego)tQM45'lUNX*<aC4fmJla+=5(p%2%\X[0Mb^\=7a9Z,*?A$gCBphQg:8[n$#D7"s!m@!e4Ob/!9\k/LL
%_Y;I[&V.,=MHo(^]Ztl"CWlI8di'P!!^Ok:?X/hK-#Ci&TY)q'.bNli%hVE,d+.('ZC8UBfAEkoe\t),5$hDrr%.?>>&$d*ke-U;
%*WCVGA`,,-Nf0rb2+PB5gE#aIWmdB%E)Qp)=WXV[R2OVQO4NjL:@:6`m9q^]>SPek'hBM*9.7`>K`&Rup1]MC]B>?D#N&_2.'7e8
%R3:aa9[U,6Z'g+K/i-XNeGQFOC3]M*AtdVV<:a=5,?eI;>AMppS&RREoiAP6)HoE_L=/T*r!igs^LN>S@JsCdO>*]C*_r6OFg$G%
%hJ+t.`O?LtbtH<O'sW7hG@V7bJB@(J>5Eo>_=rbRi4)Vt,,oVikIEA$?pm[Pi5NiM>*:-M=j,)<E:SQ$iWu[2\&<BS%<r8NJ^!Mc
%3(F$6Ytbb`,@Xd8CMR#Sr>8(M;:g'p!j`X\9E-Wj0"&'@`Jk+PXcSrrC,MU6nViCtVI94U.EUMe0RTGB^p1IjXj7XRPmTTAV!hO6
%2bYcp_8_./M4GWli9A`PWWT=DlUBa`GVKGsk()&FR_flmoSdIO9PM(ulhMU4?so7&6];d2p,rX&,K*[&UOSoREas'7hb)8HKI^);
%UuZZ>gP`[R2;!^cIu='-lKk5UZB;6UP[@eIl&Btn\rdVdDhW<pAq'rQ,O%(UU&iYgmA[=%n(ZQ^eh,N[R#5l(m@lbSpkq'1ij=VP
%J[RILMbC)SAM#64pU+*jBRt?=[4`]Jo>Ld/P/pCOLk6"mP7^H;>MD,5jR[&#d0m<L5g_0G+b85,HGNeq^l!CNXPJq3(Y]Q2"0n!=
%U+raZ5*H5F<83:MnT_A[(#)2SU4uO"n$[?TjpicUFmW!l>h``t"-9RZ_./G$-LGsA<omT>MfDd(=P!J7\7FW,'Wq=eB,%3Is"]nL
%1a)1N[rndn4S^2H`KG/]ifGjLmLaO.Q'ff[(IJ`Y67*p)'lgUf/jA%Zl\mif`Kh]\3Rlr:R[f8EE&t3lae$imDF3j\g>L_nA1kVp
%hLPOhZ1RQT!.'$tpc!2`2]]7a36-gl\2E/_>bq=/DWeLY]V.drhL_qCT_WQl'_Chb.BGEV3:`f.e'E12"a5@^%R$+[q?3&B02<Ho
%mAHR2kq'MJIrXBq*e[o'XIE,dR&qk^Lpdd<a+oZ!/#GcThfj(j[k`>YJC,mb(BR0npG9])o^N`+i8$hbs'_Ijp"R7X^]*hf/,iYU
%T6/3m`G^8'gHYVrhu;a[J+ZV;ptL;nf>%=&J,.pXIk9CHU#q<!RMh#j(DMu<CL=r4'YfA`<,6)cR2#2K[&`A'>IAfJ!ljRg1RM*j
%!d1'\`,oN_J=E)FS*5(>gA/DV+tgpTIC,JjS"#luJV`ba)K=8EBjM];7qA[*_c$a&$Bf?/6Ld!s[#.AIUdVq\41G:?:i`;<auS.5
%prW9]G"66eSF310[Ft3@M-Z%>/;k/*IL./:]dLjjhh;Hum">>A;p1kcSHMiV#flJ1V)?e#n%jcbBS"qi5j@M&gL=$>fl"X[q''e>
%f[\FsaREpH&QZ)X7kcY9c6>,9\dWdk6L15ORtQ!5j\oEYQuQhP*RCQc%,O5mdVToH\;FX*(IT':GB*1h^&.30%\kF[Y,U`1L(/CS
%c$LJ!#S%<E1$.1sm)@>bn[+@u\t#'[hroR#fOL!bH)G.^_u1(t3G*WC[Hia%-]VF5`u#ak139ea@p"=`1!3tDRaFqW60#BfWkCgF
%:r].N>pDb##g'8BP$X'8]Ve?;)8QPWD28`7-k6A^B8oXTM\(0bY,6t=Lgfi$[1R%_(h/RL4KioV1%B=.h^edf\$[//RYdL>;Th,0
%K9R:BO(W0dCV_G(_P"eo6YflVT)&X.^G(Sa)E8^!aMi_dY.Z[X1jLmT5eF:=]6,2h?>`EX(e*#[32c&Ki6$P)kK@$DVJ&c2ZE@aJ
%>fnAmXKB#=nDn1^Jp?kK%qX:D1e(WMF[MGF(?L8-m"i<jYBfAZ'Y>1A&.Q[$NKdm2TOl'"./2eH#\Nk\%P(5(AD*(/$48deZh:Ig
%Kfk8/W=cM=H6[!'d0cFrOlupZ`V9M\fX`3$Z%0'',@?%V,n8]P<57#14r>W"k"suE8b7YY8>?-G?;a`*m-V;@Ts2o'MTZE4&&,^K
%K!.(@:idC(@fVEG;3tNk>d&<M$H*Z-7l0Bd9flh:5a62;@Y0;C5'iP4#-%VA,&@TLKS<1]V5.Tp7XuWuBMP*nk)t9gTV_FC6Cl&s
%`DRmB-JfO<k#/?6-fK&nR`gsJQKPC!dNCsja()&tF7&4194=@_0hRU$+n17R[q83.;LW7g1dr"K?[Sj['JZ#)4^j#Vhguh&B-S4g
%J.T&$k:X0XH&jldXCQMIL\$IqEp$qd\&!>4SOm1Lck(,Q_HW,OOY6_A@Le`eGCW74e3E074j?E<kV96#M*o*jXhGN_LdR$ar\/1-
%Ntjje`&(=P06G=W7uk`8bqDh#0+Mc48\ogeQeY-bl3]M%R\)40D7OU`:m@$,H4"rO5Br"/j=UBQQsSP\VC:\l9EER$[CbYg%lWam
%X4["B),g7Us%A^i2!,Z!e3M!3-5/h'%\Q?bP?K4T/^O^$<oB!3Q1MW]k#&sYcHdHHSJLh;I[[,r`AH[pLX?RR;Rr=R%(psAUF19c
%i]XNs<IH`]^#I`Ue3?jb#8R/CSV,2s07%LAp*,s8ZW8V*\b=`"Pd9f<YSBVL3NBJ]9@A_ag*D]`^).C7_S+.5!oP3Z''h)LR$XL2
%[Ip4>0-pT.:fp85V]UUH0)QB\@=:mKbBg+](*[V&ChE>QDrH^Zq^OsHianL.Ft[^8g@jodN'/U+.d,/2N-.64gE+3sQ@rWKlVU<0
%BIp9,@]@;glQjb]`W$b?['ucUZuud2"cP:+Ar;$61ftl5gsNoo([(gaK@%5jH.$"Bi^_*@lD;JGq?YN$klfp.fh5JM5S/a]fVJfD
%*)VDq6=EG9Htor?;(Le8d0]h@M=6>\?LQiFJ07Q('Y`'(\<pnm(6_#t<HFX'%83-&8;3>cd7WndSHL$,lr5I:lV!I^+D%Fdm8o8X
%in]]!fVMaV-tG6\.&^);Q]c1h\k"$!m2H14Ne&==H?Yo*phb'#o>*uF)=eGj!V.L)G27_8/U0FtA&CJ88^qYi`O4(Y,.'P#BN>ZI
%qfNVT/:2a(6*D/+9u&7+#6uV-C,bp[]J\<:'R:Zb"CX*)^in3.W#cXWTpEb+*Pt?YQYR=[TiM2*SQin/^B$2P'ljK2:>U>/opU6h
%5<ql_S!la!2IR?$EqadiF"uToGfhiOVZqJZ)aN-6R\U56kEX6iHu6IpZF">!WIC6++1cid-snUl:V+_>B<;F6i9)qMOXCotWQD<h
%Fc]O2eoSp/6XIBCJF^(4WD,(+a-t4G_-u^B[BekbjHM,0]cJ+c$,GLeU^2*,N0BMr?nWp=:RbEN'F+c=EuV&</S\[?O_^HY=:T-@
%Xtr-Qe$^'kP[ZED].jjZ`g@E)ZRQ'0G\fo;&9\8c'C:d&rhL,W7>7BkXW5]B&tHRkp.POr&0[VS4.$`e<._G7O@WN]:jeal'cU'd
%r(p'Z`0H`!8aJ2qO[b*[n0cK`rQ<_)J_BCLXn/*8@FhsC)_R_if-TU48O44bfcQ&LO$)?mjJOFFdn[,S<,oRY\PS^CG6.V@J[8`F
%(HX0!L_-hYNRpd%q25@U,uQ'K((2Re-SAe]Y<;+ZTGP*n!>Z:e7MjK6ZJW`/f_&pT*QYcV='4"qgP9N#\7[K^+L7gVGgZG$WMp&'
%[khgB`Jd$S@DIN3QT@<F[_@eV<&\b'L*eWfVH=OAUV<(Jb^YN+A"TunY[9(A'GQa:YY27,.SNLXC.q;%ZlBGj2?!"AS,u&/IN&;O
%D@V5:#,.^#]Rr)(S?s=U]W&aE16++DI;LIhoU&E[,lTc?/_m><\s<P#K=5KlonhD1)IOCSi!/MWkm3jMg_El:b!k2*qT])BXh1\C
%\Ue,lM265;9bi9+Jh/s@WTWq-+AOCQ>fr@:i8^Q'i[OL6nqp$hX<T:7Tmn`@$CZ56OrLOk_WncTRX7$E)Oe;&-%[<O"lP@''=f//
%EOspBMp3!u%"!%f6nmlXWQik[KtLV_rbgIdL$RRDhk^5a-*e$8"V-\S2q/fNHGk>ElS;\_`q4J++KS"gN"kerg[D"eI>"L.r5Q6D
%Bhf#eGC??mYPn;=I^@=Jk<p!_?E^'+e;b;?Fh,*KK0LV7oJA!/#+KeoOTau^2DD1B_t02\3_\AFOC]nE3bH`Kh5_AX=+o4ViEAf:
%#FYt06K8RL;1YAoPjpf(ArqsO8cn[$_eCLB2GfKlTMjj.o^6_J'.B-gs-BQ4N5!b[%\P+%Ure6+5R6@P@,H^fL+Uih8QgkpH;Rl\
%Z#c%(&S4^"6(>'Zr&--Dn^tWn14B@6;s(=ikbRK]"nh.:EDAjl]Z%/ojd3-FXU.fp9gs!#E."%!'6.NSp=_]N0[iGlAO0)1?-<Kk
%FSOJ'#^AiShuT)QcO?e(gcIu'L-=81+WmUsWA5gOW<uJKkFdq@/'6)CQY7lD#1Km(8qLY(Nrr=A;?U)nTT]F4rhe3H'"-%WJpk/0
%fEC0d"MTn3MVnR4PT[pUj]pVf%Z&\<PDpaeG,GaU9kQbL$FS\@''7qI4`E*2X^OE,4=-WHE.sLF(s7n'1t.=*'k"K)e<3^C8<i`A
%U8`/>G2Yb['8D>s_FUMbjeN1XKFj6jX;F;SD1W\$d.&t8[2R1g.?8Ds<iEqC@DA>n@9R*V4dnnZ;Q]^_n(90TU2Fkt97>msAfpfe
%[CYD[`I5H6TO#J]l$Pju9Pm"Jr%_QP*PAsnQ)tc<&@.<=7Z3htFTBoDXV%%Q!cDP)8:m:97)]GjrB1Tm+L8g<i%R+SZ-A9Bn->;"
%3k@a8_4P&N@@0qb'B#,%$im!.JTp';a[2\_f*[]K7`f!O??l(W"l"oC!Rin)#3T_%Kf$m/ZHCPW<EhLZmAp^EWApm0%a527auu1a
%"u.dKCo7N%!=ip@_E#JC%3nB$<l[%0qabi#5@nSm@)Jfq.oI_EOi\<a30L]0a`MS,^-(a#"C'*[5:MJ!IlOaX,9?AuWTM\gBc>?M
%6m12!fB!2b>it`Qf`b?Er<hXT23M2*Md8R^;2/B(IO,StO_!'.^'I_l0CCKj[Pcsi2mI&>Sha7:g]D'TVP5IMJVG+KPNh!^1Kdqu
%6(P9O$HBV@f.F's'iKlO=S;nZS`H(m*0RG'a"<2PIlI*"@+A*,!@,j;&gMu$@IK@O=^2r?ftEr(%Fuut_(t2;Lt*Ok:/D'-RLJd3
%Ac-q#T`)1SJKkY3kWl$,n7h4fKTeVH6W0qZP`b0o64"%*+1*1FOuSAVK=('[.r[i[,"g2@3*#C!&o>C>d2]9T'Rpe'1LjIUCn?`K
%c_B%EeTYM(laY8SMEdZ)aWhVnDpkblRsX2-NYk&M6F%jR+?FX,X>!-6Xr*j8*EuTM%dj]hERdF!bh!7XO]_kj4K,&GA5%)`>bi!W
%RD:J<TfRT-OX<"D;d3E6U0">!Q6.;:WMB>'c>-.ahck3Y1FJUMGRlA9etYNd>W.Z^F-(521I8;[H;=_tCEi2uZB)Gso]":"e,prG
%9c?>-G[%B?(:!OTU7*]W5QB2=c,]^[n&(?>REurT2]Ed5f!6t&bC'DO9J=mX0@-Kn=fe59a.^DBi#$2Sqac;R08e7;4p$h8\Mn1p
%n,,Y=q\Hk2Gjdr$@R@^R3k,0tH%ZVV](08&l9q27:jCsN+?on++f%3E#9X'AKuY1*K"Sdm;fAYXE=3j^G"KMU+%HO!*bi-b&o'[o
%b@3t2_e?4Wo4:t8d#pW0^_q_dFhf-+-AVQ!6;WaaK(GXVn<R>Ri=_Z5/?=&*AV8YFhO7"GHng"%#sq*;EskUkaj$WN5:V'16D?$`
%,R73+``3D6Z((>)AFQV7_(<+tPTC(i`H6di("AU=Ci[UlN)/Mqp5l7?`t@I]p!XF/4o1=N-`&&<6?CW8:lAlp^*\Usi:K_RG49gO
%CDb8B0rZL@Tb\GU;266d'IHY.g^!&M</6]$H*tL374/Mt'#B$ijePEn".L&I+n(9l-$Q*UWM7_cRHQJ%T+%5pGV"Qe,EHdJ0KA?3
%OE-L&Pa75Pe)Z:A7OI>'XU[F=eSeec/J=_Nk='<BC8Y0d]V8e]O3-a:gPZ;n$>:2!&#!'&"+EhNhBd+En1H,bSHr.f)io]af`sN`
%[!2bQZ6m+7aT>DL[,qbglelkaJoSBWW$hljkf(GI9_lA&2q+ND)tp5m`$)s^E!p2;_,72AC)f.rJm3aXDXg7Q8`#'RQC)^G6<$1d
%7c&_-?s(+sT&_;M"Qq3b`GN\heK7c(S$o]3^RNMmk9]2*BboS0:<TH#p7Qd4`c@3Mm_<$C+=_*<EDOF1K16auDS1o]nUQ^5e&BV>
%k.pFYED\J/ppEQ%;"dCQ%_JN:1TSeaLdgj%3lGJomG-SM/dfp!3LA09%l+^&8`]T4j&rR+dhfl(".<9W,UUJi,0W3149#3cItQ"/
%q^#f_CWSG%prrr=QV-/%9[_0a7=;0_n:)`#&p%9L2X;hp2cNFHa?3Y_r""cYD/]CpNQY2eD!D);$DtXi04^@N@Y<<%.r_n[#R[%+
%@&'%'qNL`jqZk:uo01YV^hKpfRRGc(8@`R,Y4#lKIC@74or]iCiZisp3"LP>#_h2IZg@%Q/1)]Caj]c<F.%gT(HEuO9G%^50F`!9
%#7Ks]&CTeB2<Esid&,3ESX/'9rob+JJ@(0h9EK/\X=?Xb8#QV(Nuip63X'tu0VC[0DO/Nb1HVfoi8Y4Z>\e$q,?b&o<+`of]U=@J
%GBBTZ3hEJddjtJZ;^!jM8Z`dFWKTB#mm09Onadqd8/j7_&Y"<EFJ?8s+s+&<'W!9F!`<VdHGH3WJjcC*&L7\bHAV+83b\-E.l1;L
%%<Lf%6s9X1-7&]rbhBYd@F`aUX&neZ*(!^gO;;Xa>'!OY#=H=UPg.m@8i[kb.k3!J]-(X/(;_*q@B$ln#uedbC=E8n5kH18J`=6@
%/!t##YeLYr%Bq3>+T`Ko,V`LD/r7<C9#utsf?YcO'q/R0MaW>EAJ9u[1ZK'nnb,<0:on]3m'%3.')4Gr%o,R#:m#'Y0ER2o]+FGO
%L*tO_gCD<8`JYGcLY;hDCh9Kr?_>:Akr<!HDUeQ.FWQ$g)r9Ls(5H2^%fm&<nK#:J9e^Ci99rF,TPcRTQ>%7+0q`DJ<LH>*701bp
%SXd)4n99erhdOJcio)>@!9:oPlgVBWWeijO8O>HZb69(90G&C>C)d*cTZDZhF[1p#OF[Z6fU+[ME<fWPlZE+L+DY5c0/9UiD!Xj'
%YDk!;#`NGC%)1q5:!f7%`L0Cg6MQn\3+*lefr;tY#LG09!S/["hhWlq,P23YMq<%\aAOT?":qsL+&c6LDo>s(E0O7P3-3-X(BK3:
%@kc&RD6/l%CSOd-kb;=+cd.A*l7WP%B\42OF!=;@(>ZN>dK.IIUE-e9MpF!*$>\8*YMEZZFJ47s11sh'BFXXs'->EIV?^<>pjr#S
%`\<t>@RT*caE&J]BcPc_ep'/-,3#QTMqVc2MJ7J&:<BC"_Ajdd[F:[HPo<3Zd,fN*5f$Mj/GS'V2RMd`nZ4)_epZDJ7&ZKg&uZ?c
%>@HK`^JC'/:[U!VW;0OB;lUT:#!ZN%94Us=-3XNCR[Y09PHY%V.i9JE(ikbN2<,:1o5=lk'a$,Y7AV0M#47UKMS0]AW/t$+_CUTR
%%cBtc;,on@BlV4oW"6cCD<s&82LV+Z3m9R(0WtiI=LtZ7B#k<D3\H)'WaE1K$[g?5,hsKO(csP:7\p9a8D4)/<u<KO@7RsG\idin
%\IE^9TS+b*Xte.#K"#Sso"T##8I*Ts+K!!.M/5(gYQisABoq>;rHH_odF]"\AaYS_$IHOP<Zr6LnWmHT;^^]rl";<rZ07-.Q9r^g
%<o1?O^6FUjL3>M[#AVo4LB`\>3Psk8N_dP]7p3a6P7a#3"EkoX]<rfWh8%:i&c1(P3$O([7M*LlCUX?@9o<//p`RZ^EG"^2"[sdu
%)`Z2P1ZC\OQ&3WX*aDpb1(/VIPg9>iS;IIV1fTaU[]55Vo\pPR46=K9nb^SNQd(^7U&*I`csgTD=Xr+1Q6:=\!?'iN`7<_t<;(2>
%l,=/Z&^\rN#Y66r!/0j)YF\aefq!m@jIr4T]XTl"9YW0Y#fim[3(TjP30^c['FW3&!'n%]+HP!<">Hb]Fh"NfhePg/9."5Q)m,4,
%d;KiL@cneL>u((V_BO(*k7l$1Gd3F<+\W!W3+3b-5g,Cc]etl$KfGh=K=9TX=!sAQ(Jh.pUX1"+NV/q9QjsI^f+:?C>f_Ff2Hs0?
%<'52gMrqY5(hU7g,/5%TWarWq'Fs>!7]Dm92Xi\\eT@u#;M%&dYZ%P*qaH0QqZjsNe;L+5id>]0%$NoIm_QrqBrVn['4sV88WbIC
%L][3/:'J9En0Shgl#^Q)S.#tUMZ!3LLfDFg?&>d#aFR^nf]&sS[_A3)dig,lYoUJD,bH=GFLS.p9->t:E)7)UdDLi?0^0:52TUX&
%e:NC924u_J[KV;6a3_t"9#6Dk4>?f5auHGp\0O\7't/<ICa;r//(5(d:^OkNEZ_C86O?TkJ?[s1>?t05b#4#SKh$4cA?$:5#A\4L
%"Y:!@^;:aTE]50;g(5XO1caH71U^Hfe2<7)0iA9/_Hi4W,*B]!i\iX-p>*C/MdC,s5W<RO1W2PI):tp.]akKZ!lVF2"n3BTrCUFH
%+Ji)pI`t34FtmqD;-Wc>8nl)6+e5j`Uu#\S]34-Q!h,N)_H\eR:5,">\ORc6$f,HGD*ePE%*CiT!UjBR(9.Rk2lu-Np(6$K!5Qr%
%S0C#%6h<'$]OeOh]n+W;(e"50/#@dQkj="IL1,!$VWV+l\kO^,G9SShqrGO8OcT!<"sY[:qdDlr65FEn1D"\2#tr&W6H4$@[i3;D
%S[OG*NX_qG:,pJjJ>uB_+gC1/#>?)W@@Y3(="lo2S6>t+fUe"`J!Us&A=`[npP[$LoF&E1Ne&nqkF$bV(JDHU\6lW7b\Z01qMmNn
%f]k'tB+!`SS4-3;5]Qn/'/O(;!:7L6KpW)7BCHqj#B;-<H]8@H_E&Vkq(brB\%Y4@[ICU6,U'msi=<n.ih`Tl6J)0*1J&PJ0?B'W
%8oe[&mgk@-pY07bZ8-+P2M5,dR'CK^U\FIU`J[X1ENg\=$t>,=;OdUQ+TX<a1akfJ+1.WN;CqH4nV>53GhW4nA38&=&^HWS[MZ&6
%pp+nLS#EX5eCm8fPAE,#I?5WoA8DmJ(b&d%Z<V\79I0<4;t#U9fpXq:G^aX9^h/AL99c<3U'$+S%A,Pf/Y3UN:k&R^2_#dcE&a4)
%NKdk<8mtm.,t-J=9S'<>O-PbZp*od6FT3VG/imX!_0H6WEb?.5IF,g5g<X=GDeb+!DV<?l^\+OH>c,-/2%/YR*6+`jla[TpY\Om&
%&A:'j7Ka^1(P?(to84%FoM_ga>(m>&*s2.gegk-W;;+3G+R4;2Lfa]KlbmDIJYUP<$%%=?qLsaI*eVP-X4o`4+tWY>I%gJDn-/6`
%H0n7:rG&d&S,/>uNQ"4F^!;jG$thp3?cFlYVJ7V:(:ooj4GL-^iloJ=AhXsBRO^QM!heJoCe7YGZfh0faF/s3,Whm_6h%9!9&:ra
%4heEcGteW(UL$I`Jrgo=oITuA'EpR0I3lpePLWXn(ld"(Lg;3uM#^1P<KM!_dBM"1e@6!ZZq-T3/uM)ASJ6b`@kp^])q#33^b8q7
%&8\^i0GFWIe3LW&!5IGNac[7&L8b:Y=<1KVbUG8=fYB;E)M#_n"LUSIO+(P\(RKQNqsB=UiTu(`!%:6#-rg]X5e4C^m7]Hc%C2k"
%0)K%l<[0C7F5#Qda]VrR?j;;C+]mkrgmS%d_2h_V.m[pq1T^Ot<%S7ad_ER]cS)j?%@eRdgIJ>^'hkBSM87B(;Q(95ZrgE(iO9CV
%)^FDFM?=!t4d=eZ<5FS<jYeTV@70rB/nI3NEOa!D<74Ld0D^rdai.:s&A+q5A:mE,`ke/b$u:tFh#KVm0FgoC&G$*-#_jFpcNl7W
%I&X>E\9AcLe`]h!<+5"ECOl0C.gn<Y@NKP#/j4aQ0tR8>Pohbb8<R40+QOI!1?AmtI#N)0JHH>q*t$%"ia=hQZ3.WKij*q5?j&q"
%;0jrjAR4e1CCmkNLfk$Z.#ZPjP:\\dG14N(YnL@[jI-4,dA@5-d/?'iT-Ob'&^$"NK7Sb"7i?P6,8dHS.`EE)#-99hNoErOL4]3q
%?;R'u/1lidGYHu*7EJmeUO#pp=9tS5-f\=:KIY>`<83N=VUgU+J6*o^JW^J6!jPI'/'J[)_A:1F"1V_^!nRmB_RJ4%;b/$qKUS`3
%WJJT'FCql#(Gp%/eSEaIOpk;8N*m*\B!)uD-podWF-tbaWI'l.@nMe:78[c%J@]3ld:Gq>5WdnT>H9j*+g\ga:2BMVHtJ&lMa<If
%(m(cb12J3citpg[G?)pd#$st0Xp8Xj?;/Rb<EN`oiRWI?q)h?\O_Bk_l>gmB_U,,lb)mRI$SFuSTGQW7!s-;%ca7^n"9*=[ib>9*
%/BqeYdBO5%rP<Y@\0Xt!&6^3p,!FMS92kFYneT,t51m3$0^LM)(T.ll!OtmA)6AZ/r$CGp`5P>+;BfIKlEDii%Vp>HQh[)m"2@L^
%ZM*RO\gQS`%MqS$Hdefk[Nsb;,L]7r"AP'Jn:uaHs.bPErY^.f,Lb?k&<GD5+$(Vrf0tgQ*5sf$(!-jLg'@j[<KR[n(\S&pNDVet
%,&k"C1@5$;-@Q+J:Olo19LD8rC)0JR)$`=J6l6!4hr,ZS@$uj.5KNbU&.FC5"28#j:K*;M/)jr$huh)+8'F';I$7-e+KBAq`ZS"\
%4e%ogh!O@V[uMrDJMKcD(A!L+.:=i4Z-i#Z6ar*$WOS`l96pTbN@rXC5@M]k('UCfR.WjJN2_1snY_nB5"q=Z7Z1..hM7%bCFE32
%/!p;^LUac+f"c7<N&:VZc)#VBXT_Za"\DZ$F@Ecc\4/eB>u^Fn"j*MgL<NM:#Gc^hl7.=s.Bg*U/Dni!#<?@'0c:KaVg\"Te$'Xf
%+t5g0q'5GZ[Pb[b`R#;bmA3K'_4U1R4JJBroscFK;5F$n?9Wq0YdrB5$7&?n^%s]&(\-H\WG!!/3KM:aq"ACajE,HA,`P.Q],WC/
%0s+k.^7"DV'KiqNWG0iSP+S,Wn?TT<_B*4I%[m`HZ!(Z'5%&3q-b\*f_!9Ap!@Mgdh?9d^mPAT=ldS2M!?O/pbduk]i/ncY3s,k.
%G\&X[^E;a.]JMq9[79?3_+B>T);>?:[5Q?3?3plOrKAVa&Qqd.Fq+^m0-.i7KAX-Nd"EN8j5%l7Ekt<oN1LlO*MRI89EO!f'n3&L
%Yan'm>(%<6"?O]J^7%Z_$UE\pB#Kch"kH*bh*ej!aS`'e]\kO<%Zam0]23>%A:b83G9+r[SW:V?[F!`c@c:T:cVOHI0gp8-=tWlS
%.4g"gd1W0r^aD<KRYNKlT?@`X'6#?^+>J^+cQeuDVIHPRX`H8^oaas"^1bWOma5+K3X`_(:EGs>X8Bq<qt"[pEV$hZYYR19-X67d
%icn-[*Q"Vq#uBYZ:9SfH"L5h^<30=CZ9m:mktpL56sjfs)cMe[PB,H`mE'ibeA+rX?f$r!L,#[pQ%F:#?B$WgZ.@5!P_3\hCPeeR
%T?K]D3Wf.5^a0?KS9oQA,+q:HV5+]2:%X3Ak\K+!r3!UP8tdr$$]?#/Xrq@6#kfOWG4tH+XQd<9Vi#cHX`m5h>&J6]Id(mAo[:Q4
%`*d<CE!uJa"_s8h2_s!ig0Uukh^)fm(1;\H4/:JS_VscFQ:1K3@5h#TMW\[>'RpK?Vp`d[7,Gh89&2%'=DL/j7fqpa$b$7:O8)"i
%o/mn"s.=ZWk8@SA@S?2*jUD9E5moU[NBZ?Y1XM\f!*"CndCM2P-?TLC*Gmf>-]i7m9JX,3$6@QG`%Q3f\Ecl(/Drq;B<o9q%S*f[
%m.Qc@E8;ljg"Bp2Mb#-SBn*(?EsgY;D#>iZ_Vu3*K>",`%gnF&%&'2(1qTMuagO->bRW*0Jh8O#(4WfM+:u%d-;?R_.@&^o(2(4S
%ebL\sntdq?id,q-/,7?3DYdnaIC_:c(.9+Zf;+Vd\j`t_q1#h@Mcq7)S:^8E/Gl-!<M?*GSQ$qUs"_`S,hYef"dAL_ia358M_dfa
%U..FCOVMVOPAJ@rgJ$kUS.==[M#-)B<=kY,#Ol!:bf#['`!e]jSarQ"@SsrPL"j\<''ib`6O"gtMLkiO4;FKI=)7X-6N.?<F\d'!
%r;Yg3s7u]oiV.+j^AWu)qn'Uk4T>/ss7<ier!Es!Y7P9.Ts7cNCJH9e'f*DVPVRsWWLH&kFGt3Cc8(RHb4ndiOFilCE7'ApP8F2)
%dKq5*</"Fj;GBWMcbu'4'.spJ52.XT.Oq&N4(mO2^n[t<.hHuA0e;TE:(R"b="69+a`,"<4q[0NLY6g+#;ZF32^cq:5'T#='-K)d
%eIXJ5*YDa[U1uAl5B[?2m&AuQ<u,RJR$sXPU;\7<bc1dEelC#bM.U92f;('"N8\KXR=[b(B4A[]IM1G<Rae*[E,:LWQ&1%u?(B?M
%hNr6]O63]"^(nikr&d_91`.RmjUY4&js63j9'ONVs&I$+6<=^0bBL'H/#\#UaKbI^q-mIK",c'4mK&mk;?;[P2M"J]Dbcfh7cBk)
%BnLKKZi\@g0#$Y*k&QPeU+%_9JrhRt07-$ij-.l>n[=*-b'^X]Ncdc]!/q?(WN6fVT'-H3KJID$3XnfjeAbs>fiYeL+@NPd#Nps,
%*.+-p/1!NGfHq#4IFp=G,@aooaM\KY$sNi@/.[/0:/\`^RH8fC@k[T];[cN/A.!;L"?=XR_u8TjA<(OM[b,mj<(J[#f<euVThoa)
%[1M`*PIV]-2aoJ2YJF9u4B<.%OG9\)L*2bcc08=p9]BY\^dEr+3ie!0:X6g^'UAD"?rT[,M)iBu&7D,!.n(:\FiHB@4[Jj];L"ZG
%@!WmXT:A:p_N(Vqcd1Q,,PGjo$-0&BR@4!`5fM!<^F@Jt;`>WG&oT6R'pCf3#4T3U-BOrA,NF?SQkK^YPlbPPKT8i>I0WMSC^Hu8
%opCF2QT,JWa5VbLAO?hdjibiMdC@-@#0YW>@B_Z51bW!p(e"AF@)$e=56AAJDuI4c/i7M!`X\GqK5+O:%Eq7c,h5[V\]pf'"6;AV
%"l3QkJ:0h*X+@dfRN)SLZ&<k@)M/op!Y&?8!SjX?Ba;Fb>!`U>-%HrHk<o?$X7UZ(!4W=2jn$^sgfRVK#c%WQX*E9?n66#PP1C)V
%Ac-C(nFjclHm*Z;2[5QXFGg]`W'gW?ggYctZ"h'+lWt.)lj'sN_bo0+TIl\eLsInF0<UuW=.TjE6?Fhgb%r%dM,`t%fWGD8jb)1%
%m=(rt+C'iCD'qdh9tcQ_k5egZW+S=kD0OnH6r"Z)U@T4DeF(06TK#K#YR0l)B$`"u0._npS!SY*GNFu2XG5*q^;jpfmBH&".hSD%
%mHBn1Z`Q9MFg,#%=paXQ\-lE[&4gQ'=PP<RbUVPoP\/))@FuJhQ:\D@J#sPef+1c7oL=SYG(X?<o:jgJJ[3A#-VUrj8/CcX^=`pW
%S]0bE)'D!l,Hn:49Tt'<%?7LC_-"Tai?`DVg("f)1U.i.L;[,:-_,q/?HgJefTmM12%16YAjNYU^qNMB=5g>;-k?P_/0rTikphG&
%K%1-VASO/_KAk>1f#HZMKO'K^)>_MR(IDK6KR[f,5@+)OrUF;,]l(0CSbOsIn'%MCW,(nD(;jCh6*A*KS:1Ii\S:c\F=o<.#6HsO
%.*k@-f<45.r%DhscasrJ<mO;QbCNj5oI[*qTiPc!TK%L[0=iST11]chh*(8m&_,MDBk?!"+g'RN<q7.0XkdttL8sREC,da7#7>*T
%hFNc8HMV24lZFpW/%2#YB4\'5^l/rU09^!-X,?R`=q8gbWc1ucB`OFm.s'tmc5PeCF)Y0W$kiSrL9i)3J8sF6S<YY#.>R0hZ^@bC
%W#)f)@$R+hQcL"Ba0nW;0V%eO'^Cenbg^]0L)B_6T>iFYl:e)mcH=oS>.A<,lObAsKSbqaap$N.B14!LgB,W=<[Rgtp25ns1B49>
%6N^#IRD\K%)3W:7`qrV2cg8.?g--D?Kt0nsb,H"4U)uNEZI`JpPl[$@8)h?e0dAapT?\BPlX:'7N0)nb(UMLTW.qJc]6!5Q#'@7W
%U!$`rjBVou3<@Zle_rA.Wo9s^J=J7o,U^V9aN>d$pV&om?Zs^B]Bdp_pbU`4o.LbUV*!5QVJM>DM\UKj5l(B_"&tOaA[Pks%eNJb
%>BhXa."kNeVZ^rg4RJ!&`b9$8S2Z]U2]aXf\XA]d4;sNC%%"qsU_$-eJsi0Dg6'nI@Hgln!i`;Hh7I2WlK];%((YplTgGOETW"dh
%5nK<<\:Kp<6=R:!LnUQ#>ZXCe"//ak#DIS""LU:pJtkj:[5tGlMW:Vb@21%(-@FO!Tr0U`HAYJbjHg@J[^96plkJ:meb_VqoQ>ss
%4,$5O19;gaiMHmX:l.b29o"GZJO%H/o00RAR#WH-Zl*2-O=%i@c-Xn$$nQ6#/+qVLc&bh*jGICSM3B\\Xg4oc8rE%+KmOIX"U[MN
%Zl)4,EBITdNri#98SA>L"`cqKZl(b/@B!?06R&;0)&!j(#8^sJ\RM^e9-/f&7SpGu'88ppp&0%F;)kZk&8d/W:6.&CL5&G>N7u*7
%R>.,Ta:&AdeQDmGc#D$r;17gIK:GJ3YTF8f7\O6I,+p_2!87n^KJb/]]SN>TJ=6amG/HKu,<V[EOO*/]WZBl96X.gYj:h\ZRphlo
%)PE;W5s/S"+ZF(hG<ufbgt</(Hl:KORts1j]ORMVV,][&'<t;o9MHpiFg<u[#tc0&6omn0Nst>bRVjE%/&F>Mc9u>33ERYLHjf8Y
%Diuo<p7#/3Z9qJ5U*:g*2BT#aq;8%4AA^Hr-XI^&2QZLqTO/&P60/aW#AM)\:5FhJYd:Q/:l6WV-.[o3Klpk1*U<jYKYhP-B;Fsr
%'^g]u65EY9S:%P9Q?NqIc\?QtF88DIV$5+uFeWZ3FlF?@RjK**.=EQ_M-/pgKDj[/lU5h[OGFQ%"p_UsK\"]_ARI-87&F];0HW;)
%;3t.c>jD]Cibi-06KY,oOK47Q#qb`i_UBf1Z$MXGZ,5nGf8q>JM(epJW+4:3#U*EZ?ED9e6a4c!>VVZO5tK(M@?2R&1_s]nYbkN5
%X=A3Wp$P2WUCu5>r[+/cYf#2'WC+,[<YL[:rq:52`.+Q"Y*4YRIknK?#aQZP6tN.)h7c)fpKLX@#2/_o:nksml8M/4c&"D$X!=8%
%WV8\s%TR<oJu0*NI"Y,W.Nc[kM8;NaC@T]e7m=uEgbXkJaWPDr1&9fAG?D6[nVbbO&FZ^5D@"*g;_J7'a_JGP/;?I8k(c9\S*ELr
%$HWKVn9PWq%3q0s:Os>57D8lSb[p?`.'*lNDlADl&7WUWW_a.g9_)8_O4SJbF>$a+h,(T4*e,2Z$C9d"=BdkN+n5hQ@:N=s-$4i_
%NDLQ`W,Zk6\,W-=@`_<b+H6O#9?OS+XN4S&I+*ui'(I$O'+jE*1,r*mJHXo+[KEejJ0$Bd>k8Rebr8!?]1c@+E]Pl^:#[jNkdD!X
%11]$T^lkYk=gdTcLi9b#C0>d'EXspK%fnJ^4;>i4'o/B?0f2Z=WKQrLiY.rBp**+TE>(%MHs1W^b2"BT?2qD[?NmGbJV\PUf;edG
%o"$<++K=oS0^C1N'0N;LPph'hcCKrjDap\P2&HFik6Ro$jGtne-i;nGo6e!e?FSq7c2'2Dn&igEi=j''=rp^VW3!YTO>7%&F(oU#
%I>>1(lt/%gc;keEqa@DQH+/6;TaecQR#U*"]e"pS\nA3X5K@B`4aV=akV3:cXsB\E"UTGhdITk./hM8kmO[GX'8h=f@M*oA8^<K=
%,Ma*&(X(N`A8l+@QEZ6lH'paq-VIUcinpQEo_?V6f8mE1P_fX:C<@i_Z6E].aDL%j;e/@ZDoc-/"d\A,h,p3\XpQNd_2=U<1JA%Y
%RdR/q=m"7(e>(Pc@9aNA77UhbDDAn*hE%1WVOW[\9CkZJ7Kkh?j2Oa:M?T^a0U$WBaXEJRnq2n<"i"U_n;:"R7p!UKDHNF;Q$+5N
%#Ed_S$KM<O_,KhK\82pBXbNTEOSDM%en,jLg$Lc]k1EfkK($j(Br*5Q!Vq`C#Bn:K$gq*bZ]8di>Z#^O4_G$\0Qa=H;u5A>D><'?
%G*J+%657H[g@R$RiIUaRV4MG?2I3bDKZY*d;c:-.^2.H&lr)'b_6&=](sIJ0X\@=clfBS6](uF;arJs#.B5ouWF5HJ\JGd+P^CmW
%./"i7rH1bAlbDl#QbE4#I=ESc4+=0U/b0W22Vpd4In8r<W5udRTQkCP70a!&%Yu`ME%@fe+UR'o)/mMg(:&uX6_Mg&#jVtl6B&Ek
%Y$fCE<lmfPB-\1*N,KO_^mu'nSVn\tnJ]Tm4OimE&>LZ+\?T?Qb@"I-RFf9'0kQ=Df-&.h8JZc2-Mp0nl9n+f$Ta$M'fi>K/dDbd
%ZHCsSR8JY,n75g'iRbkg)"EX\kVU/h02lh8@q][Z.Xp[Yb5!"kqo]V,k`d9&RrZ)'Cm!7M=1R\;@Y*eFCG`bamu+(S!=+:eOZgFJ
%fq8MTV*ImdJOQ6bObJ"A]dbM*6R%VEJot`-j$<_uAfFLFK*_E@!*T^DA#r?:4M?HG0tFWJJ99JqORYV&dU:5=ndLPT6p>T]`-SAG
%<pY$6[N\guR9D::jEM^#f>>#<05ZtNVkf:oP0;qZ^q)M%9+%HI#o)M@JM.bO'tbju#F(HS$_s5jG/]]o7%`Ej9FD,8fEGc,-(TE3
%(U[7f16@9ZV^5VjAaTfBj=ER]Q;ecYZ4%+.W%]Wjd0hYQ,_?sWa8"1(YT#@?r*?>"cC9OHo[$l_]<`Ho1,(DG(e.K1V<'%QBN%b5
%bK^pSXk2W5m8MS#T]"$]#O*@V^$oJY(qKB@e'eX_OYW#r%.4\6.,r2s2`ITK&'?cM4&F'C#?6p]nTBXp4,#i.;%KXcJNWsoLrLpN
%LdX\:O,eUao"dg_#UD$6_E:FrQ6c:"r7]k5n@N>5Chu;r>_>Scj=q3(XUb,f+mYhDhT@<'c%iDWhcphH^r3!m;0@$n?N>QG:ngi:
%alko%=5u\m/*TnH6i$F:`%T(R4+3\<8uSn3!f-0!C&+)\&]^;ONWMZC+rCKF%d0P*,ZQ%K*s)>2)Ru'LUW6lBj#s\Ti0dpD?El'9
%."2Hf/%$6Q"G)DFka4EtqqYfQWc_e6EH\<HdBR*C3dVb$rt[k;6)I@sSda'M;S<#p`\=TZOQ"`F)mqLQ@(8aH-`Wmpd7]3`eQ!D)
%<9AO5e@!,5*6^<142E+D<N7f*.3_?W"O8doNHGsP=NcWFGm-5/D/:(B0EXI`mBS`&fqeQ!3bMkfKZ;ugOs7*-Ru6^6L)S9:9:Ad5
%<mOG5,#(hK\;4\VH9W10J+ddGOR/`ioh]XLXj5h+@3sLYhHr.g6[@S%GQ-MX#&ipPYT%NWZZfJ(Ag,B?b%akel_ZG44\/OM1`rK%
%f>sn:-lc,cK(/ZJAG3C2[@>+\g+#&s$'2gVNFeqf\isknL\g>-gWuE6=BdF'[9<F59aU,A)*Nj61=H[kA[?buM#F0D'k?H$\:a(.
%.%sr1>uaE]0&UCj2:rq<OWth=^B/%?lM6iJC1cPB";GG"^l"\'.%nLM1CIZqcBJXoSO_BU/CTM_Ak:_)[P[!n.#am\,kH#A?1TNj
%@l8Y=4rNc)DTcj`CX+;g*=fpk.f.+HC5Wdn2?kUAGg6:SQY;e#TT(J4Pkh(^N(W`-O]!`>b@!)-&>#)jKH3cV2ggjrL?h<MgO*nj
%N+`f*!+A+2"Y;/#KZ0Z4<D]kCYc^U$=uJL]gRU\SSqJ`6CS5A.UVGQc7b\g[lTF!n(B7E!C+SH"5ao\?.M4\2]M_D8V@iNGh'PVM
%GUA?^Su7+h;b8uD4d#M6]6'Q(<5eJeL3+8hf?jMoPDh"ohp-je"Q%ku:c/pI][Xo?Zmn!#O(W3/)Qs3iRi.GH%=L$r,lbq[12`:a
%]=o@L-[I^q8G6>!O,%K*i&#(NpAV4Wq!RD)IdeDK2>8l_^Asn$GE'lS1:gsb.F_4La@TC4.ss0VL)Bi(XeF0B.9gbG;a?Kn"d46_
%JUD&^4sVFA2IS=$=R(c$8+.+SHFBl$HN(S$)X2&"8$cI(qmcd@Oe*8s<>X-2X.p%+iLruH-)OJ?bd*`&!>*"o1>4BkF#@&+?]KKj
%^2Q65p:70hQInp5)%m]&Qh#2,=%pD@R#)X^@qc]MLJ&Ah)5tYh^i/OigrndNS17hOR*XjbRF^'N`2D:lVmpDH+;30`Eo`rD,9/m&
%iE=;[YI#6XNp/Y$Y'6_rA@gEhado+fMgNsG9[Cu>cn1GbZ$aV?r8T$0_j:Yrd,jgl+>TXuh"jHc-qCBHm[WHp&,ikYPPEgd'!aOJ
%&E_GF[WJ+m=.T!10!Oc7#L=N9CG2I5A0?^J7<T_$9(kJ5;J0823g72'E@>IX*!]'3c8Op\.CAJ`*]ur<2g:J\?$l<Bf.N*@mcOAp
%-bJ4ph<Nmhqebf:$ugjUY::?BS48aBCip%-dF=JD6&41BE:[%<\W08`FX?1\10k3o8?"'^>8pQga;[R4TO(>cf1q2R9(3n"Ss7=c
%:fJ)GIAeNi[0ro\]ls(,eKi-Q2\*H;/a4H;.5p\+UDB#W,oci4;HB=WT`;$6)Q+a$'_S'Rc:+^::Uu9MqTRJfQI9i&05ot9lBOSW
%H>ZHj%e.Yd1Z/bC$Q,JAjsM?1R;&?gRK]oq"P1#$&KWE:h,In#T,OTlm$=4kcKm/-r#!.R%94i<kAte36W^1EG]fPD]T2E<K`kG:
%V07Ac**7k3^-Q<Y+tY,%'rEIU@l_2kf5`Q&/BsJ/TPLQ(DskK%Zl7;E=OC:W3(OWJ)JUSH`DJES#ff\d&<8sI+Spdj&)%Q"nuK!)
%GbgcL"KM*ea;X%Dh[S',+=%Jn*q[QF^MFS#`2AKdctZ5`@e0FE,'kOe#jGY<R)<]l0K8P9RMH#>ZEtb8GbZ#gUY#'n$qqaC;aE!k
%;dijkI-F;/3J2dUR;G-od"8J'9d`#?-&CD.=mMmSA_g<.,X:7FTo]:4+EZKu+?6sSI2!E`=UE>g<:>CQcHja$+Z-1F2X9Fmp@C\J
%`e'Goe1Z4?+=bKU_$ClHQ*R]f.AkF]Ao<JV+;Zb';:uDpTFPPqI*F*$pXZ8@f]flSoJ/N<IO:+X#59g*k9<YM..Ej1:$+1,`D"Uh
%[41)]dS;^j3jI8c72]=kGTu^W?VT4V]Y<%-So]%u+1k%=VI%:;(Z8X5qfrTDahb6FP(O36,mSu^&pV3\W8u;G:*ibF.ki9)Fcqpk
%J8C?oBl59KV;s>uLIr'J3gu4aUMEH<=d'\--^g.(T8UNq*cXEUOoq_K*#qR#3=)mTOqX,9p"LjhrA#G6cp14n(q8Cu$u;W$Z`3;W
%\-Z_bAMUa)2Pd,XWjN_?jKQ?X`C^J[:i`;nU"'S(jicB=<,sfqjS.&d*6opr*):mMrH\h>dY]bQ'V^bC7?`meO&3rlZS7XabcrZY
%.^3363_1Pe^6?m<I\!("LG?;7![j;[PalA9eIm01;2[CILjFJK2`BookfoFidrT(2ICFB`>hccf6#+Nl>*//mIl2$gkO.2Un-id8
%p+fg@N+dA@*[t02SuL43R$1rPq[R`bL?c`70@E3dkhF-"]T09VpI'&Xj-`LcjYY$)hu1[\;4QJprVQ#lhL?R(T29PHP8!ND7S/=!
%))ZAUo@@:]Kd*/OWN-aW'sPE7'H,g:6/:h9W;=The^4t@3]._9U,$)[i3X\SET<Fq#U:H,806!C*5?Go0U#!o7p^Q?`QA[k1s&-m
%R1$'/:(DEfC'Y''W?<5"C%eO3H04tb,YlM/!P'7>VDZp@4j@7Xq_$bh<1q3ggYU1`/PnLiqQ>t)J&FFY+$@I1k$H+*AN[T08l)p<
%.En%Gj!/\c028uSBKFko-td$0OHXK1F//)F*pdp4^KS5ueNL41W"IR3n(*q-:V/f+Ukem/]mp%>did/qlY+%8RXi^Pjp-tZ'FNM(
%3?:gt^QEF]@1a>nckNIDQ!1rM%*1#P=r'uI.so*U7\$_O-1KE_P7HLEW7B!i]*hN;]4s_ojG6GO.2Eo6NGmHjFSAj6<b=h,9oUjD
%b!JG9<_-"+6on7cn1MD7p$9%4ghU'iQ9fIQ9g@VZW9>!!M&BYZ!Zb19j^h<U=YV"D2e!rq0"3%.G4YN_\M@R=FI'2%RZ4.Vka5i1
%=SGA8(<k<d`N_G4E&->q1nAr>M@55$`G'"n3Z)C^h`PCcb"u);4Cl8Z"o,Y!:R,lf*V)p4X]1PYn6bACB"%KD3=>os%_>>PC0%8k
%MrUMRk;A7ODn8c8ADAfCK'Dr9Z!oFhF,+;`jh$9d<QaB?%N7Y_:Z"$mnHSI?IddbU2to)aLIE+M/%3\&9,,2=nO,h=,\YE(=u9o^
%n/Om@B^c6t11&ElA5U[De%?X2%_-r7?9Qf_$.PF4f'BA3ia!.gT",*%L0hpq(LV,J;.AGum_%,'a4MUH"$D0D.LIXS!5a(lKjiO6
%A*TFi>hc<?nGXYj6nLagDQo._Bh^,'%FRqqU0oeORsZ58Gmd(Km/')['ZOS0LnhY*4_1[eaD;f;VCX2H`)B6ulBC1U*J7jr&c.6b
%OmdW5[S<'$h,HH#9ldQIXT>hT&S5N!9RX3#QY]*ea_3#V:9]IkNWLS/c:54`n/E<HJQT(7ZPIg8"=qF1\W-)#mZr+c4N.JW"`Du@
%j9BdX4=@J)['E^fZ<CfFN)PJ0$"W4)momPF7/X(!2#-S3pg5E6M8LLo]4>!EA/4b.9VktS#_K4_BgcOSh!.>fLet"]4j>pdf?JWN
%G#S09^3Z_TL#27K+98;8oN<D%e77t)IddbT2to(2j)5sd2a)mm4V8+da"oU4RZ%Ys@aku]'Wp)l]sUEB"j$Q.\K8+VI@<5Cql[VZ
%W22&!rGKpSm/:374k+-5i-t/:S2L$rhERu-p$YRWe>S&2N18(^e#)s%1jU`.CBSChd(peLQmCN"SrqWNqFr=9JZ'f'aB9Bn8:pii
%(^#ga!$jJG`jP(cLLX0"hO8*AA*=3sV-c:]jXLsi*7HWEH1N-(<8=F>BGU/KAT1*E;l`O51O2M<pFEr)Gn<ibn?Tcs]1DX$^?\aW
%QYCG7F'8o)L]-%'HH;^b*P<Hc@@ZIda8;\_e=[fa_dm`9O,m8*cX]&G<bst2WDs;5ga&'r(cl\%3/##9enti0C9(a\TFdO'/HeY!
%q=IN/4k*p/SNh@Y_4,clm$A(th;Um85_IhhL[HRq<X,J%*^,a`5Z6),@^UP$O2-XZAY!6,4RX\S)[s#>%'!=$@hg7<Ml^dp`Ytl0
%X/80;4"PZ1;@LARMfgrPK2<'mmYDF^i8G-d#,m%kYHCLBKN8L^/7fjOQdL8U%Q0NTJ`EUBaNjPc._;H-LUa8d#pBHsi[EZ&K>ITC
%<%+X7GbZtE/M<FP=]p(iM2E4p"AXetS1@<T1CSsnRXIY&aF[>4Fk#fXLU8-M^Z6"^hZsoDK`kkVM23ua)Y+)HJq!XISC[AO&tS6P
%hIZBq(q\(t?g$TTGB*p3XPZEt\f]8JVV"o6?q_-=B<QF=XZ.S)S`gK35NnM"YLX3*5&1t[TrQ&ueQbtoY5>h#17hnPgX"\CZdrGP
%l^Ca-+<+sNcMp*m;ORQY;8)Aj*G.hDM08_+aVde`:Cj&']UO6ln[ldYSXPKJ>g6u`hObNOlI50m5Bb&NgNjb(?\#a;"GsbmQbB@p
%1Fj"I8P$F-^8m&FU37dQa<;'UGP/=ZQ4Lt,1=60l56g>F%<4>rkYA8a_^c<Igs.3M!]?bc-I_93#<AV;#Y*Y]6Esqt\&S@@FiRm$
%`nN1f\I]6;F;=U&i^EprR?u<MT`u6323e:$f.J&]<H6Nfc&7mN^SkHpo.#Z/3VM;E';^4XZCEq>k(5$[,UCt!e"MI]fM:>?Cm1j9
%3,^3rK@sfS>FSok7TbE%g@Z.ks/tiVY1Mm&.k!Lchk4T`MeY%g&jG'9WX%C1<1hQ"7X\^+AGY)On\7iK7h&(B.p!@/X+!00S#jtM
%LD^f0Gsml&<W>cK4fEMnq#+U*JR?YBP'r\chGcuAhT[4ZMN`%oCSZ`/KQhB"GRr)gHPu;"T`cFqHncM\O,m8kYf5^p1)$=s2V\b8
%+QV`#;sA\ufONO$p9pP`r2@<o<$]@"hsSL#a5.mqP3H<0\c(G(K!k;5e3BWj9s\QJeQ.r7:>Q^Z/,+eP_t9mYDG$_9_T?]o_.(H<
%N<Q)/(,58,[9RZPK2GXH;#GpU+"+;d*Uq%r4H4&EXE6)MpW;u@)[a$&mG\p49UrW:iHA4<rp`Ar&p3%p1mEK#.`W<bD3$VEc6BfQ
%E^'b7!C:HZF]%L`&%]nC&R9PIorBO+:`oE:7?F9uG>#<DkLRrE!5HggaWmNpZafrU:IJ\b_a?@JiUmE6KGsK[B^Q_gH9HukNG[NH
%*QlJ<n3j)IFZ"lS(:i4-1l=DI]OUrn4X)cV1<(tk;b?P_Wh+]D%Uu_$='0/`cCH7^>Em>6`08L6^_1g2P[Hq%gsd(Y>)5dD;BH2h
%_\*$i>)0_MTPA]no$/IX&r04FV,*t<f8SBmb5T[k+k:$<+0%lJFCpH",iZTK,Z/\kf<\q#?Usp7]?jHIY4!<?UD*QVLe\8(YEjs*
%H0XX>M;mX'\$jc=1L(],c^AMS6W?H-$DtuU"EVt,-;&#:'244T.Do<M[,u8TMGVsa'f5S?&,JaF#9jq?kQm@/6mf?o>)-qNh/`.n
%q[BZXkDRK@N/m/A.CF5XqfR4&%Q^U^gM??1BR#1@&_crO7jft>4a4E6FXJ"l4A9Wbqk9[9+'1OZ@\;-BiP_Zcjf9]gb(F3pq4:G)
%b`hA+o#FMO]r@>!CA?_aXYi1(;1=pg=G*D/#\'Kc5kUFs@f6nbbXml2&F[[5ESW4;")K(/MhgNZgm[dsH+rL,#CEJ"mAKCBW25gm
%IQ?RXCo90?MD-l4oE7t!#p,nR!Jm&>A.;F,D@HA80cOS=QJqS3h!HQuJa5ss5EU?/(t]CG`H9XA$R)Bpd##7-KrcQ@SrdbQa2/ci
%c&X-j=G6Z0VS+ma8q^DbBYt<%"o(lJqITR4ZQigE>iL3ldS6.OG;kfc,'F'+_L*9#Mc,NK*6s-0&Sk(%Rm;Tn`iqS3a`N&+3>!_:
%9]u]CI$'UO9CgD#V<O,+$3ZNu:G^%?l62KNb8H)nFC\.e@]$s,U,?N[@qPEOV`I.%*#poJ90%_F7Q8AnR-Qp3f4hf6)?+Is-e",e
%<K=_jCB\?9!J#&O4D,Fl22'PI9mW2E(JWQ6K6**%2g7gd?$l<B$.IbU=l/KA]11elVh=l_HZ7QkbBRkbi0N%hZ',@BoAc5W^F*D5
%+>'G7^8!!4aDj'67=(mLK5[C\i',Pd\O3[k5-t<Fg7TbIc"YM\T+-hHgthSBmZCXV08'3:q@78adJ>V+L,!aH63.tS5HIlIU4fTU
%K\H]O#K'e7'$WiI]eOR?WAGD#h!_aXd@@R?O:&&T"fl^$)rJk..&eS8&Z@N&SSEPI>/&V?%Y(bW_odEbT*uQ7bZo6gVsHJrm739K
%j/3V?ok%g*9u=\rRB+R$GqbU#k\BOI`\uT,e1UXDeJsnW[2I;7Sb0/?KBhBDn/@$?pH%.aj5UHV_e;?P0HIWKVUE6^Opj+9%ff>'
%B<Mp4,`X=CM<B1==W,c=g-oumkTUN,b.B7;8+2M!D(`DH[i[_BfZh)<p5>aT<%Xmk45cE:jrtMEPdtHMSJ_,37Npi;A2D9+$8nl)
%_BmD61*RM:bs_^LOC0\-iGJ[r"3Cg76#J\,VZXJ%c!5ps.<?)G"O0@A<XtRVp4E\@"jKI<hEY[*!`eBW!QV4VJs"a170>/lWqu^7
%ZsU<rZ^F07DDrBj,^c737Rg-J>F"oO==apP`@+s)=S$InU4EBg4`f[>(CaJo=ToZ/I'oh#k[lI,>epuI)9k@?M3[:_R>^c;&!`KJ
%\HkhrP7O[l>9Z]W4CKkZ;_f-uj=E$,;1]?NEtPupmrgK'SRK:Yccp%kDs>GtDV$W[h:,mkA)U,&d^jf!O:=MMLm'fmC%e+h@,(@$
%GAA!DDnF7MPm3hl\KiuXrS=j*79BN_F8+&2g?WE0)<AB9T\rMS\`fGRqbD_`QhD8DLK5OZA@L5;B/Db65If&1C$m=YjlWEEk6%VB
%D:SNi>HG?HkDu/gm'^4)q\S1.18#%O:X3^]`QUd'MSrCJMruD[GK=$R&Wk4B?.29h1(l8P42q.gF&>C.#30T"k+^(mRUin6Ru;6Y
%AM+lLEeMmG7OrQ-IP;qhNH50)CGQcX.!#u\-^>.kV'VaF7Dtu/Zl_d7AaD!)4g5cC44c)O/86`j<:iiGU-YE!eBLJXRuu\g(STE_
%bXH&&P;S91U%B$3+a7]_\1j9\^Tok<jS$h4J'>(>7@IKr/e)\,fhZSoUR@%E?Ebqf"_B;)7,6>sJVR3j*U/u'/cnc0,4poX,4#o0
%MtZp1RAcV$Thd#Ff"B6r2mp`@K6Cdbg%1RC!DToF-=K"F_\\Bk%h9]VC$q)R2VU>mC#?IjbH_3*hp'n\FE_[gGRr)gHPs#a,9nh%
%2ADZ72]"VUC#[5C?Xo4;A=CPb+Y9iiKMQJ<_M<O-pga1pT=/X#)fBP.Uk.]Hb]`@OdC@FiGN\[PB*dAJb>:E'TDnX8+Wb0q,n#EF
%Lnnj08RqNQ=CU4F"scu6F>(Ib7hj7BTrB65V%CV1Z<R^"Ta0KmJ.b+OV[F@[BmsA9$#_I4_6!<D,G3%k=$-?Pf7VtB^SFV9],hSl
%OYeVbrD=mla*UM,!R2Ud;=Vf1I/o+J,,cQfi>ELTB29^+OZ1V>oZiFK?&a,W._>^S!E,UHHVs)[5T"^q^s'SU^:Q3i%1GZ8,N"2l
%%ni:PJ3r.I7Cc0A2Z#Fp1D'9i522!qV%;+T7G=IK3Ns8fib+BDP[aek;.X<PgFB66TIWtsQ"8-Bjf!rOq5!$2q7A,IPLChC*%*k&
%HK1jmZ`#3S<-XcCD@KSV16F$BFcuD.9R<79G&AnDGV9%`SGVQE/I=iWoO=BV*!DeN;4EHIH]8RB3$2a_%hA"JGkb`8-7/OYlH-oU
%iSsZ4<`r*:J1]YIh20F_mU-Ua)$q*s;(3)MirGY]^[e1'.>i1Ro'Bh1Hk<P2,$"(P<)oP=8m.m#!@_dt+_!"%2EM/Q:'iW4BOB\U
%CR54l79E>/[\o(dMFg+u<7L#$/5!^[aGcNS@PQ<-C%g+9VD0Eoi8#5A7I?0E`SMV9C)?=kC=6R9NNn.WJg6C7D$\N*p?Coij@cu"
%4\Y;Na@WG=B5*PAQebc4ITjiG@"bJK&a4T`Jec[hXK"sLlO]pQ"!V\cLYu_`@c#-*O(o2f9Har(d/Y!-C'Gmm5:"dDM+A/\=:9e\
%kJX$dJ-ldfi^q<9KD,Ek@kll^-m:6]KNmF1NU2d2T_o#5aQKEge$O2fh88#g]DRHW.,FWV*(A.L<f@6U4W7&=Dpa_++MNhpDEMpm
%P6fWQN$J_tq"YeKIfJ(=l-ku0UgNl;\,Z6tJ,NHnn"0%9hr)LWb'p+I(rj.!qDZRM!J.GaH!6eTahPZQ!n&61*#OWO8ea_*j<Hp(
%eL3Y5!kjXVK`LbVQkPj/@r;OQ.EeV7fHf0M;h75X3:k3XfQ4JA+mk!*s&A#:%N,kFRf)"9(qS5/:*;r,#(0kFM74aVVGGqLPSb))
%h9th6d=Qrcpj.P#(2`*<eV'_n<I57e6m24O<%8bS9r;224s>neRGD%X<g4m[+G\4GI74De0qQWR'31'G/.40j^5#gA$llJeqY"t@
%&I8O^SZIj/'?enhmp_UKA&B3RM<b;P]1u\oQL5\F1IROfMht=#0'fa*%3hVf!#@9QdYGaEX^Pe<m:k<=aJt_3$9=JY_8OM><C?sg
%&dZQ)J6Tg\Jq'c#N,<Y7iV]6h2VSq\UmFd7Q:kB453m=]:1>@aHe6V$GebI!p4W9.?H]^4-Bg8*m*]NZ9[3EcgD>RR3)-XA_OcA6
%1.Da^(lIl:Ztek"l2JJk_eqEA%=A<2EZkK?h,VPQD;<_WO/Or[95-7\-p)km9!o6b1t&bP<(g)D%HptW%B149,-1sAK&PeA3O('"
%gSsmH?.5!;XA,FA_(AALr^C$n*#ZYgb(ubqAEh7<Y0foU`:?80Q;Akf'Dod5)MU3Qnk1+g"4]m/]1"5*>2^,,_1:7\9]En?_mt2Q
%Y!QhD[^jZ"#Yi=.6jYag4o%.Ed#W7&=-k)oeRDnSqKe0dT8FX_f&ri&#Y@]p.1?rCafPGMr5Yl^G^\rsB)sV7jZ#pNdA%<s(Fs@c
%3c1ZYoX(l!jX-[#M0_YbHLs_n)/&XilhLr#\>6USSp6R@?LhoUH'T_hS?G,"#pgq6DfV,UJRj8B73>8rqmeE+lfIDXYca=AG?s3M
%\N8En,[X'8h<L',eQf;?#8R&=SGIV]T%?gQq.p6Vif(r%V\Q-&oC]gF:3#15W*=GtZmkG8iV%Wu,:_OLJgQi>)esQ>kX6!/0R;k+
%[dNJYKAq/SC8C2f=<KR>dtrr*972]/r.+XCI:SfNQ=#eC=UNS02'^tf8X6LmL;a9ub08B#<":$$.1Y3#g,<XWi$V(/S'C4X!@'8C
%$j%Iu=Xf-N*&iG8+q6]"'Un'Z4#'aAJ5_eRd0UUcQ@b7+58d%QFSJ]WDJbPche"?B6c@sc//'bdB3PUf;4<M_ZNBWS!eb6c`)5,E
%?Gria$$S9b'lEEUq%,oOQBq4b(!HM45B3o\U78*=!;IR0M0)CZ."#T5_mMd_gdJ,[A4VAl%XeX1(_hAHL6Xi)Pb:]YE`lh^V7/2H
%HgXW-2Fc;t6^DBaIAV]9J_8VBVO>iHN3*VS`IfU3X&F;i9B>Pm*NQJ-ZJIVM_G%a0kS]8pb5#d-HP'T.Vn&No))5?lXu4=%8qrod
%C*%YoRZo=e-hV&@VJ,%,7F#O$5ofQ>1\#6EeV1sc[[h"*fHTkk+?hgLeSKOW$5q#oA]\fH8!L7(fOi\FS;<;Y&N+kadRCIIT#g(;
%miq,M&p9WS<F43eTX4:*5j45/YaSaQ^f3Y<Mq$f``:*+(,&i'B6O.9=L[Hh'$=2&'><h#YhR1fRM=h;+S)sBApJ\;NB/)5r01Y0n
%R=/p1V#?6#LS>8F,6fbATmUWmgXn2T"Rdh9,,77u&OmNaA,V>R9@SUB(K%W8$Qe3udQcqi9ZXjMFad.:7>NH*r]$u_%7sFJW5q\N
%iYt%fic(P'ifRtH6XceZd@=6@k?[q^E,%L+*e_151_<K?Qdm:)q&GKnD+LJ4U0o6,%k&+>,q2n>AZJ(%)T&_8,??su04tfe%nnO>
%"Up(6SRr6/c?B?o^n?9qcA@ctaG5mN<<;Mc;ALoR<j!]*+f;qB.G"H+^LmRFCg&de+_BCKIat-JS7^,JDU^ak$D]+^ho,J)S[08l
%<JNmlG)uMPKdodndJCuN_)rE0fh5DT(=%e-B0hei.TeU83A&&:%G`4i:"e)Uq&AqV918M0$K(u3E*,GQ7Iq4qqX-3:+*4buUJBkE
%cmA`4Oefd>3ZEt;II7e>\Y8Cj^^n#jf0SA/f7H(qS5YjSQ:JM$*pDUbYF0AOPAHS7g`m"#AAi:Br3@W"mQ/rig#M85'_.Ln;eX2T
%hlAtpF%I^!QiafSW=]GdJB!9?Oh./1*<J(8PrhXI4UsoJHikDr.@Fj0`,lcIj/+S?(YM<0%akT>45WY#PDc\b'[I$ms,]J,XgX$u
%FX2^oDpr'NY=CC1nbd#6K9&DI;`:J/4r)-W.h?3_V(NpKN=(ID;FP\e79MH+:`)c>du0Hb6(0+qG#IjSIh_,J!=oELPb(:I-SOK_
%^cG'YNki);:]Zia6qjsW,<O`kaQL_t?F`'8U^$oR-<LV/>]a:Y/3&"k>9qNsr4l)^&1G9$ARS@GN2/OYG,F0q\>bJ;Khq3fFj'C[
%jdt_kE7*E3AA6<c%#=h9]$Cmb+f:D2T0Nl1A?s?OO9ro]0Sp?Klr=65q.IT/OHutS'tZo?Dnrn>6mju7"5,-(el+4;1k=#,Wh.b*
%3!V3?7A5#7or`L+^iEaYHt_&#$_KMd-Rc->W1dH/RUlnd?95/jb&V`2.O?Z;!heT0S=QHh(Dl`\Pb4l*.W]`!6t3uHOAm;2&m)E5
%inu]F(k\96Wt'[^PmK2mZQC?)-u`rK3C[ecan9Os0*_OL13J5d$(*0?QMB&H&HM!`VK,lf=M-H"W\?ZZbY=q=)-Y:M/ln2@aaTFa
%7a%Y-@,BV]ZrR_Ml#R,7(GfMpVCNMk7:HVc#ocH7V,\X77^U+6:^i_QS[KO!*bKMG)g?DNOTddcTcdA;EM^@($PMMX^]O/:6570'
%>.;*^f19M9Z,-WJI#U]Z&HjU9$P[P(-qfjlM7\P/e./.<NrbUM8*X+WNE_^O[J1l='R7^3hC,b4R_)jh366%GB!B*^7(j.-&CnGD
%N*Dd^,X5\DNPUU]$7;h-dWhsa8-R22@_!YkAs3:qQ8EgFU6uYZ/RD*d:I/"_?jU__?%?<`2KCd1#_\*T(T)+7Z*[pCJnf9[(0:NA
%C$9OLXmMXCn:sSFa@1Aa<7L&-Zk(/D+W9HoeN_F`7mjNH<!7*+$<o'2We;ZhQ<rg4ZI4J)4D?X_.aC+D4<7RkPYh%uSuGr>aC.<!
%`$k38]BbK/Hf0/RM=5:9?l6u,Lh8,W-K/<jkDOb<EQbW^U;@_`I`t24]pERN9nM^/@$3?<U'@/7,>&57>2Nu1:NQ&c(R#p4`X!co
%Q?PBcGkA!paCHV<";AG.E6>X)PqZK#j`<U[:Lk,Lh]Sij/T@L;mlIRW_K,;85I??Y<*l+R?'9W!S%]HlWhXpD23Z*:1feps\3uY!
%0q.(&DM&n2/ILt,f#"uB.QnflZ-*0+&'7P66a'!1D]r$enr&,I`j)t9lhP5CPkqrJ7I'Y]2A#P9@FDfX&:k&1S#7T9]!]6CZ60u)
%9=6[k\-Hnos(l+C4"k7!07geO_OAo+.n-iYP@^D`dDf"M!f&(3.mlh)7*k4McdL`M=F$[*(Bg^a%t&QCN>]Bm@88+nesf5CYEeub
%GXn3s?6J"N+)V_g!\9,3TCDP]f0r8mQ,l\3h#qsSH*HmV#2^+3Z\ubQl6IY!mH0SYbqU;>(+\RU885BJk'Wqk$B4,'-3.]63(fmT
%OZHRKb-(uA*sks%XT2P!loj=QC7nFT0p%]J5`e7<8uA_\r@fpQh&7&bLoq<m^dm?)^adD"W0SdJ(Q,P^UNR.(SZ6*ZV:h1:DTIN$
%(`*sgd&\T[X/^,2!JXR!rIYp@S#_V:=f_hEUAV=*+EA`8@LBu+G_#lE,_LGFjYDS$nj+J9+L.a>C+`%0AJm[s)NDcn"?!eboVXPN
%PDPc*mL?ut0iXl'F>Y%.,>aT^*UH82BW0Oi7R$JW/_8"%#6d/UZVBm^b&bSC\.1C3%HEoX<C"/2*=j@a\=eXUdBNaR8[LHnaiYbq
%[%f&Ja\lF@+Gpicm@90`Z?T:pe<:?rX#Qu8XWi^@a0aj#@T3L27"#3@%ZIa3]/4/%5grni4B.emD8?S.[A8)H,+.45%f&PU/TdiO
%C;M'O!W6Q4?7;-=frOr:&l(<C\AB^a`KlZGgrf/!_D3L&p/iNP@NpR!#J7H\c7XE1*qPM+aL1(YE#q=nC[jAX*-!_s"AKdshV.,J
%N:0^Lg2:'$5[quHZ:7$6W+T&M>l3Nm5b**(L[f'_/I?,/<_!s7jsFql#r'SBoCSc!;9S[+om'_52$Ba)r0tj5@mLi#Iqj/an<d/t
%O/$PRP\<iohp2I-;@UAlE!;gkf>W`,=q"T&f2[iI'L$,a"rUl_?9HX)08(!C8kYU(9a,-"[5AdqFK9L&e"`KV&7Mc"4f=_Eg.Y8t
%)_kQL=B'-*A;7L1KQ:D=EN];HFq]O:,=NiNQD([(f%Z:rN^ABG&I8pu\<a;-@:3l):Qq0tLg0AOZ#-K_;#!ej-jDSG"D!Q;EeBe/
%.;5*f)go]o"$DCH^6NS?akY/g*1+e6(`c.C1fO6dn4^+9'<L0)+j7j-W/(b;&DEE+b^J-X>6`u%Aqm75?&1m<*5Knu?/>eseNsp]
%:J;t4PaR#%mOR57M@HEj+!:tIs(Q,.2G+s0<$sPW&S[,ID*TO/FgQ&HIQ?C,<'D#@5Rl2YCoPlN_$\X8d`qnbaja:u837Q\Y5sEP
%6=<NXA8FsG*%VOnFDWdlbXA=:eIhU"&Ik$L'ITq@A8..d+q5RmoI:!X@U]h3A(8GUP?0B<X&/dmB0!qKm10<C:bl!?Mp_rd&9r&(
%WkRug9t]'ieBArUC>$H6:eTD:!+a1U[8a`r(_"6j/<FHrAnRu!L3E[C2/8c.&dO\*Q0*D+gD.q/i"rN_#^?Dc]886h:;J$9)D;3_
%X'snKV/#Y?gaCS2o@7PXD]iBl^fq!)3F9&J.l]l2&rod6mR#9Q@&T'O<F2E8m6P690T=2Yi*+^_6+@GoVkE4LEmZ!cns4D)qlp<2
%K'&/L:]2:]2[*Bl?%GsukR8`R,bY:mJgft/4gltCW"eB1JTm@k",qclAmp8?V?QF><!*00)14,#UnQ/l3p]SX>BnGh]kPX3p$/nX
%UF$S6=O!ac+p.h`>"/Aq%u+3o?"!l7[--g\OHUDjUAlYLe"T12G5S_+<GU`ee'-ld4*67DAZe=I^ibLo3Q3@E:$1=0:O4dAGIh<-
%kXdNL9;CXH@e$qgIY."*;W,ot\l$u5iBW#gTFASljHfpjYT03UK-s*ig\n!>bB_p7C9H0,ru6XcGb='GPLk!2f:`#64Q!l6Y>`gf
%D[>O8mY'#=9Lt4`09ep_JS3Tj:`;"_l-eYd]YO!X*[D<N;Xb(7D::))_=u%dV83.'2q%)OZ=GNp:>=&B%BeB'=aP0\ButG-CnHpr
%#^Ok3_OOLh+_p@m.1P$/Sh0;sdbnR'mC8uL$Kl$`GINg&]lMNo95-@MK5J59$D(_LrFb"%k^X:d[rVn.(R'5DgcG\`T:`g1;iiD6
%mJu!)V,VAMqklD3roBf*[#Od^qku??:\:<jWM!9dPrm@SVZNl$lJ5<k$(8ach,=KV!R4d+E`HP"GfB]nY6m'GZHq9."Xsb)A$k+S
%YC[I3C2s-O0HDJ^g`@sgE=4pTX<>:;@,d[CZ%@@T8l)ZS<dNQh:[YIhOuI"p/)@nnNlMLT'jC3qa%Aif93YV!00:0HA[HWAQ&`2r
%(uF"WV)++S\*^BI=i6[]]"^j5&7e3jr[Jr>-tX+Lr[L'SQY5)\V.4D==C1tV*R9T.YktJC<4UU9]"^k`dB_3Vr[LtSh-Zu\nqfED
%L@)8sqX3IKEkcBPTkCPqYl.RJhG7GV.NN)FP?G`cY0mo&X8]ZA9!<73[2jIVcEpckU]J'-J.rUsG'@$PAT#'S\>s]s?7O?=%HLh9
%mY98?;^e#VRMlHE*I!bYn$CD[J!JkQBDV='kq,L*Ie$S)0TF$=2GX%JoT#kL1F6^u%F3e=-Z>7[qf:ogPmj=c,O)l!9lj?$>NC.W
%c73LhM7\eO8nZD#m;,N1m-2JOB?aGQ:UfF+<u&Ga.'NNJF<J0.Irn`UX<d#g)e<r:c:p(\B@-6q>bErpTudnb>u^km3+_ENE,dh*
%];e+de^aBSWe0;"qpG8^lWZk2gB6QIWXt.DWl%?oGd!L8$?J>`;o_lAMR9JDgDj,'=!lh-.[A;3aZPdt4u)t5G#sq9=%'[\]9B,L
%k*N,@KoJQhSboEdehGX,k,_J6-]sFub.7rX]C)h"Vu-.'J!E'C8T'<K8e[0<QR*^r%b!fMlglKub0PcA@N<-6=G9t?1[_J>LZS2F
%j.AS.QC2UeXRp*jDoZJom,U-]Rh/;#e0G71b=Z\Z.JUESTKRl9:G+/F>6VRGb6hBOfEYPq$i4/`DnF1bDk;LA\?+W]q!>96Yn9V%
%J-%Z?UWoU=)L#<b8#IC&E`qWtj\OCta^kX:.\Xq'=TONQb]-bd8HgkfQ^+s>map_V/"K8^UB*c)=m8J=@M(W@@g*[7\U^d,j"Ia-
%]>mO!817igb@:]WY+Oh?=8`mRgg^M3[?HWk$AAd0!Ud4EX597p@AXT0r!UP7fR_u(5\1ue9?=F`C"m,$!fXg=H)rQ:H65Yp<`R#3
%Re!T?`o*#t8a`hbfua/<gg^N40iuEh=Fn]8&hd$%.r39dY:)TAihLXWQ0oMFDhf)"7E*N[_[>rc=/J(8%P)DQXm$fK-+'hYmBOMX
%,k?\4O-S"]QHVA.4B@P;=J;rOPTq8-D3DqJ"_+Xfi%Kj#f"e9I;U9+mq2O]^gAnW%<-jWRq!G;;RKAo=E4<jpA8\_B]$!]u?o0/g
%*hS_;KKn.K@'hi!k%<Z@[/uLO@pNt&e,YGBIOin]7Q4s"@TSPnP+5pglcQBmZ<^O6d4rbO@*U:(b7Kh`8=TKK@kg@)IGB;UKk<pq
%p+AL1)F:i?(tEe<.:WTfR,tV.b9S0O-Pko@WnqlFYoq@V'B*26/:d9O#.4>28i4<!-V"qK]:3<,:W#>*qU(K[$T=/nF^33C&9Wli
%i7sfuCnP@OZQS!0`MP#4(/VR&gRk<qm0R84/Pp`)U,aim(21%/YI[L;FC#W(h5R5:q4/9Sk>!U*fn93agoCUIGHGc!Tem3aT*;Bi
%**WCM.-8MCCk3LC7TjqP_,F)i^+CoH9AHbB>?]g%!A7V7YAjF#hU99,Okd^JKmAM[FE"d^\ia4?^6F_=.OfFV_/'L%o6e#SdZ=dN
%gW?99d=$21()-]D7<3O]nmg?@;+YQ`beS<$/oIBCnoTF#CQkO.*N[*;lQWmgU32Mp<d>(?$g/9]dh.qkfnHsicZ@hDF-ELpa62dV
%m%Phd<\JG3f>8k1Qg=C@DG>Ko\DCSS[/9TIGQ%Nih_!7EDuWi9ci<RFJ,e!$rnFW+s7Wl,J+IT.oaeh:pV6aY5Q9fs^]3W7qM0Rs
%ec5[8Dnl/9Dh%M:?iAs8s53\)[t"2OYQ*ht^\du5^\uW2q;$N("Y]6ZroS.ujhLW+s8&qu4%!cTjo~>
%AI9_PrivateDataEnd
